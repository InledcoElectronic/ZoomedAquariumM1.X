

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Wed Nov 22 09:53:22 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	swtext1,local,class=CONST,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 1.40
    79                           ; Generated 01/12/2016 GMT
    80                           ; 
    81                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F1508 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011D                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  018E                     	;# 
   172  0191                     	;# 
   173  0191                     	;# 
   174  0192                     	;# 
   175  0193                     	;# 
   176  0193                     	;# 
   177  0194                     	;# 
   178  0195                     	;# 
   179  0196                     	;# 
   180  0197                     	;# 
   181  0199                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019C                     	;# 
   186  019D                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  020C                     	;# 
   190  020D                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  0498                     	;# 
   213  0498                     	;# 
   214  0499                     	;# 
   215  049A                     	;# 
   216  049B                     	;# 
   217  049B                     	;# 
   218  049C                     	;# 
   219  049D                     	;# 
   220  049E                     	;# 
   221  049F                     	;# 
   222  0611                     	;# 
   223  0612                     	;# 
   224  0613                     	;# 
   225  0613                     	;# 
   226  0614                     	;# 
   227  0615                     	;# 
   228  0616                     	;# 
   229  0616                     	;# 
   230  0617                     	;# 
   231  0618                     	;# 
   232  0619                     	;# 
   233  0619                     	;# 
   234  061A                     	;# 
   235  061B                     	;# 
   236  061C                     	;# 
   237  061C                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0F0F                     	;# 
   244  0F10                     	;# 
   245  0F11                     	;# 
   246  0F12                     	;# 
   247  0F13                     	;# 
   248  0F14                     	;# 
   249  0F15                     	;# 
   250  0F16                     	;# 
   251  0F17                     	;# 
   252  0F18                     	;# 
   253  0F19                     	;# 
   254  0F1A                     	;# 
   255  0F1B                     	;# 
   256  0F1C                     	;# 
   257  0F1D                     	;# 
   258  0F1E                     	;# 
   259  0F1F                     	;# 
   260  0F20                     	;# 
   261  0F21                     	;# 
   262  0F22                     	;# 
   263  0F23                     	;# 
   264  0F24                     	;# 
   265  0F25                     	;# 
   266  0F26                     	;# 
   267  0F27                     	;# 
   268  0F28                     	;# 
   269  0F29                     	;# 
   270  0F2A                     	;# 
   271  0F2B                     	;# 
   272  0F2C                     	;# 
   273  0F2D                     	;# 
   274  0F2E                     	;# 
   275  0F2F                     	;# 
   276  0F8C                     	;# 
   277  0F8D                     	;# 
   278  0F91                     	;# 
   279  0F95                     	;# 
   280  0F96                     	;# 
   281  0F97                     	;# 
   282  0F9C                     	;# 
   283  0F9D                     	;# 
   284  0F9E                     	;# 
   285  0FE3                     	;# 
   286  0FE4                     	;# 
   287  0FE5                     	;# 
   288  0FE6                     	;# 
   289  0FE7                     	;# 
   290  0FE8                     	;# 
   291  0FE9                     	;# 
   292  0FEA                     	;# 
   293  0FEB                     	;# 
   294  0FED                     	;# 
   295  0FEE                     	;# 
   296  0FEF                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0097                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009B                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  009F                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  0111                     	;# 
   345  0112                     	;# 
   346  0113                     	;# 
   347  0114                     	;# 
   348  0115                     	;# 
   349  0116                     	;# 
   350  0117                     	;# 
   351  0118                     	;# 
   352  0119                     	;# 
   353  011D                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  018E                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0194                     	;# 
   363  0195                     	;# 
   364  0196                     	;# 
   365  0197                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019C                     	;# 
   371  019D                     	;# 
   372  019E                     	;# 
   373  019F                     	;# 
   374  020C                     	;# 
   375  020D                     	;# 
   376  0211                     	;# 
   377  0211                     	;# 
   378  0212                     	;# 
   379  0212                     	;# 
   380  0213                     	;# 
   381  0213                     	;# 
   382  0214                     	;# 
   383  0214                     	;# 
   384  0215                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0216                     	;# 
   388  0216                     	;# 
   389  0217                     	;# 
   390  0217                     	;# 
   391  0391                     	;# 
   392  0392                     	;# 
   393  0393                     	;# 
   394  0394                     	;# 
   395  0395                     	;# 
   396  0396                     	;# 
   397  0498                     	;# 
   398  0498                     	;# 
   399  0499                     	;# 
   400  049A                     	;# 
   401  049B                     	;# 
   402  049B                     	;# 
   403  049C                     	;# 
   404  049D                     	;# 
   405  049E                     	;# 
   406  049F                     	;# 
   407  0611                     	;# 
   408  0612                     	;# 
   409  0613                     	;# 
   410  0613                     	;# 
   411  0614                     	;# 
   412  0615                     	;# 
   413  0616                     	;# 
   414  0616                     	;# 
   415  0617                     	;# 
   416  0618                     	;# 
   417  0619                     	;# 
   418  0619                     	;# 
   419  061A                     	;# 
   420  061B                     	;# 
   421  061C                     	;# 
   422  061C                     	;# 
   423  0691                     	;# 
   424  0692                     	;# 
   425  0693                     	;# 
   426  0694                     	;# 
   427  0695                     	;# 
   428  0F0F                     	;# 
   429  0F10                     	;# 
   430  0F11                     	;# 
   431  0F12                     	;# 
   432  0F13                     	;# 
   433  0F14                     	;# 
   434  0F15                     	;# 
   435  0F16                     	;# 
   436  0F17                     	;# 
   437  0F18                     	;# 
   438  0F19                     	;# 
   439  0F1A                     	;# 
   440  0F1B                     	;# 
   441  0F1C                     	;# 
   442  0F1D                     	;# 
   443  0F1E                     	;# 
   444  0F1F                     	;# 
   445  0F20                     	;# 
   446  0F21                     	;# 
   447  0F22                     	;# 
   448  0F23                     	;# 
   449  0F24                     	;# 
   450  0F25                     	;# 
   451  0F26                     	;# 
   452  0F27                     	;# 
   453  0F28                     	;# 
   454  0F29                     	;# 
   455  0F2A                     	;# 
   456  0F2B                     	;# 
   457  0F2C                     	;# 
   458  0F2D                     	;# 
   459  0F2E                     	;# 
   460  0F2F                     	;# 
   461  0F8C                     	;# 
   462  0F8D                     	;# 
   463  0F91                     	;# 
   464  0F95                     	;# 
   465  0F96                     	;# 
   466  0F97                     	;# 
   467  0F9C                     	;# 
   468  0F9D                     	;# 
   469  0F9E                     	;# 
   470  0FE3                     	;# 
   471  0FE4                     	;# 
   472  0FE5                     	;# 
   473  0FE6                     	;# 
   474  0FE7                     	;# 
   475  0FE8                     	;# 
   476  0FE9                     	;# 
   477  0FEA                     	;# 
   478  0FEB                     	;# 
   479  0FED                     	;# 
   480  0FEE                     	;# 
   481  0FEF                     	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0008                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001C                     	;# 
   509  008C                     	;# 
   510  008D                     	;# 
   511  008E                     	;# 
   512  0091                     	;# 
   513  0092                     	;# 
   514  0093                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0097                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  010C                     	;# 
   527  010D                     	;# 
   528  010E                     	;# 
   529  0111                     	;# 
   530  0112                     	;# 
   531  0113                     	;# 
   532  0114                     	;# 
   533  0115                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  0118                     	;# 
   537  0119                     	;# 
   538  011D                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  018E                     	;# 
   542  0191                     	;# 
   543  0191                     	;# 
   544  0192                     	;# 
   545  0193                     	;# 
   546  0193                     	;# 
   547  0194                     	;# 
   548  0195                     	;# 
   549  0196                     	;# 
   550  0197                     	;# 
   551  0199                     	;# 
   552  019A                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019C                     	;# 
   556  019D                     	;# 
   557  019E                     	;# 
   558  019F                     	;# 
   559  020C                     	;# 
   560  020D                     	;# 
   561  0211                     	;# 
   562  0211                     	;# 
   563  0212                     	;# 
   564  0212                     	;# 
   565  0213                     	;# 
   566  0213                     	;# 
   567  0214                     	;# 
   568  0214                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0215                     	;# 
   572  0216                     	;# 
   573  0216                     	;# 
   574  0217                     	;# 
   575  0217                     	;# 
   576  0391                     	;# 
   577  0392                     	;# 
   578  0393                     	;# 
   579  0394                     	;# 
   580  0395                     	;# 
   581  0396                     	;# 
   582  0498                     	;# 
   583  0498                     	;# 
   584  0499                     	;# 
   585  049A                     	;# 
   586  049B                     	;# 
   587  049B                     	;# 
   588  049C                     	;# 
   589  049D                     	;# 
   590  049E                     	;# 
   591  049F                     	;# 
   592  0611                     	;# 
   593  0612                     	;# 
   594  0613                     	;# 
   595  0613                     	;# 
   596  0614                     	;# 
   597  0615                     	;# 
   598  0616                     	;# 
   599  0616                     	;# 
   600  0617                     	;# 
   601  0618                     	;# 
   602  0619                     	;# 
   603  0619                     	;# 
   604  061A                     	;# 
   605  061B                     	;# 
   606  061C                     	;# 
   607  061C                     	;# 
   608  0691                     	;# 
   609  0692                     	;# 
   610  0693                     	;# 
   611  0694                     	;# 
   612  0695                     	;# 
   613  0F0F                     	;# 
   614  0F10                     	;# 
   615  0F11                     	;# 
   616  0F12                     	;# 
   617  0F13                     	;# 
   618  0F14                     	;# 
   619  0F15                     	;# 
   620  0F16                     	;# 
   621  0F17                     	;# 
   622  0F18                     	;# 
   623  0F19                     	;# 
   624  0F1A                     	;# 
   625  0F1B                     	;# 
   626  0F1C                     	;# 
   627  0F1D                     	;# 
   628  0F1E                     	;# 
   629  0F1F                     	;# 
   630  0F20                     	;# 
   631  0F21                     	;# 
   632  0F22                     	;# 
   633  0F23                     	;# 
   634  0F24                     	;# 
   635  0F25                     	;# 
   636  0F26                     	;# 
   637  0F27                     	;# 
   638  0F28                     	;# 
   639  0F29                     	;# 
   640  0F2A                     	;# 
   641  0F2B                     	;# 
   642  0F2C                     	;# 
   643  0F2D                     	;# 
   644  0F2E                     	;# 
   645  0F2F                     	;# 
   646  0F8C                     	;# 
   647  0F8D                     	;# 
   648  0F91                     	;# 
   649  0F95                     	;# 
   650  0F96                     	;# 
   651  0F97                     	;# 
   652  0F9C                     	;# 
   653  0F9D                     	;# 
   654  0F9E                     	;# 
   655  0FE3                     	;# 
   656  0FE4                     	;# 
   657  0FE5                     	;# 
   658  0FE6                     	;# 
   659  0FE7                     	;# 
   660  0FE8                     	;# 
   661  0FE9                     	;# 
   662  0FEA                     	;# 
   663  0FEB                     	;# 
   664  0FED                     	;# 
   665  0FEE                     	;# 
   666  0FEF                     	;# 
   667  0000                     	;# 
   668  0001                     	;# 
   669  0002                     	;# 
   670  0003                     	;# 
   671  0004                     	;# 
   672  0005                     	;# 
   673  0006                     	;# 
   674  0007                     	;# 
   675  0008                     	;# 
   676  0009                     	;# 
   677  000A                     	;# 
   678  000B                     	;# 
   679  000C                     	;# 
   680  000D                     	;# 
   681  000E                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0015                     	;# 
   686  0016                     	;# 
   687  0016                     	;# 
   688  0017                     	;# 
   689  0018                     	;# 
   690  0019                     	;# 
   691  001A                     	;# 
   692  001B                     	;# 
   693  001C                     	;# 
   694  008C                     	;# 
   695  008D                     	;# 
   696  008E                     	;# 
   697  0091                     	;# 
   698  0092                     	;# 
   699  0093                     	;# 
   700  0095                     	;# 
   701  0096                     	;# 
   702  0097                     	;# 
   703  0099                     	;# 
   704  009A                     	;# 
   705  009B                     	;# 
   706  009B                     	;# 
   707  009C                     	;# 
   708  009D                     	;# 
   709  009E                     	;# 
   710  009F                     	;# 
   711  010C                     	;# 
   712  010D                     	;# 
   713  010E                     	;# 
   714  0111                     	;# 
   715  0112                     	;# 
   716  0113                     	;# 
   717  0114                     	;# 
   718  0115                     	;# 
   719  0116                     	;# 
   720  0117                     	;# 
   721  0118                     	;# 
   722  0119                     	;# 
   723  011D                     	;# 
   724  018C                     	;# 
   725  018D                     	;# 
   726  018E                     	;# 
   727  0191                     	;# 
   728  0191                     	;# 
   729  0192                     	;# 
   730  0193                     	;# 
   731  0193                     	;# 
   732  0194                     	;# 
   733  0195                     	;# 
   734  0196                     	;# 
   735  0197                     	;# 
   736  0199                     	;# 
   737  019A                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019C                     	;# 
   741  019D                     	;# 
   742  019E                     	;# 
   743  019F                     	;# 
   744  020C                     	;# 
   745  020D                     	;# 
   746  0211                     	;# 
   747  0211                     	;# 
   748  0212                     	;# 
   749  0212                     	;# 
   750  0213                     	;# 
   751  0213                     	;# 
   752  0214                     	;# 
   753  0214                     	;# 
   754  0215                     	;# 
   755  0215                     	;# 
   756  0215                     	;# 
   757  0216                     	;# 
   758  0216                     	;# 
   759  0217                     	;# 
   760  0217                     	;# 
   761  0391                     	;# 
   762  0392                     	;# 
   763  0393                     	;# 
   764  0394                     	;# 
   765  0395                     	;# 
   766  0396                     	;# 
   767  0498                     	;# 
   768  0498                     	;# 
   769  0499                     	;# 
   770  049A                     	;# 
   771  049B                     	;# 
   772  049B                     	;# 
   773  049C                     	;# 
   774  049D                     	;# 
   775  049E                     	;# 
   776  049F                     	;# 
   777  0611                     	;# 
   778  0612                     	;# 
   779  0613                     	;# 
   780  0613                     	;# 
   781  0614                     	;# 
   782  0615                     	;# 
   783  0616                     	;# 
   784  0616                     	;# 
   785  0617                     	;# 
   786  0618                     	;# 
   787  0619                     	;# 
   788  0619                     	;# 
   789  061A                     	;# 
   790  061B                     	;# 
   791  061C                     	;# 
   792  061C                     	;# 
   793  0691                     	;# 
   794  0692                     	;# 
   795  0693                     	;# 
   796  0694                     	;# 
   797  0695                     	;# 
   798  0F0F                     	;# 
   799  0F10                     	;# 
   800  0F11                     	;# 
   801  0F12                     	;# 
   802  0F13                     	;# 
   803  0F14                     	;# 
   804  0F15                     	;# 
   805  0F16                     	;# 
   806  0F17                     	;# 
   807  0F18                     	;# 
   808  0F19                     	;# 
   809  0F1A                     	;# 
   810  0F1B                     	;# 
   811  0F1C                     	;# 
   812  0F1D                     	;# 
   813  0F1E                     	;# 
   814  0F1F                     	;# 
   815  0F20                     	;# 
   816  0F21                     	;# 
   817  0F22                     	;# 
   818  0F23                     	;# 
   819  0F24                     	;# 
   820  0F25                     	;# 
   821  0F26                     	;# 
   822  0F27                     	;# 
   823  0F28                     	;# 
   824  0F29                     	;# 
   825  0F2A                     	;# 
   826  0F2B                     	;# 
   827  0F2C                     	;# 
   828  0F2D                     	;# 
   829  0F2E                     	;# 
   830  0F2F                     	;# 
   831  0F8C                     	;# 
   832  0F8D                     	;# 
   833  0F91                     	;# 
   834  0F95                     	;# 
   835  0F96                     	;# 
   836  0F97                     	;# 
   837  0F9C                     	;# 
   838  0F9D                     	;# 
   839  0F9E                     	;# 
   840  0FE3                     	;# 
   841  0FE4                     	;# 
   842  0FE5                     	;# 
   843  0FE6                     	;# 
   844  0FE7                     	;# 
   845  0FE8                     	;# 
   846  0FE9                     	;# 
   847  0FEA                     	;# 
   848  0FEB                     	;# 
   849  0FED                     	;# 
   850  0FEE                     	;# 
   851  0FEF                     	;# 
   852  0000                     	;# 
   853  0001                     	;# 
   854  0002                     	;# 
   855  0003                     	;# 
   856  0004                     	;# 
   857  0005                     	;# 
   858  0006                     	;# 
   859  0007                     	;# 
   860  0008                     	;# 
   861  0009                     	;# 
   862  000A                     	;# 
   863  000B                     	;# 
   864  000C                     	;# 
   865  000D                     	;# 
   866  000E                     	;# 
   867  0011                     	;# 
   868  0012                     	;# 
   869  0013                     	;# 
   870  0015                     	;# 
   871  0016                     	;# 
   872  0016                     	;# 
   873  0017                     	;# 
   874  0018                     	;# 
   875  0019                     	;# 
   876  001A                     	;# 
   877  001B                     	;# 
   878  001C                     	;# 
   879  008C                     	;# 
   880  008D                     	;# 
   881  008E                     	;# 
   882  0091                     	;# 
   883  0092                     	;# 
   884  0093                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0097                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009B                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009E                     	;# 
   895  009F                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010E                     	;# 
   899  0111                     	;# 
   900  0112                     	;# 
   901  0113                     	;# 
   902  0114                     	;# 
   903  0115                     	;# 
   904  0116                     	;# 
   905  0117                     	;# 
   906  0118                     	;# 
   907  0119                     	;# 
   908  011D                     	;# 
   909  018C                     	;# 
   910  018D                     	;# 
   911  018E                     	;# 
   912  0191                     	;# 
   913  0191                     	;# 
   914  0192                     	;# 
   915  0193                     	;# 
   916  0193                     	;# 
   917  0194                     	;# 
   918  0195                     	;# 
   919  0196                     	;# 
   920  0197                     	;# 
   921  0199                     	;# 
   922  019A                     	;# 
   923  019B                     	;# 
   924  019B                     	;# 
   925  019C                     	;# 
   926  019D                     	;# 
   927  019E                     	;# 
   928  019F                     	;# 
   929  020C                     	;# 
   930  020D                     	;# 
   931  0211                     	;# 
   932  0211                     	;# 
   933  0212                     	;# 
   934  0212                     	;# 
   935  0213                     	;# 
   936  0213                     	;# 
   937  0214                     	;# 
   938  0214                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0215                     	;# 
   942  0216                     	;# 
   943  0216                     	;# 
   944  0217                     	;# 
   945  0217                     	;# 
   946  0391                     	;# 
   947  0392                     	;# 
   948  0393                     	;# 
   949  0394                     	;# 
   950  0395                     	;# 
   951  0396                     	;# 
   952  0498                     	;# 
   953  0498                     	;# 
   954  0499                     	;# 
   955  049A                     	;# 
   956  049B                     	;# 
   957  049B                     	;# 
   958  049C                     	;# 
   959  049D                     	;# 
   960  049E                     	;# 
   961  049F                     	;# 
   962  0611                     	;# 
   963  0612                     	;# 
   964  0613                     	;# 
   965  0613                     	;# 
   966  0614                     	;# 
   967  0615                     	;# 
   968  0616                     	;# 
   969  0616                     	;# 
   970  0617                     	;# 
   971  0618                     	;# 
   972  0619                     	;# 
   973  0619                     	;# 
   974  061A                     	;# 
   975  061B                     	;# 
   976  061C                     	;# 
   977  061C                     	;# 
   978  0691                     	;# 
   979  0692                     	;# 
   980  0693                     	;# 
   981  0694                     	;# 
   982  0695                     	;# 
   983  0F0F                     	;# 
   984  0F10                     	;# 
   985  0F11                     	;# 
   986  0F12                     	;# 
   987  0F13                     	;# 
   988  0F14                     	;# 
   989  0F15                     	;# 
   990  0F16                     	;# 
   991  0F17                     	;# 
   992  0F18                     	;# 
   993  0F19                     	;# 
   994  0F1A                     	;# 
   995  0F1B                     	;# 
   996  0F1C                     	;# 
   997  0F1D                     	;# 
   998  0F1E                     	;# 
   999  0F1F                     	;# 
  1000  0F20                     	;# 
  1001  0F21                     	;# 
  1002  0F22                     	;# 
  1003  0F23                     	;# 
  1004  0F24                     	;# 
  1005  0F25                     	;# 
  1006  0F26                     	;# 
  1007  0F27                     	;# 
  1008  0F28                     	;# 
  1009  0F29                     	;# 
  1010  0F2A                     	;# 
  1011  0F2B                     	;# 
  1012  0F2C                     	;# 
  1013  0F2D                     	;# 
  1014  0F2E                     	;# 
  1015  0F2F                     	;# 
  1016  0F8C                     	;# 
  1017  0F8D                     	;# 
  1018  0F91                     	;# 
  1019  0F95                     	;# 
  1020  0F96                     	;# 
  1021  0F97                     	;# 
  1022  0F9C                     	;# 
  1023  0F9D                     	;# 
  1024  0F9E                     	;# 
  1025  0FE3                     	;# 
  1026  0FE4                     	;# 
  1027  0FE5                     	;# 
  1028  0FE6                     	;# 
  1029  0FE7                     	;# 
  1030  0FE8                     	;# 
  1031  0FE9                     	;# 
  1032  0FEA                     	;# 
  1033  0FEB                     	;# 
  1034  0FED                     	;# 
  1035  0FEE                     	;# 
  1036  0FEF                     	;# 
  1037  0000                     	;# 
  1038  0001                     	;# 
  1039  0002                     	;# 
  1040  0003                     	;# 
  1041  0004                     	;# 
  1042  0005                     	;# 
  1043  0006                     	;# 
  1044  0007                     	;# 
  1045  0008                     	;# 
  1046  0009                     	;# 
  1047  000A                     	;# 
  1048  000B                     	;# 
  1049  000C                     	;# 
  1050  000D                     	;# 
  1051  000E                     	;# 
  1052  0011                     	;# 
  1053  0012                     	;# 
  1054  0013                     	;# 
  1055  0015                     	;# 
  1056  0016                     	;# 
  1057  0016                     	;# 
  1058  0017                     	;# 
  1059  0018                     	;# 
  1060  0019                     	;# 
  1061  001A                     	;# 
  1062  001B                     	;# 
  1063  001C                     	;# 
  1064  008C                     	;# 
  1065  008D                     	;# 
  1066  008E                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0095                     	;# 
  1071  0096                     	;# 
  1072  0097                     	;# 
  1073  0099                     	;# 
  1074  009A                     	;# 
  1075  009B                     	;# 
  1076  009B                     	;# 
  1077  009C                     	;# 
  1078  009D                     	;# 
  1079  009E                     	;# 
  1080  009F                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  010E                     	;# 
  1084  0111                     	;# 
  1085  0112                     	;# 
  1086  0113                     	;# 
  1087  0114                     	;# 
  1088  0115                     	;# 
  1089  0116                     	;# 
  1090  0117                     	;# 
  1091  0118                     	;# 
  1092  0119                     	;# 
  1093  011D                     	;# 
  1094  018C                     	;# 
  1095  018D                     	;# 
  1096  018E                     	;# 
  1097  0191                     	;# 
  1098  0191                     	;# 
  1099  0192                     	;# 
  1100  0193                     	;# 
  1101  0193                     	;# 
  1102  0194                     	;# 
  1103  0195                     	;# 
  1104  0196                     	;# 
  1105  0197                     	;# 
  1106  0199                     	;# 
  1107  019A                     	;# 
  1108  019B                     	;# 
  1109  019B                     	;# 
  1110  019C                     	;# 
  1111  019D                     	;# 
  1112  019E                     	;# 
  1113  019F                     	;# 
  1114  020C                     	;# 
  1115  020D                     	;# 
  1116  0211                     	;# 
  1117  0211                     	;# 
  1118  0212                     	;# 
  1119  0212                     	;# 
  1120  0213                     	;# 
  1121  0213                     	;# 
  1122  0214                     	;# 
  1123  0214                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  0391                     	;# 
  1132  0392                     	;# 
  1133  0393                     	;# 
  1134  0394                     	;# 
  1135  0395                     	;# 
  1136  0396                     	;# 
  1137  0498                     	;# 
  1138  0498                     	;# 
  1139  0499                     	;# 
  1140  049A                     	;# 
  1141  049B                     	;# 
  1142  049B                     	;# 
  1143  049C                     	;# 
  1144  049D                     	;# 
  1145  049E                     	;# 
  1146  049F                     	;# 
  1147  0611                     	;# 
  1148  0612                     	;# 
  1149  0613                     	;# 
  1150  0613                     	;# 
  1151  0614                     	;# 
  1152  0615                     	;# 
  1153  0616                     	;# 
  1154  0616                     	;# 
  1155  0617                     	;# 
  1156  0618                     	;# 
  1157  0619                     	;# 
  1158  0619                     	;# 
  1159  061A                     	;# 
  1160  061B                     	;# 
  1161  061C                     	;# 
  1162  061C                     	;# 
  1163  0691                     	;# 
  1164  0692                     	;# 
  1165  0693                     	;# 
  1166  0694                     	;# 
  1167  0695                     	;# 
  1168  0F0F                     	;# 
  1169  0F10                     	;# 
  1170  0F11                     	;# 
  1171  0F12                     	;# 
  1172  0F13                     	;# 
  1173  0F14                     	;# 
  1174  0F15                     	;# 
  1175  0F16                     	;# 
  1176  0F17                     	;# 
  1177  0F18                     	;# 
  1178  0F19                     	;# 
  1179  0F1A                     	;# 
  1180  0F1B                     	;# 
  1181  0F1C                     	;# 
  1182  0F1D                     	;# 
  1183  0F1E                     	;# 
  1184  0F1F                     	;# 
  1185  0F20                     	;# 
  1186  0F21                     	;# 
  1187  0F22                     	;# 
  1188  0F23                     	;# 
  1189  0F24                     	;# 
  1190  0F25                     	;# 
  1191  0F26                     	;# 
  1192  0F27                     	;# 
  1193  0F28                     	;# 
  1194  0F29                     	;# 
  1195  0F2A                     	;# 
  1196  0F2B                     	;# 
  1197  0F2C                     	;# 
  1198  0F2D                     	;# 
  1199  0F2E                     	;# 
  1200  0F2F                     	;# 
  1201  0F8C                     	;# 
  1202  0F8D                     	;# 
  1203  0F91                     	;# 
  1204  0F95                     	;# 
  1205  0F96                     	;# 
  1206  0F97                     	;# 
  1207  0F9C                     	;# 
  1208  0F9D                     	;# 
  1209  0F9E                     	;# 
  1210  0FE3                     	;# 
  1211  0FE4                     	;# 
  1212  0FE5                     	;# 
  1213  0FE6                     	;# 
  1214  0FE7                     	;# 
  1215  0FE8                     	;# 
  1216  0FE9                     	;# 
  1217  0FEA                     	;# 
  1218  0FEB                     	;# 
  1219  0FED                     	;# 
  1220  0FEE                     	;# 
  1221  0FEF                     	;# 
  1222  0000                     	;# 
  1223  0001                     	;# 
  1224  0002                     	;# 
  1225  0003                     	;# 
  1226  0004                     	;# 
  1227  0005                     	;# 
  1228  0006                     	;# 
  1229  0007                     	;# 
  1230  0008                     	;# 
  1231  0009                     	;# 
  1232  000A                     	;# 
  1233  000B                     	;# 
  1234  000C                     	;# 
  1235  000D                     	;# 
  1236  000E                     	;# 
  1237  0011                     	;# 
  1238  0012                     	;# 
  1239  0013                     	;# 
  1240  0015                     	;# 
  1241  0016                     	;# 
  1242  0016                     	;# 
  1243  0017                     	;# 
  1244  0018                     	;# 
  1245  0019                     	;# 
  1246  001A                     	;# 
  1247  001B                     	;# 
  1248  001C                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  008E                     	;# 
  1252  0091                     	;# 
  1253  0092                     	;# 
  1254  0093                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0099                     	;# 
  1259  009A                     	;# 
  1260  009B                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  009F                     	;# 
  1266  010C                     	;# 
  1267  010D                     	;# 
  1268  010E                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  011D                     	;# 
  1279  018C                     	;# 
  1280  018D                     	;# 
  1281  018E                     	;# 
  1282  0191                     	;# 
  1283  0191                     	;# 
  1284  0192                     	;# 
  1285  0193                     	;# 
  1286  0193                     	;# 
  1287  0194                     	;# 
  1288  0195                     	;# 
  1289  0196                     	;# 
  1290  0197                     	;# 
  1291  0199                     	;# 
  1292  019A                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019C                     	;# 
  1296  019D                     	;# 
  1297  019E                     	;# 
  1298  019F                     	;# 
  1299  020C                     	;# 
  1300  020D                     	;# 
  1301  0211                     	;# 
  1302  0211                     	;# 
  1303  0212                     	;# 
  1304  0212                     	;# 
  1305  0213                     	;# 
  1306  0213                     	;# 
  1307  0214                     	;# 
  1308  0214                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0215                     	;# 
  1312  0216                     	;# 
  1313  0216                     	;# 
  1314  0217                     	;# 
  1315  0217                     	;# 
  1316  0391                     	;# 
  1317  0392                     	;# 
  1318  0393                     	;# 
  1319  0394                     	;# 
  1320  0395                     	;# 
  1321  0396                     	;# 
  1322  0498                     	;# 
  1323  0498                     	;# 
  1324  0499                     	;# 
  1325  049A                     	;# 
  1326  049B                     	;# 
  1327  049B                     	;# 
  1328  049C                     	;# 
  1329  049D                     	;# 
  1330  049E                     	;# 
  1331  049F                     	;# 
  1332  0611                     	;# 
  1333  0612                     	;# 
  1334  0613                     	;# 
  1335  0613                     	;# 
  1336  0614                     	;# 
  1337  0615                     	;# 
  1338  0616                     	;# 
  1339  0616                     	;# 
  1340  0617                     	;# 
  1341  0618                     	;# 
  1342  0619                     	;# 
  1343  0619                     	;# 
  1344  061A                     	;# 
  1345  061B                     	;# 
  1346  061C                     	;# 
  1347  061C                     	;# 
  1348  0691                     	;# 
  1349  0692                     	;# 
  1350  0693                     	;# 
  1351  0694                     	;# 
  1352  0695                     	;# 
  1353  0F0F                     	;# 
  1354  0F10                     	;# 
  1355  0F11                     	;# 
  1356  0F12                     	;# 
  1357  0F13                     	;# 
  1358  0F14                     	;# 
  1359  0F15                     	;# 
  1360  0F16                     	;# 
  1361  0F17                     	;# 
  1362  0F18                     	;# 
  1363  0F19                     	;# 
  1364  0F1A                     	;# 
  1365  0F1B                     	;# 
  1366  0F1C                     	;# 
  1367  0F1D                     	;# 
  1368  0F1E                     	;# 
  1369  0F1F                     	;# 
  1370  0F20                     	;# 
  1371  0F21                     	;# 
  1372  0F22                     	;# 
  1373  0F23                     	;# 
  1374  0F24                     	;# 
  1375  0F25                     	;# 
  1376  0F26                     	;# 
  1377  0F27                     	;# 
  1378  0F28                     	;# 
  1379  0F29                     	;# 
  1380  0F2A                     	;# 
  1381  0F2B                     	;# 
  1382  0F2C                     	;# 
  1383  0F2D                     	;# 
  1384  0F2E                     	;# 
  1385  0F2F                     	;# 
  1386  0F8C                     	;# 
  1387  0F8D                     	;# 
  1388  0F91                     	;# 
  1389  0F95                     	;# 
  1390  0F96                     	;# 
  1391  0F97                     	;# 
  1392  0F9C                     	;# 
  1393  0F9D                     	;# 
  1394  0F9E                     	;# 
  1395  0FE3                     	;# 
  1396  0FE4                     	;# 
  1397  0FE5                     	;# 
  1398  0FE6                     	;# 
  1399  0FE7                     	;# 
  1400  0FE8                     	;# 
  1401  0FE9                     	;# 
  1402  0FEA                     	;# 
  1403  0FEB                     	;# 
  1404  0FED                     	;# 
  1405  0FEE                     	;# 
  1406  0FEF                     	;# 
  1407  0000                     	;# 
  1408  0001                     	;# 
  1409  0002                     	;# 
  1410  0003                     	;# 
  1411  0004                     	;# 
  1412  0005                     	;# 
  1413  0006                     	;# 
  1414  0007                     	;# 
  1415  0008                     	;# 
  1416  0009                     	;# 
  1417  000A                     	;# 
  1418  000B                     	;# 
  1419  000C                     	;# 
  1420  000D                     	;# 
  1421  000E                     	;# 
  1422  0011                     	;# 
  1423  0012                     	;# 
  1424  0013                     	;# 
  1425  0015                     	;# 
  1426  0016                     	;# 
  1427  0016                     	;# 
  1428  0017                     	;# 
  1429  0018                     	;# 
  1430  0019                     	;# 
  1431  001A                     	;# 
  1432  001B                     	;# 
  1433  001C                     	;# 
  1434  008C                     	;# 
  1435  008D                     	;# 
  1436  008E                     	;# 
  1437  0091                     	;# 
  1438  0092                     	;# 
  1439  0093                     	;# 
  1440  0095                     	;# 
  1441  0096                     	;# 
  1442  0097                     	;# 
  1443  0099                     	;# 
  1444  009A                     	;# 
  1445  009B                     	;# 
  1446  009B                     	;# 
  1447  009C                     	;# 
  1448  009D                     	;# 
  1449  009E                     	;# 
  1450  009F                     	;# 
  1451  010C                     	;# 
  1452  010D                     	;# 
  1453  010E                     	;# 
  1454  0111                     	;# 
  1455  0112                     	;# 
  1456  0113                     	;# 
  1457  0114                     	;# 
  1458  0115                     	;# 
  1459  0116                     	;# 
  1460  0117                     	;# 
  1461  0118                     	;# 
  1462  0119                     	;# 
  1463  011D                     	;# 
  1464  018C                     	;# 
  1465  018D                     	;# 
  1466  018E                     	;# 
  1467  0191                     	;# 
  1468  0191                     	;# 
  1469  0192                     	;# 
  1470  0193                     	;# 
  1471  0193                     	;# 
  1472  0194                     	;# 
  1473  0195                     	;# 
  1474  0196                     	;# 
  1475  0197                     	;# 
  1476  0199                     	;# 
  1477  019A                     	;# 
  1478  019B                     	;# 
  1479  019B                     	;# 
  1480  019C                     	;# 
  1481  019D                     	;# 
  1482  019E                     	;# 
  1483  019F                     	;# 
  1484  020C                     	;# 
  1485  020D                     	;# 
  1486  0211                     	;# 
  1487  0211                     	;# 
  1488  0212                     	;# 
  1489  0212                     	;# 
  1490  0213                     	;# 
  1491  0213                     	;# 
  1492  0214                     	;# 
  1493  0214                     	;# 
  1494  0215                     	;# 
  1495  0215                     	;# 
  1496  0215                     	;# 
  1497  0216                     	;# 
  1498  0216                     	;# 
  1499  0217                     	;# 
  1500  0217                     	;# 
  1501  0391                     	;# 
  1502  0392                     	;# 
  1503  0393                     	;# 
  1504  0394                     	;# 
  1505  0395                     	;# 
  1506  0396                     	;# 
  1507  0498                     	;# 
  1508  0498                     	;# 
  1509  0499                     	;# 
  1510  049A                     	;# 
  1511  049B                     	;# 
  1512  049B                     	;# 
  1513  049C                     	;# 
  1514  049D                     	;# 
  1515  049E                     	;# 
  1516  049F                     	;# 
  1517  0611                     	;# 
  1518  0612                     	;# 
  1519  0613                     	;# 
  1520  0613                     	;# 
  1521  0614                     	;# 
  1522  0615                     	;# 
  1523  0616                     	;# 
  1524  0616                     	;# 
  1525  0617                     	;# 
  1526  0618                     	;# 
  1527  0619                     	;# 
  1528  0619                     	;# 
  1529  061A                     	;# 
  1530  061B                     	;# 
  1531  061C                     	;# 
  1532  061C                     	;# 
  1533  0691                     	;# 
  1534  0692                     	;# 
  1535  0693                     	;# 
  1536  0694                     	;# 
  1537  0695                     	;# 
  1538  0F0F                     	;# 
  1539  0F10                     	;# 
  1540  0F11                     	;# 
  1541  0F12                     	;# 
  1542  0F13                     	;# 
  1543  0F14                     	;# 
  1544  0F15                     	;# 
  1545  0F16                     	;# 
  1546  0F17                     	;# 
  1547  0F18                     	;# 
  1548  0F19                     	;# 
  1549  0F1A                     	;# 
  1550  0F1B                     	;# 
  1551  0F1C                     	;# 
  1552  0F1D                     	;# 
  1553  0F1E                     	;# 
  1554  0F1F                     	;# 
  1555  0F20                     	;# 
  1556  0F21                     	;# 
  1557  0F22                     	;# 
  1558  0F23                     	;# 
  1559  0F24                     	;# 
  1560  0F25                     	;# 
  1561  0F26                     	;# 
  1562  0F27                     	;# 
  1563  0F28                     	;# 
  1564  0F29                     	;# 
  1565  0F2A                     	;# 
  1566  0F2B                     	;# 
  1567  0F2C                     	;# 
  1568  0F2D                     	;# 
  1569  0F2E                     	;# 
  1570  0F2F                     	;# 
  1571  0F8C                     	;# 
  1572  0F8D                     	;# 
  1573  0F91                     	;# 
  1574  0F95                     	;# 
  1575  0F96                     	;# 
  1576  0F97                     	;# 
  1577  0F9C                     	;# 
  1578  0F9D                     	;# 
  1579  0F9E                     	;# 
  1580  0FE3                     	;# 
  1581  0FE4                     	;# 
  1582  0FE5                     	;# 
  1583  0FE6                     	;# 
  1584  0FE7                     	;# 
  1585  0FE8                     	;# 
  1586  0FE9                     	;# 
  1587  0FEA                     	;# 
  1588  0FEB                     	;# 
  1589  0FED                     	;# 
  1590  0FEE                     	;# 
  1591  0FEF                     	;# 
  1592  0000                     	;# 
  1593  0001                     	;# 
  1594  0002                     	;# 
  1595  0003                     	;# 
  1596  0004                     	;# 
  1597  0005                     	;# 
  1598  0006                     	;# 
  1599  0007                     	;# 
  1600  0008                     	;# 
  1601  0009                     	;# 
  1602  000A                     	;# 
  1603  000B                     	;# 
  1604  000C                     	;# 
  1605  000D                     	;# 
  1606  000E                     	;# 
  1607  0011                     	;# 
  1608  0012                     	;# 
  1609  0013                     	;# 
  1610  0015                     	;# 
  1611  0016                     	;# 
  1612  0016                     	;# 
  1613  0017                     	;# 
  1614  0018                     	;# 
  1615  0019                     	;# 
  1616  001A                     	;# 
  1617  001B                     	;# 
  1618  001C                     	;# 
  1619  008C                     	;# 
  1620  008D                     	;# 
  1621  008E                     	;# 
  1622  0091                     	;# 
  1623  0092                     	;# 
  1624  0093                     	;# 
  1625  0095                     	;# 
  1626  0096                     	;# 
  1627  0097                     	;# 
  1628  0099                     	;# 
  1629  009A                     	;# 
  1630  009B                     	;# 
  1631  009B                     	;# 
  1632  009C                     	;# 
  1633  009D                     	;# 
  1634  009E                     	;# 
  1635  009F                     	;# 
  1636  010C                     	;# 
  1637  010D                     	;# 
  1638  010E                     	;# 
  1639  0111                     	;# 
  1640  0112                     	;# 
  1641  0113                     	;# 
  1642  0114                     	;# 
  1643  0115                     	;# 
  1644  0116                     	;# 
  1645  0117                     	;# 
  1646  0118                     	;# 
  1647  0119                     	;# 
  1648  011D                     	;# 
  1649  018C                     	;# 
  1650  018D                     	;# 
  1651  018E                     	;# 
  1652  0191                     	;# 
  1653  0191                     	;# 
  1654  0192                     	;# 
  1655  0193                     	;# 
  1656  0193                     	;# 
  1657  0194                     	;# 
  1658  0195                     	;# 
  1659  0196                     	;# 
  1660  0197                     	;# 
  1661  0199                     	;# 
  1662  019A                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019C                     	;# 
  1666  019D                     	;# 
  1667  019E                     	;# 
  1668  019F                     	;# 
  1669  020C                     	;# 
  1670  020D                     	;# 
  1671  0211                     	;# 
  1672  0211                     	;# 
  1673  0212                     	;# 
  1674  0212                     	;# 
  1675  0213                     	;# 
  1676  0213                     	;# 
  1677  0214                     	;# 
  1678  0214                     	;# 
  1679  0215                     	;# 
  1680  0215                     	;# 
  1681  0215                     	;# 
  1682  0216                     	;# 
  1683  0216                     	;# 
  1684  0217                     	;# 
  1685  0217                     	;# 
  1686  0391                     	;# 
  1687  0392                     	;# 
  1688  0393                     	;# 
  1689  0394                     	;# 
  1690  0395                     	;# 
  1691  0396                     	;# 
  1692  0498                     	;# 
  1693  0498                     	;# 
  1694  0499                     	;# 
  1695  049A                     	;# 
  1696  049B                     	;# 
  1697  049B                     	;# 
  1698  049C                     	;# 
  1699  049D                     	;# 
  1700  049E                     	;# 
  1701  049F                     	;# 
  1702  0611                     	;# 
  1703  0612                     	;# 
  1704  0613                     	;# 
  1705  0613                     	;# 
  1706  0614                     	;# 
  1707  0615                     	;# 
  1708  0616                     	;# 
  1709  0616                     	;# 
  1710  0617                     	;# 
  1711  0618                     	;# 
  1712  0619                     	;# 
  1713  0619                     	;# 
  1714  061A                     	;# 
  1715  061B                     	;# 
  1716  061C                     	;# 
  1717  061C                     	;# 
  1718  0691                     	;# 
  1719  0692                     	;# 
  1720  0693                     	;# 
  1721  0694                     	;# 
  1722  0695                     	;# 
  1723  0F0F                     	;# 
  1724  0F10                     	;# 
  1725  0F11                     	;# 
  1726  0F12                     	;# 
  1727  0F13                     	;# 
  1728  0F14                     	;# 
  1729  0F15                     	;# 
  1730  0F16                     	;# 
  1731  0F17                     	;# 
  1732  0F18                     	;# 
  1733  0F19                     	;# 
  1734  0F1A                     	;# 
  1735  0F1B                     	;# 
  1736  0F1C                     	;# 
  1737  0F1D                     	;# 
  1738  0F1E                     	;# 
  1739  0F1F                     	;# 
  1740  0F20                     	;# 
  1741  0F21                     	;# 
  1742  0F22                     	;# 
  1743  0F23                     	;# 
  1744  0F24                     	;# 
  1745  0F25                     	;# 
  1746  0F26                     	;# 
  1747  0F27                     	;# 
  1748  0F28                     	;# 
  1749  0F29                     	;# 
  1750  0F2A                     	;# 
  1751  0F2B                     	;# 
  1752  0F2C                     	;# 
  1753  0F2D                     	;# 
  1754  0F2E                     	;# 
  1755  0F2F                     	;# 
  1756  0F8C                     	;# 
  1757  0F8D                     	;# 
  1758  0F91                     	;# 
  1759  0F95                     	;# 
  1760  0F96                     	;# 
  1761  0F97                     	;# 
  1762  0F9C                     	;# 
  1763  0F9D                     	;# 
  1764  0F9E                     	;# 
  1765  0FE3                     	;# 
  1766  0FE4                     	;# 
  1767  0FE5                     	;# 
  1768  0FE6                     	;# 
  1769  0FE7                     	;# 
  1770  0FE8                     	;# 
  1771  0FE9                     	;# 
  1772  0FEA                     	;# 
  1773  0FEB                     	;# 
  1774  0FED                     	;# 
  1775  0FEE                     	;# 
  1776  0FEF                     	;# 
  1777  0000                     	;# 
  1778  0001                     	;# 
  1779  0002                     	;# 
  1780  0003                     	;# 
  1781  0004                     	;# 
  1782  0005                     	;# 
  1783  0006                     	;# 
  1784  0007                     	;# 
  1785  0008                     	;# 
  1786  0009                     	;# 
  1787  000A                     	;# 
  1788  000B                     	;# 
  1789  000C                     	;# 
  1790  000D                     	;# 
  1791  000E                     	;# 
  1792  0011                     	;# 
  1793  0012                     	;# 
  1794  0013                     	;# 
  1795  0015                     	;# 
  1796  0016                     	;# 
  1797  0016                     	;# 
  1798  0017                     	;# 
  1799  0018                     	;# 
  1800  0019                     	;# 
  1801  001A                     	;# 
  1802  001B                     	;# 
  1803  001C                     	;# 
  1804  008C                     	;# 
  1805  008D                     	;# 
  1806  008E                     	;# 
  1807  0091                     	;# 
  1808  0092                     	;# 
  1809  0093                     	;# 
  1810  0095                     	;# 
  1811  0096                     	;# 
  1812  0097                     	;# 
  1813  0099                     	;# 
  1814  009A                     	;# 
  1815  009B                     	;# 
  1816  009B                     	;# 
  1817  009C                     	;# 
  1818  009D                     	;# 
  1819  009E                     	;# 
  1820  009F                     	;# 
  1821  010C                     	;# 
  1822  010D                     	;# 
  1823  010E                     	;# 
  1824  0111                     	;# 
  1825  0112                     	;# 
  1826  0113                     	;# 
  1827  0114                     	;# 
  1828  0115                     	;# 
  1829  0116                     	;# 
  1830  0117                     	;# 
  1831  0118                     	;# 
  1832  0119                     	;# 
  1833  011D                     	;# 
  1834  018C                     	;# 
  1835  018D                     	;# 
  1836  018E                     	;# 
  1837  0191                     	;# 
  1838  0191                     	;# 
  1839  0192                     	;# 
  1840  0193                     	;# 
  1841  0193                     	;# 
  1842  0194                     	;# 
  1843  0195                     	;# 
  1844  0196                     	;# 
  1845  0197                     	;# 
  1846  0199                     	;# 
  1847  019A                     	;# 
  1848  019B                     	;# 
  1849  019B                     	;# 
  1850  019C                     	;# 
  1851  019D                     	;# 
  1852  019E                     	;# 
  1853  019F                     	;# 
  1854  020C                     	;# 
  1855  020D                     	;# 
  1856  0211                     	;# 
  1857  0211                     	;# 
  1858  0212                     	;# 
  1859  0212                     	;# 
  1860  0213                     	;# 
  1861  0213                     	;# 
  1862  0214                     	;# 
  1863  0214                     	;# 
  1864  0215                     	;# 
  1865  0215                     	;# 
  1866  0215                     	;# 
  1867  0216                     	;# 
  1868  0216                     	;# 
  1869  0217                     	;# 
  1870  0217                     	;# 
  1871  0391                     	;# 
  1872  0392                     	;# 
  1873  0393                     	;# 
  1874  0394                     	;# 
  1875  0395                     	;# 
  1876  0396                     	;# 
  1877  0498                     	;# 
  1878  0498                     	;# 
  1879  0499                     	;# 
  1880  049A                     	;# 
  1881  049B                     	;# 
  1882  049B                     	;# 
  1883  049C                     	;# 
  1884  049D                     	;# 
  1885  049E                     	;# 
  1886  049F                     	;# 
  1887  0611                     	;# 
  1888  0612                     	;# 
  1889  0613                     	;# 
  1890  0613                     	;# 
  1891  0614                     	;# 
  1892  0615                     	;# 
  1893  0616                     	;# 
  1894  0616                     	;# 
  1895  0617                     	;# 
  1896  0618                     	;# 
  1897  0619                     	;# 
  1898  0619                     	;# 
  1899  061A                     	;# 
  1900  061B                     	;# 
  1901  061C                     	;# 
  1902  061C                     	;# 
  1903  0691                     	;# 
  1904  0692                     	;# 
  1905  0693                     	;# 
  1906  0694                     	;# 
  1907  0695                     	;# 
  1908  0F0F                     	;# 
  1909  0F10                     	;# 
  1910  0F11                     	;# 
  1911  0F12                     	;# 
  1912  0F13                     	;# 
  1913  0F14                     	;# 
  1914  0F15                     	;# 
  1915  0F16                     	;# 
  1916  0F17                     	;# 
  1917  0F18                     	;# 
  1918  0F19                     	;# 
  1919  0F1A                     	;# 
  1920  0F1B                     	;# 
  1921  0F1C                     	;# 
  1922  0F1D                     	;# 
  1923  0F1E                     	;# 
  1924  0F1F                     	;# 
  1925  0F20                     	;# 
  1926  0F21                     	;# 
  1927  0F22                     	;# 
  1928  0F23                     	;# 
  1929  0F24                     	;# 
  1930  0F25                     	;# 
  1931  0F26                     	;# 
  1932  0F27                     	;# 
  1933  0F28                     	;# 
  1934  0F29                     	;# 
  1935  0F2A                     	;# 
  1936  0F2B                     	;# 
  1937  0F2C                     	;# 
  1938  0F2D                     	;# 
  1939  0F2E                     	;# 
  1940  0F2F                     	;# 
  1941  0F8C                     	;# 
  1942  0F8D                     	;# 
  1943  0F91                     	;# 
  1944  0F95                     	;# 
  1945  0F96                     	;# 
  1946  0F97                     	;# 
  1947  0F9C                     	;# 
  1948  0F9D                     	;# 
  1949  0F9E                     	;# 
  1950  0FE3                     	;# 
  1951  0FE4                     	;# 
  1952  0FE5                     	;# 
  1953  0FE6                     	;# 
  1954  0FE7                     	;# 
  1955  0FE8                     	;# 
  1956  0FE9                     	;# 
  1957  0FEA                     	;# 
  1958  0FEB                     	;# 
  1959  0FED                     	;# 
  1960  0FEE                     	;# 
  1961  0FEF                     	;# 
  1962  0000                     	;# 
  1963  0001                     	;# 
  1964  0002                     	;# 
  1965  0003                     	;# 
  1966  0004                     	;# 
  1967  0005                     	;# 
  1968  0006                     	;# 
  1969  0007                     	;# 
  1970  0008                     	;# 
  1971  0009                     	;# 
  1972  000A                     	;# 
  1973  000B                     	;# 
  1974  000C                     	;# 
  1975  000D                     	;# 
  1976  000E                     	;# 
  1977  0011                     	;# 
  1978  0012                     	;# 
  1979  0013                     	;# 
  1980  0015                     	;# 
  1981  0016                     	;# 
  1982  0016                     	;# 
  1983  0017                     	;# 
  1984  0018                     	;# 
  1985  0019                     	;# 
  1986  001A                     	;# 
  1987  001B                     	;# 
  1988  001C                     	;# 
  1989  008C                     	;# 
  1990  008D                     	;# 
  1991  008E                     	;# 
  1992  0091                     	;# 
  1993  0092                     	;# 
  1994  0093                     	;# 
  1995  0095                     	;# 
  1996  0096                     	;# 
  1997  0097                     	;# 
  1998  0099                     	;# 
  1999  009A                     	;# 
  2000  009B                     	;# 
  2001  009B                     	;# 
  2002  009C                     	;# 
  2003  009D                     	;# 
  2004  009E                     	;# 
  2005  009F                     	;# 
  2006  010C                     	;# 
  2007  010D                     	;# 
  2008  010E                     	;# 
  2009  0111                     	;# 
  2010  0112                     	;# 
  2011  0113                     	;# 
  2012  0114                     	;# 
  2013  0115                     	;# 
  2014  0116                     	;# 
  2015  0117                     	;# 
  2016  0118                     	;# 
  2017  0119                     	;# 
  2018  011D                     	;# 
  2019  018C                     	;# 
  2020  018D                     	;# 
  2021  018E                     	;# 
  2022  0191                     	;# 
  2023  0191                     	;# 
  2024  0192                     	;# 
  2025  0193                     	;# 
  2026  0193                     	;# 
  2027  0194                     	;# 
  2028  0195                     	;# 
  2029  0196                     	;# 
  2030  0197                     	;# 
  2031  0199                     	;# 
  2032  019A                     	;# 
  2033  019B                     	;# 
  2034  019B                     	;# 
  2035  019C                     	;# 
  2036  019D                     	;# 
  2037  019E                     	;# 
  2038  019F                     	;# 
  2039  020C                     	;# 
  2040  020D                     	;# 
  2041  0211                     	;# 
  2042  0211                     	;# 
  2043  0212                     	;# 
  2044  0212                     	;# 
  2045  0213                     	;# 
  2046  0213                     	;# 
  2047  0214                     	;# 
  2048  0214                     	;# 
  2049  0215                     	;# 
  2050  0215                     	;# 
  2051  0215                     	;# 
  2052  0216                     	;# 
  2053  0216                     	;# 
  2054  0217                     	;# 
  2055  0217                     	;# 
  2056  0391                     	;# 
  2057  0392                     	;# 
  2058  0393                     	;# 
  2059  0394                     	;# 
  2060  0395                     	;# 
  2061  0396                     	;# 
  2062  0498                     	;# 
  2063  0498                     	;# 
  2064  0499                     	;# 
  2065  049A                     	;# 
  2066  049B                     	;# 
  2067  049B                     	;# 
  2068  049C                     	;# 
  2069  049D                     	;# 
  2070  049E                     	;# 
  2071  049F                     	;# 
  2072  0611                     	;# 
  2073  0612                     	;# 
  2074  0613                     	;# 
  2075  0613                     	;# 
  2076  0614                     	;# 
  2077  0615                     	;# 
  2078  0616                     	;# 
  2079  0616                     	;# 
  2080  0617                     	;# 
  2081  0618                     	;# 
  2082  0619                     	;# 
  2083  0619                     	;# 
  2084  061A                     	;# 
  2085  061B                     	;# 
  2086  061C                     	;# 
  2087  061C                     	;# 
  2088  0691                     	;# 
  2089  0692                     	;# 
  2090  0693                     	;# 
  2091  0694                     	;# 
  2092  0695                     	;# 
  2093  0F0F                     	;# 
  2094  0F10                     	;# 
  2095  0F11                     	;# 
  2096  0F12                     	;# 
  2097  0F13                     	;# 
  2098  0F14                     	;# 
  2099  0F15                     	;# 
  2100  0F16                     	;# 
  2101  0F17                     	;# 
  2102  0F18                     	;# 
  2103  0F19                     	;# 
  2104  0F1A                     	;# 
  2105  0F1B                     	;# 
  2106  0F1C                     	;# 
  2107  0F1D                     	;# 
  2108  0F1E                     	;# 
  2109  0F1F                     	;# 
  2110  0F20                     	;# 
  2111  0F21                     	;# 
  2112  0F22                     	;# 
  2113  0F23                     	;# 
  2114  0F24                     	;# 
  2115  0F25                     	;# 
  2116  0F26                     	;# 
  2117  0F27                     	;# 
  2118  0F28                     	;# 
  2119  0F29                     	;# 
  2120  0F2A                     	;# 
  2121  0F2B                     	;# 
  2122  0F2C                     	;# 
  2123  0F2D                     	;# 
  2124  0F2E                     	;# 
  2125  0F2F                     	;# 
  2126  0F8C                     	;# 
  2127  0F8D                     	;# 
  2128  0F91                     	;# 
  2129  0F95                     	;# 
  2130  0F96                     	;# 
  2131  0F97                     	;# 
  2132  0F9C                     	;# 
  2133  0F9D                     	;# 
  2134  0F9E                     	;# 
  2135  0FE3                     	;# 
  2136  0FE4                     	;# 
  2137  0FE5                     	;# 
  2138  0FE6                     	;# 
  2139  0FE7                     	;# 
  2140  0FE8                     	;# 
  2141  0FE9                     	;# 
  2142  0FEA                     	;# 
  2143  0FEB                     	;# 
  2144  0FED                     	;# 
  2145  0FEE                     	;# 
  2146  0FEF                     	;# 
  2147  0000                     	;# 
  2148  0001                     	;# 
  2149  0002                     	;# 
  2150  0003                     	;# 
  2151  0004                     	;# 
  2152  0005                     	;# 
  2153  0006                     	;# 
  2154  0007                     	;# 
  2155  0008                     	;# 
  2156  0009                     	;# 
  2157  000A                     	;# 
  2158  000B                     	;# 
  2159  000C                     	;# 
  2160  000D                     	;# 
  2161  000E                     	;# 
  2162  0011                     	;# 
  2163  0012                     	;# 
  2164  0013                     	;# 
  2165  0015                     	;# 
  2166  0016                     	;# 
  2167  0016                     	;# 
  2168  0017                     	;# 
  2169  0018                     	;# 
  2170  0019                     	;# 
  2171  001A                     	;# 
  2172  001B                     	;# 
  2173  001C                     	;# 
  2174  008C                     	;# 
  2175  008D                     	;# 
  2176  008E                     	;# 
  2177  0091                     	;# 
  2178  0092                     	;# 
  2179  0093                     	;# 
  2180  0095                     	;# 
  2181  0096                     	;# 
  2182  0097                     	;# 
  2183  0099                     	;# 
  2184  009A                     	;# 
  2185  009B                     	;# 
  2186  009B                     	;# 
  2187  009C                     	;# 
  2188  009D                     	;# 
  2189  009E                     	;# 
  2190  009F                     	;# 
  2191  010C                     	;# 
  2192  010D                     	;# 
  2193  010E                     	;# 
  2194  0111                     	;# 
  2195  0112                     	;# 
  2196  0113                     	;# 
  2197  0114                     	;# 
  2198  0115                     	;# 
  2199  0116                     	;# 
  2200  0117                     	;# 
  2201  0118                     	;# 
  2202  0119                     	;# 
  2203  011D                     	;# 
  2204  018C                     	;# 
  2205  018D                     	;# 
  2206  018E                     	;# 
  2207  0191                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0193                     	;# 
  2211  0193                     	;# 
  2212  0194                     	;# 
  2213  0195                     	;# 
  2214  0196                     	;# 
  2215  0197                     	;# 
  2216  0199                     	;# 
  2217  019A                     	;# 
  2218  019B                     	;# 
  2219  019B                     	;# 
  2220  019C                     	;# 
  2221  019D                     	;# 
  2222  019E                     	;# 
  2223  019F                     	;# 
  2224  020C                     	;# 
  2225  020D                     	;# 
  2226  0211                     	;# 
  2227  0211                     	;# 
  2228  0212                     	;# 
  2229  0212                     	;# 
  2230  0213                     	;# 
  2231  0213                     	;# 
  2232  0214                     	;# 
  2233  0214                     	;# 
  2234  0215                     	;# 
  2235  0215                     	;# 
  2236  0215                     	;# 
  2237  0216                     	;# 
  2238  0216                     	;# 
  2239  0217                     	;# 
  2240  0217                     	;# 
  2241  0391                     	;# 
  2242  0392                     	;# 
  2243  0393                     	;# 
  2244  0394                     	;# 
  2245  0395                     	;# 
  2246  0396                     	;# 
  2247  0498                     	;# 
  2248  0498                     	;# 
  2249  0499                     	;# 
  2250  049A                     	;# 
  2251  049B                     	;# 
  2252  049B                     	;# 
  2253  049C                     	;# 
  2254  049D                     	;# 
  2255  049E                     	;# 
  2256  049F                     	;# 
  2257  0611                     	;# 
  2258  0612                     	;# 
  2259  0613                     	;# 
  2260  0613                     	;# 
  2261  0614                     	;# 
  2262  0615                     	;# 
  2263  0616                     	;# 
  2264  0616                     	;# 
  2265  0617                     	;# 
  2266  0618                     	;# 
  2267  0619                     	;# 
  2268  0619                     	;# 
  2269  061A                     	;# 
  2270  061B                     	;# 
  2271  061C                     	;# 
  2272  061C                     	;# 
  2273  0691                     	;# 
  2274  0692                     	;# 
  2275  0693                     	;# 
  2276  0694                     	;# 
  2277  0695                     	;# 
  2278  0F0F                     	;# 
  2279  0F10                     	;# 
  2280  0F11                     	;# 
  2281  0F12                     	;# 
  2282  0F13                     	;# 
  2283  0F14                     	;# 
  2284  0F15                     	;# 
  2285  0F16                     	;# 
  2286  0F17                     	;# 
  2287  0F18                     	;# 
  2288  0F19                     	;# 
  2289  0F1A                     	;# 
  2290  0F1B                     	;# 
  2291  0F1C                     	;# 
  2292  0F1D                     	;# 
  2293  0F1E                     	;# 
  2294  0F1F                     	;# 
  2295  0F20                     	;# 
  2296  0F21                     	;# 
  2297  0F22                     	;# 
  2298  0F23                     	;# 
  2299  0F24                     	;# 
  2300  0F25                     	;# 
  2301  0F26                     	;# 
  2302  0F27                     	;# 
  2303  0F28                     	;# 
  2304  0F29                     	;# 
  2305  0F2A                     	;# 
  2306  0F2B                     	;# 
  2307  0F2C                     	;# 
  2308  0F2D                     	;# 
  2309  0F2E                     	;# 
  2310  0F2F                     	;# 
  2311  0F8C                     	;# 
  2312  0F8D                     	;# 
  2313  0F91                     	;# 
  2314  0F95                     	;# 
  2315  0F96                     	;# 
  2316  0F97                     	;# 
  2317  0F9C                     	;# 
  2318  0F9D                     	;# 
  2319  0F9E                     	;# 
  2320  0FE3                     	;# 
  2321  0FE4                     	;# 
  2322  0FE5                     	;# 
  2323  0FE6                     	;# 
  2324  0FE7                     	;# 
  2325  0FE8                     	;# 
  2326  0FE9                     	;# 
  2327  0FEA                     	;# 
  2328  0FEB                     	;# 
  2329  0FED                     	;# 
  2330  0FEE                     	;# 
  2331  0FEF                     	;# 
  2332                           
  2333                           	psect	idataBANK0
  2334  0D88                     __pidataBANK0:	
  2335                           
  2336                           ;initializer for Led_DynamicCloud@F4456
  2337  0D88  3490               	retlw	144
  2338  0D89  3401               	retlw	1
  2339  0D8A  3440               	retlw	64
  2340  0D8B  3401               	retlw	1
  2341                           
  2342                           ;initializer for Led_DynamicStorm@F4467
  2343  0D8C  34F4               	retlw	244
  2344  0D8D  3401               	retlw	1
  2345  0D8E  3440               	retlw	64
  2346  0D8F  3400               	retlw	0
  2347                           
  2348                           ;initializer for _loadDuty
  2349  0D90  34BF               	retlw	low _PWM1_LoadDutyValue
  2350  0D91  340D               	retlw	high _PWM1_LoadDutyValue
  2351  0D92  34B0               	retlw	low _PWM3_LoadDutyValue
  2352  0D93  340D               	retlw	high _PWM3_LoadDutyValue
  2353                           
  2354                           	psect	stringtext
  2355  07F5                     __pstringtext:	
  2356  07F5                     _GAIN:	
  2357  07F5  3407               	retlw	7
  2358  07F6  3405               	retlw	5
  2359  07F7  3403               	retlw	3
  2360  07F8  3401               	retlw	1
  2361  07F9  3400               	retlw	0
  2362  07FA                     __end_of_GAIN:	
  2363  07FA                     _VOLUME:	
  2364  07FA  340E               	retlw	14
  2365  07FB  3411               	retlw	17
  2366  07FC  3414               	retlw	20
  2367  07FD  3417               	retlw	23
  2368  07FE  341A               	retlw	26
  2369  07FF                     __end_of_VOLUME:	
  2370  0016                     _TMR1	set	22
  2371  000B                     _INTCONbits	set	11
  2372  0011                     _PIR1bits	set	17
  2373  001B                     _PR2	set	27
  2374  0018                     _T1CON	set	24
  2375  0018                     _T1CONbits	set	24
  2376  001C                     _T2CON	set	28
  2377  001C                     _T2CONbits	set	28
  2378  0015                     _TMR0	set	21
  2379  001A                     _TMR2	set	26
  2380  005F                     _GIE	set	95
  2381  009B                     _ADRES	set	155
  2382  009D                     _ADCON0	set	157
  2383  009D                     _ADCON0bits	set	157
  2384  009E                     _ADCON1	set	158
  2385  009F                     _ADCON2	set	159
  2386  0095                     _OPTION_REG	set	149
  2387  0095                     _OPTION_REGbits	set	149
  2388  0099                     _OSCCON	set	153
  2389  009A                     _OSCSTATbits	set	154
  2390  0091                     _PIE1bits	set	145
  2391  008C                     _TRISA	set	140
  2392  008D                     _TRISB	set	141
  2393  008E                     _TRISC	set	142
  2394  010C                     _LATA	set	268
  2395  010D                     _LATB	set	269
  2396  010E                     _LATC	set	270
  2397  0191                     _PMADR	set	401
  2398  0193                     _PMDAT	set	403
  2399  019B                     _SPBRG	set	411
  2400  018C                     _ANSELA	set	396
  2401  018D                     _ANSELB	set	397
  2402  018E                     _ANSELC	set	398
  2403  019F                     _BAUDCON	set	415
  2404  0196                     _PMCON2	set	406
  2405  0193                     _PMDATL	set	403
  2406  0199                     _RCREG	set	409
  2407  019D                     _RCSTA	set	413
  2408  019A                     _TXREG	set	410
  2409  019E                     _TXSTA	set	414
  2410  0CAE                     _CFGS	set	3246
  2411  0CAC                     _FREE	set	3244
  2412  0CAD                     _LWLO	set	3245
  2413  0CA8                     _RD	set	3240
  2414  0CA9                     _WR	set	3241
  2415  0CAA                     _WREN	set	3242
  2416  020C                     _WPUA	set	524
  2417  020D                     _WPUB	set	525
  2418  0611                     _PWM1DC	set	1553
  2419  0614                     _PWM2DC	set	1556
  2420  0617                     _PWM3DC	set	1559
  2421  061A                     _PWM4DC	set	1562
  2422  0613                     _PWM1CON	set	1555
  2423  0616                     _PWM2CON	set	1558
  2424  0619                     _PWM3CON	set	1561
  2425  061C                     _PWM4CON	set	1564
  2426                           
  2427                           ; #config settings
  2428  0000                     
  2429                           	psect	cinit
  2430  0022                     start_initialization:	
  2431  0022                     __initialization:	
  2432                           
  2433                           ; Initialize objects allocated to BANK0
  2434  0022  3088               	movlw	low __pidataBANK0
  2435  0023  0084               	movwf	4
  2436  0024  308D               	movlw	(high __pidataBANK0)| (0+128)
  2437  0025  0085               	movwf	5
  2438  0026  305B               	movlw	low __pdataBANK0
  2439  0027  0086               	movwf	6
  2440  0028  3000               	movlw	high __pdataBANK0
  2441  0029  0087               	movwf	7
  2442  002A  300C               	movlw	12
  2443  002B  318D  254C  3180   	fcall	init_ram
  2444                           
  2445                           ; Clear objects allocated to BANK0
  2446  002E  3020               	movlw	low __pbssBANK0
  2447  002F  0084               	movwf	4
  2448  0030  3000               	movlw	high __pbssBANK0
  2449  0031  0085               	movwf	5
  2450  0032  302A               	movlw	42
  2451  0033  318D  2546  3180   	fcall	clear_ram0
  2452                           
  2453                           ; Clear objects allocated to BANK1
  2454  0036  30A0               	movlw	low __pbssBANK1
  2455  0037  0084               	movwf	4
  2456  0038  3000               	movlw	high __pbssBANK1
  2457  0039  0085               	movwf	5
  2458  003A  3040               	movlw	64
  2459  003B  318D  2546         	fcall	clear_ram0
  2460  003D                     end_of_initialization:	
  2461                           ;End of C runtime variable initialization code
  2462                           
  2463  003D                     __end_of__initialization:	
  2464  003D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2465  003E  0020               	movlb	0
  2466  003F  3186  2EF7         	ljmp	_main	;jump to C main() function
  2467                           
  2468                           	psect	bssBANK0
  2469  0020                     __pbssBANK0:	
  2470  0020                     _gLedRunPara:	
  2471  0020                     	ds	9
  2472  0029                     Audio_GetValue@cnt:	
  2473  0029                     	ds	2
  2474  002B                     Audio_GetValue@max:	
  2475  002B                     	ds	2
  2476  002D                     Audio_GetValue@min:	
  2477  002D                     	ds	2
  2478  002F                     Key_Scan@idleCount:	
  2479  002F                     	ds	2
  2480  0031                     _adc_result:	
  2481  0031                     	ds	2
  2482  0033                     _audio_value:	
  2483  0033                     	ds	2
  2484  0035                     _eusart_rcv_isr_handler:	
  2485  0035                     	ds	2
  2486  0037                     _key_idle_cb:	
  2487  0037                     	ds	2
  2488  0039                     _key_press_cb:	
  2489  0039                     	ds	2
  2490  003B                     _tmr0_isr_handler:	
  2491  003B                     	ds	2
  2492  003D                     _tmr1_gate_isr_handler:	
  2493  003D                     	ds	2
  2494  003F                     _tmr1_isr_handler:	
  2495  003F                     	ds	2
  2496  0041                     _tmr2_isr_handler:	
  2497  0041                     	ds	2
  2498  0043                     Key_Scan@lastKey:	
  2499  0043                     	ds	1
  2500  0044                     Key_Scan@rptCount:	
  2501  0044                     	ds	1
  2502  0045                     Led_Run@cnt:	
  2503  0045                     	ds	1
  2504  0046                     _keyValue:	
  2505  0046                     	ds	1
  2506  0047                     _txHead:	
  2507  0047                     	ds	1
  2508  0048                     _txRemain:	
  2509  0048                     	ds	1
  2510  0049                     _txTail:	
  2511  0049                     	ds	1
  2512                           
  2513                           	psect	dataBANK0
  2514  005B                     __pdataBANK0:	
  2515  005B                     Led_DynamicCloud@F4456:	
  2516  005B                     	ds	4
  2517  005F                     Led_DynamicStorm@F4467:	
  2518  005F                     	ds	4
  2519  0063                     _loadDuty:	
  2520  0063                     	ds	4
  2521                           
  2522                           	psect	bssBANK1
  2523  00A0                     __pbssBANK1:	
  2524  00A0                     _txBuf:	
  2525  00A0                     	ds	32
  2526  00C0                     _gLedPara:	
  2527  00C0                     	ds	32
  2528                           
  2529                           	psect	inittext
  2530  0D4C                     init_ram:	
  2531  0D4C  00FE               	movwf	126
  2532  0D4D                     initloop:	
  2533  0D4D  0012               	moviw fsr0++
  2534  0D4E  001E               	movwi fsr1++
  2535  0D4F  0BFE               	decfsz	126,f
  2536  0D50  2D4D               	goto	initloop
  2537  0D51  3400               	retlw	0
  2538                           
  2539                           	psect	clrtext
  2540  0D46                     clear_ram0:	
  2541                           ;	Called with FSR0 containing the base address, and
  2542                           ;	WREG with the size to clear
  2543                           
  2544  0D46  0064               	clrwdt	;clear the watchdog before getting into this loop
  2545  0D47                     clrloop0:	
  2546  0D47  0180               	clrf	0	;clear RAM location pointed to by FSR
  2547  0D48  3101               	addfsr 0,1
  2548  0D49  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2549  0D4A  2D47               	goto	clrloop0	;have we reached the end yet?
  2550  0D4B  3400               	retlw	0	;all done for this memory range, return
  2551                           
  2552                           	psect	cstackBANK1
  2553  00E0                     __pcstackBANK1:	
  2554  00E0                     ??_FLASH_WriteBlock:	
  2555  00E0                     ??_Audio_GetValue:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558  00E0                     FLASH_ReadBuffer@buf:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561  00E0                     _Led_Initialize$595:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564                           
  2565                           ; 2 bytes @ 0x0
  2566  00E0                     	ds	1
  2567  00E1                     FLASH_ReadBuffer@i:	
  2568                           
  2569                           ; 1 bytes @ 0x1
  2570  00E1                     	ds	1
  2571  00E2                     ??_Led_InitPara:	
  2572                           
  2573                           ; 1 bytes @ 0x2
  2574  00E2                     	ds	1
  2575  00E3                     FLASH_WriteBlock@start_addr:	
  2576                           
  2577                           ; 2 bytes @ 0x3
  2578  00E3                     	ds	2
  2579  00E5                     FLASH_WriteBlock@state:	
  2580                           
  2581                           ; 1 bytes @ 0x5
  2582  00E5                     	ds	1
  2583  00E6                     FLASH_WriteBlock@i:	
  2584                           
  2585                           ; 1 bytes @ 0x6
  2586  00E6                     	ds	1
  2587                           
  2588                           	psect	cstackCOMMON
  2589  0070                     __pcstackCOMMON:	
  2590  0070                     ?_Led_TurnOffRamp:	
  2591  0070                     ?_Led_TurnOnAllRamp:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594  0070                     ?_Led_TurnOnWhiteRamp:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597  0070                     ?_Led_TurnOnBlueRamp:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600  0070                     ?_Util_IncValue:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603  0070                     ?_Util_DecValue:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606  0070                     ?_Key_Scan:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609  0070                     ?_SYSTEM_Initialize:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0070                     ?_Interrupt_Initialize:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615  0070                     ?_ADC_Initialize_Default:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618  0070                     ?_EUSART_Initialize_Default:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621  0070                     ?_EUSART_Write:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624  0070                     ?_EUSART_Transmit_ISR:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627  0070                     ??_EUSART_Transmit_ISR:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630  0070                     ?_PWM1_Initialize:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633  0070                     ?_PWM1_LoadDutyValue:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636  0070                     ?_PWM2_Initialize:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639  0070                     ?_PWM3_Initialize:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642  0070                     ?_PWM3_LoadDutyValue:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645  0070                     ?_PWM4_Initialize:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648  0070                     ?_TMR2_Initialize_Default:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651  0070                     ?_TMR2_StartTimer:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654  0070                     ?_TMR2_ISR:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657  0070                     ?_OSC_Initialize_Default:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660  0070                     ?_Audio_StopSound:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663  0070                     ?_Audio_SelectSound:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666  0070                     ?_Audio_SetPlayMode:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669  0070                     ?_Audio_SetVolume:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672  0070                     ?_Audio_GetValue:	
  2673                           ; 1 bytes @ 0x0
  2674                           
  2675  0070                     ?_Led_InitPara:	
  2676                           ; 1 bytes @ 0x0
  2677                           
  2678  0070                     ?_Led_Initialize:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681  0070                     ?_Led_SaveParaIfChanged:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684  0070                     ?_Led_Ramp:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687  0070                     ?_Led_RunMusic:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690  0070                     ?_Led_Run:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693  0070                     ?_main:	
  2694                           ; 1 bytes @ 0x0
  2695                           
  2696  0070                     ?_ISR:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699  0070                     ?_PIN_Initialize:	
  2700                           ; 1 bytes @ 0x0
  2701                           
  2702  0070                     ?_Key_Read:	
  2703                           ; 1 bytes @ 0x0
  2704                           
  2705  0070                     ?i1_EUSART_Write:	
  2706                           ; 1 bytes @ 0x0
  2707                           
  2708  0070                     ??i1_EUSART_Write:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711  0070                     ?i1_Audio_StopSound:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0070                     ?i1_Audio_SetPlayMode:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0070                     ?i1_Audio_SetVolume:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0070                     ?i1_Led_Initialize:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0070                     ?i1_Led_TurnOnAllRamp:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0070                     ??i1_Led_TurnOnAllRamp:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0070                     ?i1_Led_TurnOnWhiteRamp:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0070                     ??i1_Led_TurnOnWhiteRamp:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0070                     ?i1_Led_TurnOnBlueRamp:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0070                     ??i1_Led_TurnOnBlueRamp:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0070                     ?i1_Led_TurnOffRamp:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0070                     ??i1_Led_TurnOffRamp:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0070                     ?i1_ADC_Conversion:	
  2748                           ; 1 bytes @ 0x0
  2749                           
  2750  0070                     ?i1___wmul:	
  2751                           ; 2 bytes @ 0x0
  2752                           
  2753  0070                     PWM1_LoadDutyValue@dutyValue:	
  2754                           ; 2 bytes @ 0x0
  2755                           
  2756  0070                     PWM3_LoadDutyValue@dutyValue:	
  2757                           ; 2 bytes @ 0x0
  2758                           
  2759  0070                     Util_IncValue@max:	
  2760                           ; 2 bytes @ 0x0
  2761                           
  2762  0070                     Util_DecValue@min:	
  2763                           ; 2 bytes @ 0x0
  2764                           
  2765  0070                     i1___wmul@multiplier:	
  2766                           ; 2 bytes @ 0x0
  2767                           
  2768                           
  2769                           ; 2 bytes @ 0x0
  2770  0070                     	ds	1
  2771  0071                     i1EUSART_Write@byte:	
  2772  0071                     i1Led_TurnOnAllRamp@i:	
  2773                           ; 1 bytes @ 0x1
  2774                           
  2775  0071                     i1Led_TurnOffRamp@i:	
  2776                           ; 1 bytes @ 0x1
  2777                           
  2778                           
  2779                           ; 1 bytes @ 0x1
  2780  0071                     	ds	1
  2781  0072                     ??_PWM1_LoadDutyValue:	
  2782  0072                     ??_PWM3_LoadDutyValue:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0072                     ??_Audio_SelectSound:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0072                     ??i1_ADC_Conversion:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791  0072                     ??i1_Audio_StopSound:	
  2792                           ; 1 bytes @ 0x2
  2793                           
  2794  0072                     ??i1_Audio_SetPlayMode:	
  2795                           ; 1 bytes @ 0x2
  2796                           
  2797  0072                     ??i1_Audio_SetVolume:	
  2798                           ; 1 bytes @ 0x2
  2799                           
  2800  0072                     Util_IncValue@delta:	
  2801                           ; 1 bytes @ 0x2
  2802                           
  2803  0072                     Util_DecValue@delta:	
  2804                           ; 2 bytes @ 0x2
  2805                           
  2806  0072                     i1___wmul@multiplicand:	
  2807                           ; 2 bytes @ 0x2
  2808                           
  2809                           
  2810                           ; 2 bytes @ 0x2
  2811  0072                     	ds	1
  2812  0073                     Audio_SelectSound@index:	
  2813  0073                     i1ADC_Conversion@chn:	
  2814                           ; 1 bytes @ 0x3
  2815                           
  2816  0073                     i1Audio_StopSound@checksum:	
  2817                           ; 1 bytes @ 0x3
  2818                           
  2819  0073                     i1Audio_SetPlayMode@type:	
  2820                           ; 1 bytes @ 0x3
  2821                           
  2822  0073                     i1Audio_SetVolume@vol:	
  2823                           ; 1 bytes @ 0x3
  2824                           
  2825                           
  2826                           ; 1 bytes @ 0x3
  2827  0073                     	ds	1
  2828  0074                     ??_Util_IncValue:	
  2829  0074                     ??_Util_DecValue:	
  2830                           ; 1 bytes @ 0x4
  2831                           
  2832  0074                     ??_Led_Ramp:	
  2833                           ; 1 bytes @ 0x4
  2834                           
  2835  0074                     ??_Key_Read:	
  2836                           ; 1 bytes @ 0x4
  2837                           
  2838  0074                     ??i1___wmul:	
  2839                           ; 1 bytes @ 0x4
  2840                           
  2841  0074                     Audio_SelectSound@checksum:	
  2842                           ; 1 bytes @ 0x4
  2843                           
  2844  0074                     i1Audio_SetPlayMode@checksum:	
  2845                           ; 1 bytes @ 0x4
  2846                           
  2847  0074                     i1Audio_SetVolume@checksum:	
  2848                           ; 1 bytes @ 0x4
  2849                           
  2850  0074                     Key_Read@value:	
  2851                           ; 1 bytes @ 0x4
  2852                           
  2853  0074                     i1___wmul@product:	
  2854                           ; 2 bytes @ 0x4
  2855                           
  2856                           
  2857                           ; 2 bytes @ 0x4
  2858  0074                     	ds	1
  2859  0075                     ??i1_Led_Initialize:	
  2860                           
  2861                           ; 1 bytes @ 0x5
  2862  0075                     	ds	1
  2863  0076                     ?_Led_DynamicCloud:	
  2864  0076                     ?_Led_DynamicStorm:	
  2865                           ; 1 bytes @ 0x6
  2866                           
  2867  0076                     Led_DynamicCloud@ptp:	
  2868                           ; 1 bytes @ 0x6
  2869                           
  2870  0076                     Led_DynamicStorm@ptp:	
  2871                           ; 2 bytes @ 0x6
  2872                           
  2873                           
  2874                           ; 2 bytes @ 0x6
  2875  0076                     	ds	1
  2876  0077                     i1_Led_Initialize$595:	
  2877                           
  2878                           ; 2 bytes @ 0x7
  2879  0077                     	ds	1
  2880  0078                     ??_Led_DynamicCloud:	
  2881  0078                     ??_Led_DynamicStorm:	
  2882                           ; 1 bytes @ 0x8
  2883                           
  2884  0078                     Util_IncValue@pSrc:	
  2885                           ; 1 bytes @ 0x8
  2886                           
  2887  0078                     Util_DecValue@pSrc:	
  2888                           ; 1 bytes @ 0x8
  2889                           
  2890                           
  2891                           ; 1 bytes @ 0x8
  2892  0078                     	ds	1
  2893  0079                     ?_Led_OnKeyPressed:	
  2894  0079                     Led_OnKeyPressed@key:	
  2895                           ; 1 bytes @ 0x9
  2896                           
  2897                           
  2898                           ; 1 bytes @ 0x9
  2899  0079                     	ds	1
  2900  007A                     ??_Led_OnKeyPressed:	
  2901  007A                     Led_Ramp@i:	
  2902                           ; 1 bytes @ 0xA
  2903                           
  2904                           
  2905                           ; 1 bytes @ 0xA
  2906  007A                     	ds	2
  2907  007C                     ??_Led_RunMusic:	
  2908  007C                     _Led_OnKeyPressed$609:	
  2909                           ; 1 bytes @ 0xC
  2910                           
  2911                           
  2912                           ; 2 bytes @ 0xC
  2913  007C                     	ds	2
  2914  007E                     ??_TMR2_ISR:	
  2915                           
  2916                           	psect	cstackBANK0
  2917  004A                     __pcstackBANK0:	
  2918                           ; 1 bytes @ 0xE
  2919                           
  2920  004A                     ??_Key_Scan:	
  2921  004A                     Led_DynamicCloud@val:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  004A                     Led_DynamicStorm@duty:	
  2925                           ; 2 bytes @ 0x0
  2926                           
  2927                           
  2928                           ; 4 bytes @ 0x0
  2929  004A                     	ds	1
  2930  004B                     Key_Scan@keyNum:	
  2931                           
  2932                           ; 1 bytes @ 0x1
  2933  004B                     	ds	1
  2934  004C                     Led_DynamicCloud@duty:	
  2935                           
  2936                           ; 4 bytes @ 0x2
  2937  004C                     	ds	2
  2938  004E                     Led_DynamicStorm@val:	
  2939                           
  2940                           ; 2 bytes @ 0x4
  2941  004E                     	ds	2
  2942  0050                     Led_DynamicCloud@i:	
  2943  0050                     Led_DynamicStorm@i:	
  2944                           ; 1 bytes @ 0x6
  2945                           
  2946                           
  2947                           ; 1 bytes @ 0x6
  2948  0050                     	ds	1
  2949  0051                     ??_Led_Run:	
  2950                           
  2951                           ; 1 bytes @ 0x7
  2952  0051                     	ds	1
  2953  0052                     ??_ISR:	
  2954                           
  2955                           ; 1 bytes @ 0x8
  2956  0052                     	ds	1
  2957  0053                     ?_FLASH_ReadByte:	
  2958  0053                     ??_Led_TurnOffRamp:	
  2959                           ; 1 bytes @ 0x9
  2960                           
  2961  0053                     ??_Led_TurnOnAllRamp:	
  2962                           ; 1 bytes @ 0x9
  2963                           
  2964  0053                     ??_Led_TurnOnWhiteRamp:	
  2965                           ; 1 bytes @ 0x9
  2966                           
  2967  0053                     ??_Led_TurnOnBlueRamp:	
  2968                           ; 1 bytes @ 0x9
  2969                           
  2970  0053                     ?_Key_SetActionHandler:	
  2971                           ; 1 bytes @ 0x9
  2972                           
  2973  0053                     ??_ADC_Initialize_Default:	
  2974                           ; 1 bytes @ 0x9
  2975                           
  2976  0053                     ??_EUSART_Initialize_Default:	
  2977                           ; 1 bytes @ 0x9
  2978                           
  2979  0053                     ??_EUSART_Write:	
  2980                           ; 1 bytes @ 0x9
  2981                           
  2982  0053                     ??_PWM1_Initialize:	
  2983                           ; 1 bytes @ 0x9
  2984                           
  2985  0053                     ??_PWM2_Initialize:	
  2986                           ; 1 bytes @ 0x9
  2987                           
  2988  0053                     ??_PWM3_Initialize:	
  2989                           ; 1 bytes @ 0x9
  2990                           
  2991  0053                     ??_PWM4_Initialize:	
  2992                           ; 1 bytes @ 0x9
  2993                           
  2994  0053                     ??_TMR2_Initialize_Default:	
  2995                           ; 1 bytes @ 0x9
  2996                           
  2997  0053                     ??_TMR2_StartTimer:	
  2998                           ; 1 bytes @ 0x9
  2999                           
  3000  0053                     ?_TMR2_SetInterruptHandler:	
  3001                           ; 1 bytes @ 0x9
  3002                           
  3003  0053                     ?_FLASH_EraseBlock:	
  3004                           ; 1 bytes @ 0x9
  3005                           
  3006  0053                     ??_OSC_Initialize_Default:	
  3007                           ; 1 bytes @ 0x9
  3008                           
  3009  0053                     ??_PIN_Initialize:	
  3010                           ; 1 bytes @ 0x9
  3011                           
  3012  0053                     ?_ADC_Conversion:	
  3013                           ; 1 bytes @ 0x9
  3014                           
  3015  0053                     ?___wmul:	
  3016                           ; 2 bytes @ 0x9
  3017                           
  3018  0053                     TMR2_SetInterruptHandler@handler:	
  3019                           ; 2 bytes @ 0x9
  3020                           
  3021  0053                     FLASH_EraseBlock@addr:	
  3022                           ; 2 bytes @ 0x9
  3023                           
  3024  0053                     FLASH_ReadByte@addr:	
  3025                           ; 2 bytes @ 0x9
  3026                           
  3027  0053                     Key_SetActionHandler@handler:	
  3028                           ; 2 bytes @ 0x9
  3029                           
  3030  0053                     ___wmul@multiplier:	
  3031                           ; 2 bytes @ 0x9
  3032                           
  3033                           
  3034                           ; 2 bytes @ 0x9
  3035  0053                     	ds	1
  3036  0054                     ??_SYSTEM_Initialize:	
  3037  0054                     EUSART_Write@byte:	
  3038                           ; 1 bytes @ 0xA
  3039                           
  3040  0054                     Led_TurnOnAllRamp@i:	
  3041                           ; 1 bytes @ 0xA
  3042                           
  3043  0054                     Led_TurnOffRamp@i:	
  3044                           ; 1 bytes @ 0xA
  3045                           
  3046                           
  3047                           ; 1 bytes @ 0xA
  3048  0054                     	ds	1
  3049  0055                     ??_FLASH_ReadByte:	
  3050  0055                     ??_Interrupt_Initialize:	
  3051                           ; 1 bytes @ 0xB
  3052                           
  3053  0055                     ??_Key_SetActionHandler:	
  3054                           ; 1 bytes @ 0xB
  3055                           
  3056  0055                     ??_ADC_Conversion:	
  3057                           ; 1 bytes @ 0xB
  3058                           
  3059  0055                     ??_TMR2_SetInterruptHandler:	
  3060                           ; 1 bytes @ 0xB
  3061                           
  3062  0055                     ??_FLASH_EraseBlock:	
  3063                           ; 1 bytes @ 0xB
  3064                           
  3065  0055                     ??_Audio_StopSound:	
  3066                           ; 1 bytes @ 0xB
  3067                           
  3068  0055                     ??_Audio_SetPlayMode:	
  3069                           ; 1 bytes @ 0xB
  3070                           
  3071  0055                     ??_Audio_SetVolume:	
  3072                           ; 1 bytes @ 0xB
  3073                           
  3074  0055                     FLASH_EraseBlock@state:	
  3075                           ; 1 bytes @ 0xB
  3076                           
  3077  0055                     FLASH_ReadByte@state:	
  3078                           ; 1 bytes @ 0xB
  3079                           
  3080  0055                     ___wmul@multiplicand:	
  3081                           ; 1 bytes @ 0xB
  3082                           
  3083                           
  3084                           ; 2 bytes @ 0xB
  3085  0055                     	ds	1
  3086  0056                     ?_FLASH_WriteBlock:	
  3087  0056                     ?_FLASH_ReadBuffer:	
  3088                           ; 1 bytes @ 0xC
  3089                           
  3090  0056                     ADC_Conversion@chn:	
  3091                           ; 1 bytes @ 0xC
  3092                           
  3093  0056                     Audio_StopSound@checksum:	
  3094                           ; 1 bytes @ 0xC
  3095                           
  3096  0056                     Audio_SetPlayMode@type:	
  3097                           ; 1 bytes @ 0xC
  3098                           
  3099  0056                     Audio_SetVolume@vol:	
  3100                           ; 1 bytes @ 0xC
  3101                           
  3102  0056                     FLASH_WriteBlock@addr:	
  3103                           ; 1 bytes @ 0xC
  3104                           
  3105  0056                     FLASH_ReadBuffer@addr:	
  3106                           ; 2 bytes @ 0xC
  3107                           
  3108                           
  3109                           ; 2 bytes @ 0xC
  3110  0056                     	ds	1
  3111  0057                     ??___wmul:	
  3112  0057                     Audio_SetPlayMode@checksum:	
  3113                           ; 1 bytes @ 0xD
  3114                           
  3115  0057                     Audio_SetVolume@checksum:	
  3116                           ; 1 bytes @ 0xD
  3117                           
  3118  0057                     ___wmul@product:	
  3119                           ; 1 bytes @ 0xD
  3120                           
  3121                           
  3122                           ; 2 bytes @ 0xD
  3123  0057                     	ds	1
  3124  0058                     ??_Led_Initialize:	
  3125  0058                     FLASH_WriteBlock@buf:	
  3126                           ; 1 bytes @ 0xE
  3127                           
  3128  0058                     FLASH_ReadBuffer@size:	
  3129                           ; 1 bytes @ 0xE
  3130                           
  3131                           
  3132                           ; 1 bytes @ 0xE
  3133  0058                     	ds	1
  3134  0059                     ??_FLASH_ReadBuffer:	
  3135  0059                     ??_Led_SaveParaIfChanged:	
  3136                           ; 1 bytes @ 0xF
  3137                           
  3138  0059                     Audio_GetValue@value:	
  3139                           ; 1 bytes @ 0xF
  3140                           
  3141                           
  3142                           ; 2 bytes @ 0xF
  3143  0059                     	ds	2
  3144  005B                     ??_main:	
  3145                           
  3146                           	psect	maintext
  3147  06F7                     __pmaintext:	
  3148                           ; 1 bytes @ 0x11
  3149 ;;
  3150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3151 ;;
  3152 ;; *************** function _main *****************
  3153 ;; Defined at:
  3154 ;;		line 27 in file "user/src/main.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : B1F/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3168 ;;      Params:         0       0       0       0
  3169 ;;      Locals:         0       0       0       0
  3170 ;;      Temps:          0       0       0       0
  3171 ;;      Totals:         0       0       0       0
  3172 ;;Total ram usage:        0 bytes
  3173 ;; Hardware stack levels required when called:   11
  3174 ;; This function calls:
  3175 ;;		_Audio_GetValue
  3176 ;;		_Interrupt_Initialize
  3177 ;;		_Led_InitPara
  3178 ;;		_Led_Initialize
  3179 ;;		_Led_SaveParaIfChanged
  3180 ;;		_SYSTEM_Initialize
  3181 ;;		_TMR2_StartTimer
  3182 ;; This function is called by:
  3183 ;;		Startup code after reset
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _main
  3189  06F7                     _main:	
  3190                           
  3191                           ;main.c: 28: SYSTEM_Initialize();
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3195  06F7  318E  26D2  3186   	fcall	_SYSTEM_Initialize
  3196                           
  3197                           ;main.c: 29: Interrupt_Initialize();
  3198  06FA  318D  25DD  3186   	fcall	_Interrupt_Initialize
  3199                           
  3200                           ;main.c: 30: (INTCONbits.GIE = 1);
  3201  06FD  178B               	bsf	11,7	;volatile
  3202                           
  3203                           ;main.c: 31: (INTCONbits.PEIE = 1);
  3204  06FE  170B               	bsf	11,6	;volatile
  3205                           
  3206                           ;main.c: 32: Led_InitPara();
  3207  06FF  3184  24CA  3186   	fcall	_Led_InitPara
  3208                           
  3209                           ;main.c: 33: Led_Initialize();
  3210  0702  3183  2382  3186   	fcall	_Led_Initialize
  3211                           
  3212                           ;main.c: 34: TMR2_StartTimer();
  3213  0705  318D  2519  3186   	fcall	_TMR2_StartTimer
  3214  0708                     l579:	
  3215                           ;main.c: 36: while (1) {
  3216                           
  3217  0708  0064               	clrwdt	;# 
  3218                           
  3219                           ;main.c: 39: if (gLedPara.mOn && (gLedPara.mMode == 3 || gLedPara.mMode == 4)) {
  3220  0709  0021               	movlb	1	; select bank1
  3221  070A  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  3222  070B  2F19               	goto	l3499
  3223  070C  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  3224  070D  3907               	andlw	7
  3225  070E  3A03               	xorlw	3
  3226  070F  1903               	skipnz
  3227  0710  2F16               	goto	l3497
  3228  0711  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  3229  0712  3907               	andlw	7
  3230  0713  3A04               	xorlw	4
  3231  0714  1D03               	skipz
  3232  0715  2F19               	goto	l3499
  3233  0716                     l3497:	
  3234                           
  3235                           ;main.c: 40: Audio_GetValue();
  3236  0716  3183  230E  3186   	fcall	_Audio_GetValue
  3237  0719                     l3499:	
  3238                           
  3239                           ;main.c: 41: }
  3240                           ;main.c: 42: Led_SaveParaIfChanged();
  3241  0719  318D  25CE  3186   	fcall	_Led_SaveParaIfChanged
  3242  071C  2F08               	goto	l579
  3243  071D                     __end_of_main:	
  3244                           
  3245                           	psect	text1
  3246  0D19                     __ptext1:	
  3247 ;; *************** function _TMR2_StartTimer *****************
  3248 ;; Defined at:
  3249 ;;		line 16 in file "driver/src/tmr2.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		None
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3263 ;;      Params:         0       0       0       0
  3264 ;;      Locals:         0       0       0       0
  3265 ;;      Temps:          0       0       0       0
  3266 ;;      Totals:         0       0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    8
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_main
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function _TMR2_StartTimer
  3279  0D19                     _TMR2_StartTimer:	
  3280                           
  3281                           ;tmr2.c: 17: T2CONbits.TMR2ON = 1;
  3282                           
  3283                           ;incstack = 0
  3284                           ; Regs used in _TMR2_StartTimer: []
  3285  0D19  0020               	movlb	0	; select bank0
  3286  0D1A  151C               	bsf	28,2	;volatile
  3287  0D1B  0008               	return
  3288  0D1C                     __end_of_TMR2_StartTimer:	
  3289                           
  3290                           	psect	text2
  3291  0ED2                     __ptext2:	
  3292 ;; *************** function _SYSTEM_Initialize *****************
  3293 ;; Defined at:
  3294 ;;		line 73 in file "user/src/main.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3308 ;;      Params:         0       0       0       0
  3309 ;;      Locals:         0       0       0       0
  3310 ;;      Temps:          0       0       0       0
  3311 ;;      Totals:         0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    9
  3315 ;; This function calls:
  3316 ;;		_ADC_Initialize_Default
  3317 ;;		_EUSART_Initialize_Default
  3318 ;;		_OSC_Initialize_Default
  3319 ;;		_PIN_Initialize
  3320 ;;		_PWM1_Initialize
  3321 ;;		_PWM2_Initialize
  3322 ;;		_PWM3_Initialize
  3323 ;;		_PWM4_Initialize
  3324 ;;		_TMR2_Initialize_Default
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _SYSTEM_Initialize
  3332  0ED2                     _SYSTEM_Initialize:	
  3333                           
  3334                           ;main.c: 75: PIN_Initialize();
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3338  0ED2  318E  266A  318E   	fcall	_PIN_Initialize
  3339                           
  3340                           ;main.c: 76: OSC_Initialize_Default();
  3341  0ED5  318D  2528  318E   	fcall	_OSC_Initialize_Default
  3342                           
  3343                           ;main.c: 77: TMR2_Initialize_Default();
  3344  0ED8  318D  255A  318E   	fcall	_TMR2_Initialize_Default
  3345                           
  3346                           ;main.c: 78: PWM1_Initialize();
  3347  0EDB  318D  252E  318E   	fcall	_PWM1_Initialize
  3348                           
  3349                           ;main.c: 79: PWM2_Initialize();
  3350  0EDE  318D  2534  318E   	fcall	_PWM2_Initialize
  3351                           
  3352                           ;main.c: 80: PWM3_Initialize();
  3353  0EE1  318D  253A  318E   	fcall	_PWM3_Initialize
  3354                           
  3355                           ;main.c: 81: PWM4_Initialize();
  3356  0EE4  318D  2540  318E   	fcall	_PWM4_Initialize
  3357                           
  3358                           ;main.c: 82: EUSART_Initialize_Default();
  3359  0EE7  318E  263D  318E   	fcall	_EUSART_Initialize_Default
  3360                           
  3361                           ;main.c: 83: ADC_Initialize_Default();
  3362  0EEA  318D  2552         	fcall	_ADC_Initialize_Default
  3363  0EEC  0008               	return
  3364  0EED                     __end_of_SYSTEM_Initialize:	
  3365                           
  3366                           	psect	text3
  3367  0D5A                     __ptext3:	
  3368 ;; *************** function _TMR2_Initialize_Default *****************
  3369 ;; Defined at:
  3370 ;;		line 8 in file "driver/src/tmr2.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3384 ;;      Params:         0       0       0       0
  3385 ;;      Locals:         0       0       0       0
  3386 ;;      Temps:          0       0       0       0
  3387 ;;      Totals:         0       0       0       0
  3388 ;;Total ram usage:        0 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    8
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_SYSTEM_Initialize
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _TMR2_Initialize_Default
  3400  0D5A                     _TMR2_Initialize_Default:	
  3401                           
  3402                           ;tmr2.c: 9: T2CON = (0<<0) | (15<<3);
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in _TMR2_Initialize_Default: [wreg+status,2]
  3406  0D5A  3078               	movlw	120
  3407  0D5B  0020               	movlb	0	; select bank0
  3408  0D5C  009C               	movwf	28	;volatile
  3409                           
  3410                           ;tmr2.c: 10: PR2 = 0xF9;
  3411  0D5D  30F9               	movlw	249
  3412  0D5E  009B               	movwf	27	;volatile
  3413                           
  3414                           ;tmr2.c: 11: TMR2 = 0x00;
  3415  0D5F  019A               	clrf	26	;volatile
  3416                           
  3417                           ;tmr2.c: 12: PIR1bits.TMR2IF = 0;
  3418  0D60  1091               	bcf	17,1	;volatile
  3419                           
  3420                           ;tmr2.c: 13: PIE1bits.TMR2IE = 1;
  3421  0D61  0021               	movlb	1	; select bank1
  3422  0D62  1491               	bsf	17,1	;volatile
  3423  0D63  0008               	return
  3424  0D64                     __end_of_TMR2_Initialize_Default:	
  3425                           
  3426                           	psect	text4
  3427  0D40                     __ptext4:	
  3428 ;; *************** function _PWM4_Initialize *****************
  3429 ;; Defined at:
  3430 ;;		line 41 in file "driver/src/pwm.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3444 ;;      Params:         0       0       0       0
  3445 ;;      Locals:         0       0       0       0
  3446 ;;      Temps:          0       0       0       0
  3447 ;;      Totals:         0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    8
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_SYSTEM_Initialize
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _PWM4_Initialize
  3460  0D40                     _PWM4_Initialize:	
  3461                           
  3462                           ;pwm.c: 43: PWM4CON = (1<<7) | (1<<6);
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _PWM4_Initialize: [wreg+status,2]
  3466  0D40  30C0               	movlw	192
  3467  0D41  002C               	movlb	12	; select bank12
  3468  0D42  009C               	movwf	28	;volatile
  3469                           
  3470                           ;pwm.c: 44: PWM4DC = 0;
  3471  0D43  019A               	clrf	26	;volatile
  3472  0D44  019B               	clrf	27	;volatile
  3473  0D45  0008               	return
  3474  0D46                     __end_of_PWM4_Initialize:	
  3475                           
  3476                           	psect	text5
  3477  0D3A                     __ptext5:	
  3478 ;; *************** function _PWM3_Initialize *****************
  3479 ;; Defined at:
  3480 ;;		line 30 in file "driver/src/pwm.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3494 ;;      Params:         0       0       0       0
  3495 ;;      Locals:         0       0       0       0
  3496 ;;      Temps:          0       0       0       0
  3497 ;;      Totals:         0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    8
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_SYSTEM_Initialize
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _PWM3_Initialize
  3510  0D3A                     _PWM3_Initialize:	
  3511                           
  3512                           ;pwm.c: 32: PWM3CON = (1<<7) | (1<<6);
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _PWM3_Initialize: [wreg+status,2]
  3516  0D3A  30C0               	movlw	192
  3517  0D3B  002C               	movlb	12	; select bank12
  3518  0D3C  0099               	movwf	25	;volatile
  3519                           
  3520                           ;pwm.c: 33: PWM3DC = 0;
  3521  0D3D  0197               	clrf	23	;volatile
  3522  0D3E  0198               	clrf	24	;volatile
  3523  0D3F  0008               	return
  3524  0D40                     __end_of_PWM3_Initialize:	
  3525                           
  3526                           	psect	text6
  3527  0D34                     __ptext6:	
  3528 ;; *************** function _PWM2_Initialize *****************
  3529 ;; Defined at:
  3530 ;;		line 19 in file "driver/src/pwm.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3544 ;;      Params:         0       0       0       0
  3545 ;;      Locals:         0       0       0       0
  3546 ;;      Temps:          0       0       0       0
  3547 ;;      Totals:         0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    8
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_SYSTEM_Initialize
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _PWM2_Initialize
  3560  0D34                     _PWM2_Initialize:	
  3561                           
  3562                           ;pwm.c: 21: PWM2CON = (1<<7) | (1<<6);
  3563                           
  3564                           ;incstack = 0
  3565                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
  3566  0D34  30C0               	movlw	192
  3567  0D35  002C               	movlb	12	; select bank12
  3568  0D36  0096               	movwf	22	;volatile
  3569                           
  3570                           ;pwm.c: 22: PWM2DC = 0;
  3571  0D37  0194               	clrf	20	;volatile
  3572  0D38  0195               	clrf	21	;volatile
  3573  0D39  0008               	return
  3574  0D3A                     __end_of_PWM2_Initialize:	
  3575                           
  3576                           	psect	text7
  3577  0D2E                     __ptext7:	
  3578 ;; *************** function _PWM1_Initialize *****************
  3579 ;; Defined at:
  3580 ;;		line 8 in file "driver/src/pwm.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3594 ;;      Params:         0       0       0       0
  3595 ;;      Locals:         0       0       0       0
  3596 ;;      Temps:          0       0       0       0
  3597 ;;      Totals:         0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    8
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_SYSTEM_Initialize
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function _PWM1_Initialize
  3610  0D2E                     _PWM1_Initialize:	
  3611                           
  3612                           ;pwm.c: 10: PWM1CON = (1<<7) | (1<<6);
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
  3616  0D2E  30C0               	movlw	192
  3617  0D2F  002C               	movlb	12	; select bank12
  3618  0D30  0093               	movwf	19	;volatile
  3619                           
  3620                           ;pwm.c: 11: PWM1DC = 0;
  3621  0D31  0191               	clrf	17	;volatile
  3622  0D32  0192               	clrf	18	;volatile
  3623  0D33  0008               	return
  3624  0D34                     __end_of_PWM1_Initialize:	
  3625                           
  3626                           	psect	text8
  3627  0E6A                     __ptext8:	
  3628 ;; *************** function _PIN_Initialize *****************
  3629 ;; Defined at:
  3630 ;;		line 54 in file "user/src/main.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3644 ;;      Params:         0       0       0       0
  3645 ;;      Locals:         0       0       0       0
  3646 ;;      Temps:          0       0       0       0
  3647 ;;      Totals:         0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    8
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_SYSTEM_Initialize
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _PIN_Initialize
  3660  0E6A                     _PIN_Initialize:	
  3661                           
  3662                           ;main.c: 56: LATA = 0x00;
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in _PIN_Initialize: [wreg+status,2]
  3666  0E6A  0022               	movlb	2	; select bank2
  3667  0E6B  018C               	clrf	12	;volatile
  3668                           
  3669                           ;main.c: 57: LATB = 0x80;
  3670  0E6C  3080               	movlw	128
  3671  0E6D  008D               	movwf	13	;volatile
  3672                           
  3673                           ;main.c: 58: LATC = 0x00;
  3674  0E6E  018E               	clrf	14	;volatile
  3675                           
  3676                           ;main.c: 60: TRISA = 0x30;
  3677  0E6F  3030               	movlw	48
  3678  0E70  0021               	movlb	1	; select bank1
  3679  0E71  008C               	movwf	12	;volatile
  3680                           
  3681                           ;main.c: 61: TRISB = 0x60;
  3682  0E72  3060               	movlw	96
  3683  0E73  008D               	movwf	13	;volatile
  3684                           
  3685                           ;main.c: 62: TRISC = 0x05;
  3686  0E74  3005               	movlw	5
  3687  0E75  008E               	movwf	14	;volatile
  3688                           
  3689                           ;main.c: 64: ANSELC = 0x05;
  3690  0E76  3005               	movlw	5
  3691  0E77  0023               	movlb	3	; select bank3
  3692  0E78  008E               	movwf	14	;volatile
  3693                           
  3694                           ;main.c: 65: ANSELB = 0x00;
  3695  0E79  018D               	clrf	13	;volatile
  3696                           
  3697                           ;main.c: 66: ANSELA = 0x00;
  3698  0E7A  018C               	clrf	12	;volatile
  3699                           
  3700                           ;main.c: 68: WPUB = 0x60;
  3701  0E7B  3060               	movlw	96
  3702  0E7C  0024               	movlb	4	; select bank4
  3703  0E7D  008D               	movwf	13	;volatile
  3704                           
  3705                           ;main.c: 69: WPUA = 0x00;
  3706  0E7E  018C               	clrf	12	;volatile
  3707                           
  3708                           ;main.c: 70: OPTION_REGbits.nWPUEN = 0;
  3709  0E7F  0021               	movlb	1	; select bank1
  3710  0E80  1395               	bcf	21,7	;volatile
  3711  0E81  0008               	return
  3712  0E82                     __end_of_PIN_Initialize:	
  3713                           
  3714                           	psect	text9
  3715  0D28                     __ptext9:	
  3716 ;; *************** function _OSC_Initialize_Default *****************
  3717 ;; Defined at:
  3718 ;;		line 6 in file "driver/src/osc.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3732 ;;      Params:         0       0       0       0
  3733 ;;      Locals:         0       0       0       0
  3734 ;;      Temps:          0       0       0       0
  3735 ;;      Totals:         0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    8
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_SYSTEM_Initialize
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _OSC_Initialize_Default
  3748  0D28                     _OSC_Initialize_Default:	
  3749                           
  3750                           ;osc.c: 8: OSCCON = (15<<3) | (2<<0);
  3751                           
  3752                           ;incstack = 0
  3753                           ; Regs used in _OSC_Initialize_Default: [wreg]
  3754  0D28  307A               	movlw	122
  3755  0D29  0021               	movlb	1	; select bank1
  3756  0D2A  0099               	movwf	25	;volatile
  3757  0D2B                     l279:	
  3758                           ;osc.c: 9: while( OSCSTATbits.HFIOFS == 0 );
  3759                           
  3760  0D2B  181A               	btfsc	26,0	;volatile
  3761  0D2C  0008               	return
  3762  0D2D  2D2B               	goto	l279
  3763  0D2E                     __end_of_OSC_Initialize_Default:	
  3764                           
  3765                           	psect	text10
  3766  0E3D                     __ptext10:	
  3767 ;; *************** function _EUSART_Initialize_Default *****************
  3768 ;; Defined at:
  3769 ;;		line 20 in file "driver/src/eusart.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3783 ;;      Params:         0       0       0       0
  3784 ;;      Locals:         0       0       0       0
  3785 ;;      Temps:          0       1       0       0
  3786 ;;      Totals:         0       1       0       0
  3787 ;;Total ram usage:        1 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    8
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_SYSTEM_Initialize
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _EUSART_Initialize_Default
  3799  0E3D                     _EUSART_Initialize_Default:	
  3800                           
  3801                           ;eusart.c: 22: PIE1bits.RCIE = 0;
  3802                           
  3803                           ;incstack = 0
  3804                           ; Regs used in _EUSART_Initialize_Default: [wreg+status,2]
  3805  0E3D  0021               	movlb	1	; select bank1
  3806  0E3E  1291               	bcf	17,5	;volatile
  3807                           
  3808                           ;eusart.c: 23: PIE1bits.TXIE = 0;
  3809  0E3F  1211               	bcf	17,4	;volatile
  3810                           
  3811                           ;eusart.c: 24: BAUDCON = (1<<3);
  3812  0E40  3008               	movlw	8
  3813  0E41  0023               	movlb	3	; select bank3
  3814  0E42  009F               	movwf	31	;volatile
  3815                           
  3816                           ;eusart.c: 25: RCSTA = (1<<7) | (1<<4);
  3817  0E43  3090               	movlw	144
  3818  0E44  009D               	movwf	29	;volatile
  3819                           
  3820                           ;eusart.c: 26: TXSTA = (1<<5) | (1<<2);
  3821  0E45  3024               	movlw	36
  3822  0E46  009E               	movwf	30	;volatile
  3823                           
  3824                           ;eusart.c: 27: SPBRG = 416;
  3825  0E47  3001               	movlw	1
  3826  0E48  009C               	movwf	28	;volatile
  3827  0E49  30A0               	movlw	160
  3828  0E4A  009B               	movwf	27	;volatile
  3829                           
  3830                           ;eusart.c: 30: txTail = 0;
  3831  0E4B  0020               	movlb	0	; select bank0
  3832  0E4C  01C9               	clrf	_txTail
  3833                           
  3834                           ;eusart.c: 31: txHead = 0;
  3835  0E4D  01C7               	clrf	_txHead
  3836                           
  3837                           ;eusart.c: 32: txRemain = sizeof (txBuf );
  3838  0E4E  3020               	movlw	32
  3839  0E4F  00D3               	movwf	??_EUSART_Initialize_Default
  3840  0E50  0853               	movf	??_EUSART_Initialize_Default,w
  3841  0E51  00C8               	movwf	_txRemain
  3842  0E52  0008               	return
  3843  0E53                     __end_of_EUSART_Initialize_Default:	
  3844                           
  3845                           	psect	text11
  3846  0D52                     __ptext11:	
  3847 ;; *************** function _ADC_Initialize_Default *****************
  3848 ;; Defined at:
  3849 ;;		line 14 in file "driver/src/adc.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3863 ;;      Params:         0       0       0       0
  3864 ;;      Locals:         0       0       0       0
  3865 ;;      Temps:          0       0       0       0
  3866 ;;      Totals:         0       0       0       0
  3867 ;;Total ram usage:        0 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    8
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_SYSTEM_Initialize
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _ADC_Initialize_Default
  3879  0D52                     _ADC_Initialize_Default:	
  3880                           
  3881                           ;adc.c: 16: ADCON0 = 0x00;
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _ADC_Initialize_Default: [wreg+status,2]
  3885  0D52  0021               	movlb	1	; select bank1
  3886  0D53  019D               	clrf	29	;volatile
  3887                           
  3888                           ;adc.c: 17: ADCON1 = (1<<7) | (5<<4);
  3889  0D54  30D0               	movlw	208
  3890  0D55  009E               	movwf	30	;volatile
  3891                           
  3892                           ;adc.c: 18: ADCON2 = (0<<4);
  3893  0D56  019F               	clrf	31	;volatile
  3894                           
  3895                           ;adc.c: 19: ADRES = 0x00;
  3896  0D57  019B               	clrf	27	;volatile
  3897  0D58  019C               	clrf	28	;volatile
  3898  0D59  0008               	return
  3899  0D5A                     __end_of_ADC_Initialize_Default:	
  3900                           
  3901                           	psect	text12
  3902  0DCE                     __ptext12:	
  3903 ;; *************** function _Led_SaveParaIfChanged *****************
  3904 ;; Defined at:
  3905 ;;		line 76 in file "user/src/led.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3919 ;;      Params:         0       0       0       0
  3920 ;;      Locals:         0       0       0       0
  3921 ;;      Temps:          0       1       0       0
  3922 ;;      Totals:         0       1       0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:   10
  3926 ;; This function calls:
  3927 ;;		_FLASH_WriteBlock
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _Led_SaveParaIfChanged
  3935  0DCE                     _Led_SaveParaIfChanged:	
  3936                           
  3937                           ;led.c: 77: if (gLedRunPara.mParaChanged) {
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _Led_SaveParaIfChanged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3941  0DCE  0020               	movlb	0	; select bank0
  3942  0DCF  1C28               	btfss	_gLedRunPara+8,0	;volatile
  3943  0DD0  0008               	return
  3944                           
  3945                           ;led.c: 78: gLedRunPara.mParaChanged = 0;
  3946  0DD1  1028               	bcf	_gLedRunPara+8,0	;volatile
  3947                           
  3948                           ;led.c: 79: FLASH_WriteBlock(0xFC0, (uint8_t *) & gLedPara);
  3949  0DD2  30C0               	movlw	192
  3950  0DD3  00D6               	movwf	FLASH_WriteBlock@addr
  3951  0DD4  300F               	movlw	15
  3952  0DD5  00D7               	movwf	FLASH_WriteBlock@addr+1
  3953  0DD6  30C0               	movlw	(low (_gLedPara| 0))& (0+255)
  3954  0DD7  00D9               	movwf	??_Led_SaveParaIfChanged
  3955  0DD8  0859               	movf	??_Led_SaveParaIfChanged,w
  3956  0DD9  00D8               	movwf	FLASH_WriteBlock@buf
  3957  0DDA  3183  23F0         	fcall	_FLASH_WriteBlock
  3958  0DDC  0008               	return
  3959  0DDD                     __end_of_Led_SaveParaIfChanged:	
  3960                           
  3961                           	psect	text13
  3962  03F0                     __ptext13:	
  3963 ;; *************** function _FLASH_WriteBlock *****************
  3964 ;; Defined at:
  3965 ;;		line 35 in file "driver/src/flash.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  addr            2   12[BANK0 ] unsigned int 
  3968 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  3969 ;;		 -> gLedPara(32), 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  start_addr      2    3[BANK1 ] unsigned int 
  3972 ;;  i               1    6[BANK1 ] unsigned char 
  3973 ;;  state           1    5[BANK1 ] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      unsigned char 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3983 ;;      Params:         0       3       0       0
  3984 ;;      Locals:         0       0       4       0
  3985 ;;      Temps:          0       0       3       0
  3986 ;;      Totals:         0       3       7       0
  3987 ;;Total ram usage:       10 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    9
  3990 ;; This function calls:
  3991 ;;		_FLASH_EraseBlock
  3992 ;; This function is called by:
  3993 ;;		_Led_SaveParaIfChanged
  3994 ;;		_FLASH_WriteByte
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _FLASH_WriteBlock
  4000  03F0                     _FLASH_WriteBlock:	
  4001                           
  4002                           ;flash.c: 36: uint16_t start_addr = (uint16_t) (addr & ((4096 - 1) ^ (32 - 1)));
  4003                           
  4004                           ;incstack = 0
  4005                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4006  03F0  30E0               	movlw	224
  4007  03F1  0020               	movlb	0	; select bank0
  4008  03F2  0556               	andwf	FLASH_WriteBlock@addr,w
  4009  03F3  0021               	movlb	1	; select bank1
  4010  03F4  00E3               	movwf	FLASH_WriteBlock@start_addr^(0+128)
  4011  03F5  300F               	movlw	15
  4012  03F6  0020               	movlb	0	; select bank0
  4013  03F7  0557               	andwf	FLASH_WriteBlock@addr+1,w
  4014  03F8  0021               	movlb	1	; select bank1
  4015  03F9  00E4               	movwf	(FLASH_WriteBlock@start_addr+1)^(0+128)
  4016                           
  4017                           ;flash.c: 37: uint8_t i;
  4018                           ;flash.c: 39: if (addr != start_addr) {
  4019  03FA  0864               	movf	(FLASH_WriteBlock@start_addr+1)^(0+128),w
  4020  03FB  0020               	movlb	0	; select bank0
  4021  03FC  0657               	xorwf	FLASH_WriteBlock@addr+1,w
  4022  03FD  1D03               	skipz
  4023  03FE  2C03               	goto	u2665
  4024  03FF  0021               	movlb	1	; select bank1
  4025  0400  0863               	movf	FLASH_WriteBlock@start_addr^(0+128),w
  4026  0401  0020               	movlb	0	; select bank0
  4027  0402  0656               	xorwf	FLASH_WriteBlock@addr,w
  4028  0403                     u2665:	
  4029  0403  1D03               	btfss	3,2
  4030  0404  0008               	return
  4031                           
  4032                           ;flash.c: 41: }
  4033                           ;flash.c: 43: FLASH_EraseBlock(addr);
  4034                           
  4035                           ;flash.c: 40: return 0;
  4036                           ;	Return value of _FLASH_WriteBlock is never used
  4037  0405  0857               	movf	FLASH_WriteBlock@addr+1,w
  4038  0406  00D4               	movwf	FLASH_EraseBlock@addr+1
  4039  0407  0856               	movf	FLASH_WriteBlock@addr,w
  4040  0408  00D3               	movwf	FLASH_EraseBlock@addr
  4041  0409  318F  2760  3183   	fcall	_FLASH_EraseBlock
  4042                           
  4043                           ;flash.c: 44: uint8_t state = GIE;
  4044  040C  3000               	movlw	0
  4045  040D  1B8B               	btfsc	11,7	;volatile
  4046  040E  3001               	movlw	1
  4047  040F  0021               	movlb	1	; select bank1
  4048  0410  00E5               	movwf	FLASH_WriteBlock@state^(0+128)
  4049                           
  4050                           ;flash.c: 45: GIE = 0;
  4051  0411  138B               	bcf	11,7	;volatile
  4052                           
  4053                           ;flash.c: 46: CFGS = 0;
  4054  0412  0023               	movlb	3	; select bank3
  4055  0413  1315               	bcf	21,6	;volatile
  4056                           
  4057                           ;flash.c: 47: WREN = 1;
  4058  0414  1515               	bsf	21,2	;volatile
  4059                           
  4060                           ;flash.c: 48: LWLO = 1;
  4061  0415  1695               	bsf	21,5	;volatile
  4062                           
  4063                           ;flash.c: 50: for (i = 0; i < 32; i++) {
  4064  0416  0021               	movlb	1	; select bank1
  4065  0417  01E6               	clrf	FLASH_WriteBlock@i^(0+128)
  4066  0418  3020               	movlw	32
  4067  0419  0266               	subwf	FLASH_WriteBlock@i^(0+128),w
  4068  041A  1803               	btfsc	3,0
  4069  041B  2C54               	goto	l262
  4070  041C                     l3245:	
  4071                           
  4072                           ;flash.c: 51: PMADR = addr;
  4073  041C  0020               	movlb	0	; select bank0
  4074  041D  0857               	movf	FLASH_WriteBlock@addr+1,w
  4075  041E  0023               	movlb	3	; select bank3
  4076  041F  0092               	movwf	18	;volatile
  4077  0420  0020               	movlb	0	; select bank0
  4078  0421  0856               	movf	FLASH_WriteBlock@addr,w
  4079  0422  0023               	movlb	3	; select bank3
  4080  0423  0091               	movwf	17	;volatile
  4081                           
  4082                           ;flash.c: 52: PMDAT = *(buf+i);
  4083  0424  0021               	movlb	1	; select bank1
  4084  0425  0866               	movf	FLASH_WriteBlock@i^(0+128),w
  4085  0426  0020               	movlb	0	; select bank0
  4086  0427  0758               	addwf	FLASH_WriteBlock@buf,w
  4087  0428  0021               	movlb	1	; select bank1
  4088  0429  00E0               	movwf	??_FLASH_WriteBlock^(0+128)
  4089  042A  0860               	movf	??_FLASH_WriteBlock^(0+128),w
  4090  042B  0086               	movwf	6
  4091  042C  0187               	clrf	7
  4092  042D  0801               	movf	1,w
  4093  042E  00E1               	movwf	(??_FLASH_WriteBlock+1)^(0+128)
  4094  042F  01E2               	clrf	((??_FLASH_WriteBlock+1)^(0+128)+1)
  4095  0430  0861               	movf	(??_FLASH_WriteBlock+1)^(0+128),w
  4096  0431  0023               	movlb	3	; select bank3
  4097  0432  0093               	movwf	19	;volatile
  4098  0433  0021               	movlb	1	; select bank1
  4099  0434  0862               	movf	(??_FLASH_WriteBlock+2)^(0+128),w
  4100  0435  0023               	movlb	3	; select bank3
  4101  0436  0094               	movwf	20	;volatile
  4102                           
  4103                           ;flash.c: 54: if (i == (32 - 1)) {
  4104  0437  301F               	movlw	31
  4105  0438  0021               	movlb	1	; select bank1
  4106  0439  0666               	xorwf	FLASH_WriteBlock@i^(0+128),w
  4107  043A  1D03               	btfss	3,2
  4108  043B  2C3E               	goto	l3253
  4109                           
  4110                           ;flash.c: 55: LWLO = 0;
  4111  043C  0023               	movlb	3	; select bank3
  4112  043D  1295               	bcf	21,5	;volatile
  4113  043E                     l3253:	
  4114                           
  4115                           ;flash.c: 56: }
  4116                           ;flash.c: 58: PMCON2 = 0x55;
  4117  043E  3055               	movlw	85
  4118  043F  0023               	movlb	3	; select bank3
  4119  0440  0096               	movwf	22	;volsfr
  4120                           
  4121                           ;flash.c: 59: PMCON2 = 0xAA;
  4122  0441  30AA               	movlw	170
  4123  0442  0096               	movwf	22	;volsfr
  4124                           
  4125                           ;flash.c: 60: WR = 1;
  4126  0443  1495               	bsf	21,1	;volatile
  4127                           
  4128                           ;flash.c: 61: __nop();
  4129  0444  0000               	nop
  4130                           
  4131                           ;flash.c: 62: __nop();
  4132  0445  0000               	nop
  4133                           
  4134                           ;flash.c: 64: addr++;
  4135  0446  3001               	movlw	1
  4136  0447  0020               	movlb	0	; select bank0
  4137  0448  07D6               	addwf	FLASH_WriteBlock@addr,f
  4138  0449  3000               	movlw	0
  4139  044A  3DD7               	addwfc	FLASH_WriteBlock@addr+1,f
  4140  044B  3001               	movlw	1
  4141  044C  0021               	movlb	1	; select bank1
  4142  044D  00E0               	movwf	??_FLASH_WriteBlock^(0+128)
  4143  044E  0860               	movf	??_FLASH_WriteBlock^(0+128),w
  4144  044F  07E6               	addwf	FLASH_WriteBlock@i^(0+128),f
  4145  0450  3020               	movlw	32
  4146  0451  0266               	subwf	FLASH_WriteBlock@i^(0+128),w
  4147  0452  1C03               	skipc
  4148  0453  2C1C               	goto	l3245
  4149  0454                     l262:	
  4150                           
  4151                           ;flash.c: 65: }
  4152                           ;flash.c: 67: WREN = 0;
  4153  0454  0023               	movlb	3	; select bank3
  4154  0455  1115               	bcf	21,2	;volatile
  4155                           
  4156                           ;flash.c: 68: GIE = state;
  4157  0456  0021               	movlb	1	; select bank1
  4158  0457  1C65               	btfss	FLASH_WriteBlock@state^(0+128),0
  4159  0458  2C5B               	goto	u2700
  4160  0459  178B               	bsf	11,7	;volatile
  4161  045A  0008               	return
  4162  045B                     u2700:	
  4163  045B  138B               	bcf	11,7	;volatile
  4164                           
  4165                           ;flash.c: 70: return 1;
  4166                           ;	Return value of _FLASH_WriteBlock is never used
  4167  045C  0008               	return
  4168  045D                     __end_of_FLASH_WriteBlock:	
  4169                           
  4170                           	psect	text14
  4171  0F60                     __ptext14:	
  4172 ;; *************** function _FLASH_EraseBlock *****************
  4173 ;; Defined at:
  4174 ;;		line 3 in file "driver/src/flash.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  addr            2    9[BANK0 ] unsigned int 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  state           1   11[BANK0 ] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4188 ;;      Params:         0       2       0       0
  4189 ;;      Locals:         0       1       0       0
  4190 ;;      Temps:          0       0       0       0
  4191 ;;      Totals:         0       3       0       0
  4192 ;;Total ram usage:        3 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    8
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_FLASH_WriteBlock
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _FLASH_EraseBlock
  4204  0F60                     _FLASH_EraseBlock:	
  4205                           
  4206                           ;flash.c: 4: uint8_t state = GIE;
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2]
  4210  0F60  3000               	movlw	0
  4211  0F61  1B8B               	btfsc	11,7	;volatile
  4212  0F62  3001               	movlw	1
  4213  0F63  0020               	movlb	0	; select bank0
  4214  0F64  00D5               	movwf	FLASH_EraseBlock@state
  4215                           
  4216                           ;flash.c: 5: GIE = 0;
  4217  0F65  138B               	bcf	11,7	;volatile
  4218                           
  4219                           ;flash.c: 6: PMADR = addr;
  4220  0F66  0854               	movf	FLASH_EraseBlock@addr+1,w
  4221  0F67  0023               	movlb	3	; select bank3
  4222  0F68  0092               	movwf	18	;volatile
  4223  0F69  0020               	movlb	0	; select bank0
  4224  0F6A  0853               	movf	FLASH_EraseBlock@addr,w
  4225  0F6B  0023               	movlb	3	; select bank3
  4226  0F6C  0091               	movwf	17	;volatile
  4227                           
  4228                           ;flash.c: 8: CFGS = 0;
  4229  0F6D  1315               	bcf	21,6	;volatile
  4230                           
  4231                           ;flash.c: 9: FREE = 1;
  4232  0F6E  1615               	bsf	21,4	;volatile
  4233                           
  4234                           ;flash.c: 10: WREN = 1;
  4235  0F6F  1515               	bsf	21,2	;volatile
  4236                           
  4237                           ;flash.c: 12: PMCON2 = 0x55;
  4238  0F70  3055               	movlw	85
  4239  0F71  0096               	movwf	22	;volsfr
  4240                           
  4241                           ;flash.c: 13: PMCON2 = 0xAA;
  4242  0F72  30AA               	movlw	170
  4243  0F73  0096               	movwf	22	;volsfr
  4244                           
  4245                           ;flash.c: 14: WR = 1;
  4246  0F74  1495               	bsf	21,1	;volatile
  4247                           
  4248                           ;flash.c: 15: __nop();
  4249  0F75  0000               	nop
  4250                           
  4251                           ;flash.c: 16: __nop();
  4252  0F76  0000               	nop
  4253                           
  4254                           ;flash.c: 18: WREN = 0;
  4255  0F77  0023               	movlb	3	; select bank3
  4256  0F78  1115               	bcf	21,2	;volatile
  4257                           
  4258                           ;flash.c: 19: GIE = state;
  4259  0F79  0020               	movlb	0	; select bank0
  4260  0F7A  1C55               	btfss	FLASH_EraseBlock@state,0
  4261  0F7B  2F7E               	goto	u2620
  4262  0F7C  178B               	bsf	11,7	;volatile
  4263  0F7D  0008               	return
  4264  0F7E                     u2620:	
  4265  0F7E  138B               	bcf	11,7	;volatile
  4266  0F7F  0008               	return
  4267  0F80                     __end_of_FLASH_EraseBlock:	
  4268                           
  4269                           	psect	text15
  4270  0382                     __ptext15:	
  4271 ;; *************** function _Led_Initialize *****************
  4272 ;; Defined at:
  4273 ;;		line 48 in file "user/src/led.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4287 ;;      Params:         0       0       0       0
  4288 ;;      Locals:         0       0       2       0
  4289 ;;      Temps:          0       2       0       0
  4290 ;;      Totals:         0       2       2       0
  4291 ;;Total ram usage:        4 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:   10
  4294 ;; This function calls:
  4295 ;;		_Audio_SetPlayMode
  4296 ;;		_Audio_SetVolume
  4297 ;;		_Audio_StopSound
  4298 ;;		_Led_TurnOffRamp
  4299 ;;		_Led_TurnOnAllRamp
  4300 ;;		_Led_TurnOnBlueRamp
  4301 ;;		_Led_TurnOnWhiteRamp
  4302 ;; This function is called by:
  4303 ;;		_main
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           
  4308                           ;psect for function _Led_Initialize
  4309  0382                     _Led_Initialize:	
  4310                           
  4311                           ;led.c: 49: _delay((unsigned long)((480)*(16000000/4000.0)));
  4312                           
  4313                           ;incstack = 0
  4314                           ; Regs used in _Led_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4315  0382  300A               	movlw	10
  4316  0383  0020               	movlb	0	; select bank0
  4317  0384  00D9               	movwf	??_Led_Initialize+1
  4318  0385  30BE               	movlw	190
  4319  0386  00D8               	movwf	??_Led_Initialize
  4320  0387  3079               	movlw	121
  4321  0388                     u2977:	
  4322  0388  0B89               	decfsz	9,f
  4323  0389  2B88               	goto	u2977
  4324  038A  0BD8               	decfsz	??_Led_Initialize,f
  4325  038B  2B88               	goto	u2977
  4326  038C  0BD9               	decfsz	??_Led_Initialize+1,f
  4327  038D  2B88               	goto	u2977
  4328                           
  4329                           ;led.c: 50: Audio_StopSound();
  4330  038E  318F  2742  3183   	fcall	_Audio_StopSound
  4331                           
  4332                           ;led.c: 51: _delay((unsigned long)((48)*(16000000/4000.0)));
  4333  0391  30FA               	movlw	250
  4334  0392  0020               	movlb	0	; select bank0
  4335  0393  00D8               	movwf	??_Led_Initialize
  4336  0394  3058               	movlw	88
  4337  0395                     u2987:	
  4338  0395  0B89               	decfsz	9,f
  4339  0396  2B95               	goto	u2987
  4340  0397  0BD8               	decfsz	??_Led_Initialize,f
  4341  0398  2B95               	goto	u2987
  4342  0399  0000               	nop
  4343                           
  4344                           ;led.c: 52: Audio_SetVolume(gLedPara.mVolOn ? VOLUME[ gLedPara.mVolume ] : 0);
  4345  039A  0021               	movlb	1	; select bank1
  4346  039B  1A40               	btfsc	_gLedPara^(0+128),4	;volatile
  4347  039C  2BA0               	goto	l3419
  4348  039D  01E0               	clrf	_Led_Initialize$595^(0+128)
  4349  039E  01E1               	clrf	(_Led_Initialize$595+1)^(0+128)
  4350  039F  2BB4               	goto	l3421
  4351  03A0                     l3419:	
  4352  03A0  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  4353  03A1  0C89               	rrf	9,f
  4354  03A2  3907               	andlw	7
  4355  03A3  3EFA               	addlw	low (_VOLUME| (0+32768))
  4356  03A4  0084               	movwf	4
  4357  03A5  3087               	movlw	high (_VOLUME| (0+32768))
  4358  03A6  1803               	skipnc
  4359  03A7  3E01               	addlw	1
  4360  03A8  0085               	movwf	5
  4361  03A9  0800               	movf	0,w	;code access
  4362  03AA  0020               	movlb	0	; select bank0
  4363  03AB  00D8               	movwf	??_Led_Initialize
  4364  03AC  01D9               	clrf	??_Led_Initialize+1
  4365  03AD  0858               	movf	??_Led_Initialize,w
  4366  03AE  0021               	movlb	1	; select bank1
  4367  03AF  00E0               	movwf	_Led_Initialize$595^(0+128)
  4368  03B0  0020               	movlb	0	; select bank0
  4369  03B1  0859               	movf	??_Led_Initialize+1,w
  4370  03B2  0021               	movlb	1	; select bank1
  4371  03B3  00E1               	movwf	(_Led_Initialize$595+1)^(0+128)
  4372  03B4                     l3421:	
  4373  03B4  0860               	movf	_Led_Initialize$595^(0+128),w
  4374  03B5  3186  26A9  3183   	fcall	_Audio_SetVolume
  4375                           
  4376                           ;led.c: 53: _delay((unsigned long)((48)*(16000000/4000.0)));
  4377  03B8  30FA               	movlw	250
  4378  03B9  0020               	movlb	0	; select bank0
  4379  03BA  00D8               	movwf	??_Led_Initialize
  4380  03BB  3058               	movlw	88
  4381  03BC                     u2997:	
  4382  03BC  0B89               	decfsz	9,f
  4383  03BD  2BBC               	goto	u2997
  4384  03BE  0BD8               	decfsz	??_Led_Initialize,f
  4385  03BF  2BBC               	goto	u2997
  4386  03C0  0000               	nop
  4387                           
  4388                           ;led.c: 54: Audio_SetPlayMode(0x02);
  4389  03C1  3002               	movlw	2
  4390  03C2  3186  26D0  3183   	fcall	_Audio_SetPlayMode
  4391                           
  4392                           ;led.c: 55: _delay((unsigned long)((48)*(16000000/4000.0)));
  4393  03C5  30FA               	movlw	250
  4394  03C6  0020               	movlb	0	; select bank0
  4395  03C7  00D8               	movwf	??_Led_Initialize
  4396  03C8  3058               	movlw	88
  4397  03C9                     u3007:	
  4398  03C9  0B89               	decfsz	9,f
  4399  03CA  2BC9               	goto	u3007
  4400  03CB  0BD8               	decfsz	??_Led_Initialize,f
  4401  03CC  2BC9               	goto	u3007
  4402  03CD  0000               	nop
  4403                           
  4404                           ;led.c: 56: if (!gLedPara.mOn) {
  4405  03CE  0021               	movlb	1	; select bank1
  4406  03CF  1840               	btfsc	_gLedPara^(0+128),0	;volatile
  4407  03D0  2BD4               	goto	l3433
  4408                           
  4409                           ;led.c: 57: Led_TurnOffRamp();
  4410  03D1  318E  2614         	fcall	_Led_TurnOffRamp
  4411                           
  4412                           ;led.c: 58: } else {
  4413  03D3  0008               	return
  4414  03D4                     l3433:	
  4415                           
  4416                           ;led.c: 59: gLedRunPara.music_state = 0;
  4417  03D4  3001               	movlw	-255
  4418  03D5  0020               	movlb	0	; select bank0
  4419  03D6  05A8               	andwf	_gLedRunPara+8,f	;volatile
  4420                           
  4421                           ;led.c: 60: switch (gLedPara.mMode) {
  4422  03D7  2BE1               	goto	l3443
  4423  03D8                     l3435:	
  4424                           ;led.c: 61: case 0:
  4425                           
  4426                           
  4427                           ;led.c: 62: Led_TurnOnAllRamp();
  4428  03D8  318E  2653         	fcall	_Led_TurnOnAllRamp
  4429                           
  4430                           ;led.c: 63: break;
  4431  03DA  0008               	return
  4432  03DB                     l3437:	
  4433                           ;led.c: 64: case 1:
  4434                           
  4435                           
  4436                           ;led.c: 65: Led_TurnOnWhiteRamp();
  4437  03DB  318D  25A2         	fcall	_Led_TurnOnWhiteRamp
  4438                           
  4439                           ;led.c: 66: break;
  4440  03DD  0008               	return
  4441  03DE                     l3439:	
  4442                           ;led.c: 67: case 2:
  4443                           
  4444                           
  4445                           ;led.c: 68: Led_TurnOnBlueRamp();
  4446  03DE  318D  257C         	fcall	_Led_TurnOnBlueRamp
  4447                           
  4448                           ;led.c: 72: }
  4449                           
  4450                           ;led.c: 71: break;
  4451                           
  4452                           ;led.c: 70: default:
  4453                           
  4454                           ;led.c: 69: break;
  4455  03E0  0008               	return
  4456  03E1                     l3443:	
  4457  03E1  0021               	movlb	1	; select bank1
  4458  03E2  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  4459  03E3  3907               	andlw	7
  4460                           
  4461                           ; Switch size 1, requested type "space"
  4462                           ; Number of cases is 3, Range of values is 0 to 2
  4463                           ; switch strategies available:
  4464                           ; Name         Instructions Cycles
  4465                           ; simple_byte           10     6 (average)
  4466                           ; direct_byte           12     6 (fixed)
  4467                           ; jumptable            260     6 (fixed)
  4468                           ;	Chosen strategy is simple_byte
  4469  03E4  3A00               	xorlw	0	; case 0
  4470  03E5  1903               	skipnz
  4471  03E6  2BD8               	goto	l3435
  4472  03E7  3A01               	xorlw	1	; case 1
  4473  03E8  1903               	skipnz
  4474  03E9  2BDB               	goto	l3437
  4475  03EA  3A03               	xorlw	3	; case 2
  4476  03EB  1903               	skipnz
  4477  03EC  2BDE               	goto	l3439
  4478  03ED  2BEF               	goto	l389
  4479  03EE  0008               	return
  4480  03EF                     l389:	
  4481  03EF  0008               	return
  4482  03F0                     __end_of_Led_Initialize:	
  4483                           
  4484                           	psect	text16
  4485  0DA2                     __ptext16:	
  4486 ;; *************** function _Led_TurnOnWhiteRamp *****************
  4487 ;; Defined at:
  4488 ;;		line 96 in file "user/src/led.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4502 ;;      Params:         0       0       0       0
  4503 ;;      Locals:         0       0       0       0
  4504 ;;      Temps:          0       0       0       0
  4505 ;;      Totals:         0       0       0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    8
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_Led_Initialize
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function _Led_TurnOnWhiteRamp
  4518  0DA2                     _Led_TurnOnWhiteRamp:	
  4519                           
  4520                           ;led.c: 97: gLedPara.mOn = 1;
  4521                           
  4522                           ;incstack = 0
  4523                           ; Regs used in _Led_TurnOnWhiteRamp: [wreg+status,2]
  4524  0DA2  0021               	movlb	1	; select bank1
  4525  0DA3  1440               	bsf	_gLedPara^(0+128),0	;volatile
  4526                           
  4527                           ;led.c: 98: gLedRunPara.mTargetBright[0] = 0;
  4528  0DA4  0020               	movlb	0	; select bank0
  4529  0DA5  01A4               	clrf	_gLedRunPara+4	;volatile
  4530  0DA6  01A5               	clrf	_gLedRunPara+5	;volatile
  4531                           
  4532                           ;led.c: 99: gLedRunPara.mTargetBright[1] = gLedPara.white_bright;
  4533  0DA7  0021               	movlb	1	; select bank1
  4534  0DA8  0844               	movf	((_gLedPara+1)^(0+128)+3),w	;volatile
  4535  0DA9  0020               	movlb	0	; select bank0
  4536  0DAA  00A7               	movwf	_gLedRunPara+7	;volatile
  4537  0DAB  0021               	movlb	1	; select bank1
  4538  0DAC  0843               	movf	(_gLedPara^(0+128)+3),w	;volatile
  4539  0DAD  0020               	movlb	0	; select bank0
  4540  0DAE  00A6               	movwf	_gLedRunPara+6	;volatile
  4541  0DAF  0008               	return
  4542  0DB0                     __end_of_Led_TurnOnWhiteRamp:	
  4543                           
  4544                           	psect	text17
  4545  0D7C                     __ptext17:	
  4546 ;; *************** function _Led_TurnOnBlueRamp *****************
  4547 ;; Defined at:
  4548 ;;		line 102 in file "user/src/led.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4562 ;;      Params:         0       0       0       0
  4563 ;;      Locals:         0       0       0       0
  4564 ;;      Temps:          0       0       0       0
  4565 ;;      Totals:         0       0       0       0
  4566 ;;Total ram usage:        0 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    8
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_Led_Initialize
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _Led_TurnOnBlueRamp
  4578  0D7C                     _Led_TurnOnBlueRamp:	
  4579                           
  4580                           ;led.c: 103: gLedPara.mOn = 1;
  4581                           
  4582                           ;incstack = 0
  4583                           ; Regs used in _Led_TurnOnBlueRamp: [wreg+status,2]
  4584  0D7C  0021               	movlb	1	; select bank1
  4585  0D7D  1440               	bsf	_gLedPara^(0+128),0	;volatile
  4586                           
  4587                           ;led.c: 104: gLedRunPara.mTargetBright[0] = gLedPara.blue_bright;
  4588  0D7E  0846               	movf	((_gLedPara+1)^(0+128)+5),w	;volatile
  4589  0D7F  0020               	movlb	0	; select bank0
  4590  0D80  00A5               	movwf	_gLedRunPara+5	;volatile
  4591  0D81  0021               	movlb	1	; select bank1
  4592  0D82  0845               	movf	(_gLedPara^(0+128)+5),w	;volatile
  4593  0D83  0020               	movlb	0	; select bank0
  4594  0D84  00A4               	movwf	_gLedRunPara+4	;volatile
  4595                           
  4596                           ;led.c: 105: gLedRunPara.mTargetBright[1] = 0;
  4597  0D85  01A6               	clrf	_gLedRunPara+6	;volatile
  4598  0D86  01A7               	clrf	_gLedRunPara+7	;volatile
  4599  0D87  0008               	return
  4600  0D88                     __end_of_Led_TurnOnBlueRamp:	
  4601                           
  4602                           	psect	text18
  4603  0E53                     __ptext18:	
  4604 ;; *************** function _Led_TurnOnAllRamp *****************
  4605 ;; Defined at:
  4606 ;;		line 89 in file "user/src/led.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  i               1   10[BANK0 ] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4620 ;;      Params:         0       0       0       0
  4621 ;;      Locals:         0       1       0       0
  4622 ;;      Temps:          0       1       0       0
  4623 ;;      Totals:         0       2       0       0
  4624 ;;Total ram usage:        2 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    8
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_Led_Initialize
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           
  4635                           ;psect for function _Led_TurnOnAllRamp
  4636  0E53                     _Led_TurnOnAllRamp:	
  4637                           
  4638                           ;led.c: 90: gLedPara.mOn = 1;
  4639                           
  4640                           ;incstack = 0
  4641                           ; Regs used in _Led_TurnOnAllRamp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4642  0E53  0021               	movlb	1	; select bank1
  4643  0E54  1440               	bsf	_gLedPara^(0+128),0	;volatile
  4644                           
  4645                           ;led.c: 91: for (uint8_t i = 0; i < 2; i++) {
  4646  0E55  0020               	movlb	0	; select bank0
  4647  0E56  01D4               	clrf	Led_TurnOnAllRamp@i
  4648  0E57                     L1:	
  4649  0E57  3002               	movlw	2
  4650  0E58  0254               	subwf	Led_TurnOnAllRamp@i,w
  4651  0E59  1803               	btfsc	3,0
  4652  0E5A  0008               	return
  4653                           
  4654                           ;led.c: 92: gLedRunPara.mTargetBright[i] = gLedPara.all_bright;
  4655  0E5B  3554               	lslf	Led_TurnOnAllRamp@i,w
  4656  0E5C  3E24               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  4657  0E5D  0086               	movwf	6
  4658  0E5E  0187               	clrf	7
  4659  0E5F  0021               	movlb	1	; select bank1
  4660  0E60  0841               	movf	(_gLedPara^(0+128)+1),w	;volatile
  4661  0E61  3FC0               	movwi [0]fsr1
  4662  0E62  0842               	movf	((_gLedPara+1)^(0+128)+1),w	;volatile
  4663  0E63  3FC1               	movwi [1]fsr1
  4664  0E64  3001               	movlw	1
  4665  0E65  0020               	movlb	0	; select bank0
  4666  0E66  00D3               	movwf	??_Led_TurnOnAllRamp
  4667  0E67  0853               	movf	??_Led_TurnOnAllRamp,w
  4668  0E68  07D4               	addwf	Led_TurnOnAllRamp@i,f
  4669  0E69  2E57               	goto	L1
  4670  0E6A                     __end_of_Led_TurnOnAllRamp:	
  4671                           
  4672                           	psect	text19
  4673  0E14                     __ptext19:	
  4674 ;; *************** function _Led_TurnOffRamp *****************
  4675 ;; Defined at:
  4676 ;;		line 108 in file "user/src/led.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  i               1   10[BANK0 ] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4690 ;;      Params:         0       0       0       0
  4691 ;;      Locals:         0       1       0       0
  4692 ;;      Temps:          0       1       0       0
  4693 ;;      Totals:         0       2       0       0
  4694 ;;Total ram usage:        2 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    8
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_Led_Initialize
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function _Led_TurnOffRamp
  4706  0E14                     _Led_TurnOffRamp:	
  4707                           
  4708                           ;led.c: 109: gLedPara.mOn = 0;
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _Led_TurnOffRamp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4712  0E14  0021               	movlb	1	; select bank1
  4713  0E15  1040               	bcf	_gLedPara^(0+128),0	;volatile
  4714                           
  4715                           ;led.c: 110: for (uint8_t i = 0; i < 2; i++) {
  4716  0E16  0020               	movlb	0	; select bank0
  4717  0E17  01D4               	clrf	Led_TurnOffRamp@i
  4718  0E18                     L2:	
  4719  0E18  3002               	movlw	2
  4720  0E19  0254               	subwf	Led_TurnOffRamp@i,w
  4721  0E1A  1803               	btfsc	3,0
  4722  0E1B  0008               	return
  4723                           
  4724                           ;led.c: 111: gLedRunPara.mTargetBright[i] = 0;
  4725  0E1C  3554               	lslf	Led_TurnOffRamp@i,w
  4726  0E1D  3E24               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  4727  0E1E  0086               	movwf	6
  4728  0E1F  0187               	clrf	7
  4729  0E20  3000               	movlw	0
  4730  0E21  3FC0               	movwi [0]fsr1
  4731  0E22  3FC1               	movwi [1]fsr1
  4732  0E23  3001               	movlw	1
  4733  0E24  00D3               	movwf	??_Led_TurnOffRamp
  4734  0E25  0853               	movf	??_Led_TurnOffRamp,w
  4735  0E26  07D4               	addwf	Led_TurnOffRamp@i,f
  4736  0E27  2E18               	goto	L2
  4737  0E28                     __end_of_Led_TurnOffRamp:	
  4738                           
  4739                           	psect	text20
  4740  0F42                     __ptext20:	
  4741 ;; *************** function _Audio_StopSound *****************
  4742 ;; Defined at:
  4743 ;;		line 15 in file "user/src/audio.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  checksum        1   12[BANK0 ] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4757 ;;      Params:         0       0       0       0
  4758 ;;      Locals:         0       1       0       0
  4759 ;;      Temps:          0       1       0       0
  4760 ;;      Totals:         0       2       0       0
  4761 ;;Total ram usage:        2 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    9
  4764 ;; This function calls:
  4765 ;;		_EUSART_Write
  4766 ;; This function is called by:
  4767 ;;		_Led_Initialize
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _Audio_StopSound
  4773  0F42                     _Audio_StopSound:	
  4774                           
  4775                           ;audio.c: 17: uint8_t checksum = 0x00;
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in _Audio_StopSound: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4779  0F42  0020               	movlb	0	; select bank0
  4780  0F43  01D6               	clrf	Audio_StopSound@checksum
  4781                           
  4782                           ;audio.c: 18: EUSART_Write ( 0x7E );
  4783  0F44  307E               	movlw	126
  4784  0F45  3187  271D  318F   	fcall	_EUSART_Write
  4785                           
  4786                           ;audio.c: 19: checksum ^= EUSART_Write ( 0x03 );
  4787  0F48  3003               	movlw	3
  4788  0F49  3187  271D  318F   	fcall	_EUSART_Write
  4789  0F4C  0020               	movlb	0	; select bank0
  4790  0F4D  00D5               	movwf	??_Audio_StopSound
  4791  0F4E  0855               	movf	??_Audio_StopSound,w
  4792  0F4F  06D6               	xorwf	Audio_StopSound@checksum,f
  4793                           
  4794                           ;audio.c: 20: checksum ^= EUSART_Write ( 0x1E );
  4795  0F50  301E               	movlw	30
  4796  0F51  3187  271D  318F   	fcall	_EUSART_Write
  4797  0F54  0020               	movlb	0	; select bank0
  4798  0F55  00D5               	movwf	??_Audio_StopSound
  4799  0F56  0855               	movf	??_Audio_StopSound,w
  4800  0F57  06D6               	xorwf	Audio_StopSound@checksum,f
  4801                           
  4802                           ;audio.c: 21: EUSART_Write ( checksum );
  4803  0F58  0856               	movf	Audio_StopSound@checksum,w
  4804  0F59  3187  271D  318F   	fcall	_EUSART_Write
  4805                           
  4806                           ;audio.c: 22: EUSART_Write ( 0xEF );
  4807  0F5C  30EF               	movlw	239
  4808  0F5D  3187  271D         	fcall	_EUSART_Write
  4809  0F5F  0008               	return
  4810  0F60                     __end_of_Audio_StopSound:	
  4811                           
  4812                           	psect	text21
  4813  06A9                     __ptext21:	
  4814 ;; *************** function _Audio_SetVolume *****************
  4815 ;; Defined at:
  4816 ;;		line 48 in file "user/src/audio.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  vol             1    wreg     unsigned char 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  vol             1   12[BANK0 ] unsigned char 
  4821 ;;  checksum        1   13[BANK0 ] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4831 ;;      Params:         0       0       0       0
  4832 ;;      Locals:         0       2       0       0
  4833 ;;      Temps:          0       1       0       0
  4834 ;;      Totals:         0       3       0       0
  4835 ;;Total ram usage:        3 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    9
  4838 ;; This function calls:
  4839 ;;		_EUSART_Write
  4840 ;; This function is called by:
  4841 ;;		_Led_Initialize
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function _Audio_SetVolume
  4847  06A9                     _Audio_SetVolume:	
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _Audio_SetVolume: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4851                           ;Audio_SetVolume@vol stored from wreg
  4852  06A9  0020               	movlb	0	; select bank0
  4853  06AA  00D6               	movwf	Audio_SetVolume@vol
  4854                           
  4855                           ;audio.c: 50: uint8_t checksum = 0x00;
  4856  06AB  01D7               	clrf	Audio_SetVolume@checksum
  4857                           
  4858                           ;audio.c: 51: EUSART_Write ( 0x7E );
  4859  06AC  307E               	movlw	126
  4860  06AD  3187  271D  3186   	fcall	_EUSART_Write
  4861                           
  4862                           ;audio.c: 52: checksum ^= EUSART_Write ( 0x04 );
  4863  06B0  3004               	movlw	4
  4864  06B1  3187  271D  3186   	fcall	_EUSART_Write
  4865  06B4  0020               	movlb	0	; select bank0
  4866  06B5  00D5               	movwf	??_Audio_SetVolume
  4867  06B6  0855               	movf	??_Audio_SetVolume,w
  4868  06B7  06D7               	xorwf	Audio_SetVolume@checksum,f
  4869                           
  4870                           ;audio.c: 53: checksum ^= EUSART_Write ( 0x31 );
  4871  06B8  3031               	movlw	49
  4872  06B9  3187  271D  3186   	fcall	_EUSART_Write
  4873  06BC  0020               	movlb	0	; select bank0
  4874  06BD  00D5               	movwf	??_Audio_SetVolume
  4875  06BE  0855               	movf	??_Audio_SetVolume,w
  4876  06BF  06D7               	xorwf	Audio_SetVolume@checksum,f
  4877                           
  4878                           ;audio.c: 54: checksum ^= EUSART_Write ( vol );
  4879  06C0  0856               	movf	Audio_SetVolume@vol,w
  4880  06C1  3187  271D  3186   	fcall	_EUSART_Write
  4881  06C4  0020               	movlb	0	; select bank0
  4882  06C5  00D5               	movwf	??_Audio_SetVolume
  4883  06C6  0855               	movf	??_Audio_SetVolume,w
  4884  06C7  06D7               	xorwf	Audio_SetVolume@checksum,f
  4885                           
  4886                           ;audio.c: 55: EUSART_Write ( checksum );
  4887  06C8  0857               	movf	Audio_SetVolume@checksum,w
  4888  06C9  3187  271D  3186   	fcall	_EUSART_Write
  4889                           
  4890                           ;audio.c: 56: EUSART_Write ( 0xEF );
  4891  06CC  30EF               	movlw	239
  4892  06CD  3187  271D         	fcall	_EUSART_Write
  4893  06CF  0008               	return
  4894  06D0                     __end_of_Audio_SetVolume:	
  4895                           
  4896                           	psect	text22
  4897  06D0                     __ptext22:	
  4898 ;; *************** function _Audio_SetPlayMode *****************
  4899 ;; Defined at:
  4900 ;;		line 37 in file "user/src/audio.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  type            1    wreg     unsigned char 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  type            1   12[BANK0 ] unsigned char 
  4905 ;;  checksum        1   13[BANK0 ] unsigned char 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4915 ;;      Params:         0       0       0       0
  4916 ;;      Locals:         0       2       0       0
  4917 ;;      Temps:          0       1       0       0
  4918 ;;      Totals:         0       3       0       0
  4919 ;;Total ram usage:        3 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    9
  4922 ;; This function calls:
  4923 ;;		_EUSART_Write
  4924 ;; This function is called by:
  4925 ;;		_Led_Initialize
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function _Audio_SetPlayMode
  4931  06D0                     _Audio_SetPlayMode:	
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in _Audio_SetPlayMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4935                           ;Audio_SetPlayMode@type stored from wreg
  4936  06D0  0020               	movlb	0	; select bank0
  4937  06D1  00D6               	movwf	Audio_SetPlayMode@type
  4938                           
  4939                           ;audio.c: 39: uint8_t checksum = 0x00;
  4940  06D2  01D7               	clrf	Audio_SetPlayMode@checksum
  4941                           
  4942                           ;audio.c: 40: EUSART_Write ( 0x7E );
  4943  06D3  307E               	movlw	126
  4944  06D4  3187  271D  3186   	fcall	_EUSART_Write
  4945                           
  4946                           ;audio.c: 41: checksum ^= EUSART_Write ( 0x04 );
  4947  06D7  3004               	movlw	4
  4948  06D8  3187  271D  3186   	fcall	_EUSART_Write
  4949  06DB  0020               	movlb	0	; select bank0
  4950  06DC  00D5               	movwf	??_Audio_SetPlayMode
  4951  06DD  0855               	movf	??_Audio_SetPlayMode,w
  4952  06DE  06D7               	xorwf	Audio_SetPlayMode@checksum,f
  4953                           
  4954                           ;audio.c: 42: checksum ^= EUSART_Write ( 0x33 );
  4955  06DF  3033               	movlw	51
  4956  06E0  3187  271D  3186   	fcall	_EUSART_Write
  4957  06E3  0020               	movlb	0	; select bank0
  4958  06E4  00D5               	movwf	??_Audio_SetPlayMode
  4959  06E5  0855               	movf	??_Audio_SetPlayMode,w
  4960  06E6  06D7               	xorwf	Audio_SetPlayMode@checksum,f
  4961                           
  4962                           ;audio.c: 43: checksum ^= EUSART_Write ( type );
  4963  06E7  0856               	movf	Audio_SetPlayMode@type,w
  4964  06E8  3187  271D  3186   	fcall	_EUSART_Write
  4965  06EB  0020               	movlb	0	; select bank0
  4966  06EC  00D5               	movwf	??_Audio_SetPlayMode
  4967  06ED  0855               	movf	??_Audio_SetPlayMode,w
  4968  06EE  06D7               	xorwf	Audio_SetPlayMode@checksum,f
  4969                           
  4970                           ;audio.c: 44: EUSART_Write ( checksum );
  4971  06EF  0857               	movf	Audio_SetPlayMode@checksum,w
  4972  06F0  3187  271D  3186   	fcall	_EUSART_Write
  4973                           
  4974                           ;audio.c: 45: EUSART_Write ( 0xEF );
  4975  06F3  30EF               	movlw	239
  4976  06F4  3187  271D         	fcall	_EUSART_Write
  4977  06F6  0008               	return
  4978  06F7                     __end_of_Audio_SetPlayMode:	
  4979                           
  4980                           	psect	text23
  4981  071D                     __ptext23:	
  4982 ;; *************** function _EUSART_Write *****************
  4983 ;; Defined at:
  4984 ;;		line 35 in file "driver/src/eusart.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  byte            1    wreg     unsigned char 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  byte            1   10[BANK0 ] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      unsigned char 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4998 ;;      Params:         0       0       0       0
  4999 ;;      Locals:         0       1       0       0
  5000 ;;      Temps:          0       1       0       0
  5001 ;;      Totals:         0       2       0       0
  5002 ;;Total ram usage:        2 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    8
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_Audio_StopSound
  5009 ;;		_Audio_SetPlayMode
  5010 ;;		_Audio_SetVolume
  5011 ;;		_Audio_PlaySound
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _EUSART_Write
  5017  071D                     _EUSART_Write:	
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5021                           ;EUSART_Write@byte stored from wreg
  5022  071D  0020               	movlb	0	; select bank0
  5023  071E  00D4               	movwf	EUSART_Write@byte
  5024  071F                     l3157:	
  5025                           ;eusart.c: 37: while ( 0 == txRemain );
  5026                           
  5027  071F  0848               	movf	_txRemain,w
  5028  0720  1903               	btfsc	3,2
  5029  0721  2F1F               	goto	l3157
  5030                           
  5031                           ;eusart.c: 39: if ( !PIE1bits.TXIE )
  5032  0722  0021               	movlb	1	; select bank1
  5033  0723  1A11               	btfsc	17,4	;volatile
  5034  0724  2F2A               	goto	l58
  5035                           
  5036                           ;eusart.c: 40: {
  5037                           ;eusart.c: 41: TXREG = byte;
  5038  0725  0020               	movlb	0	; select bank0
  5039  0726  0854               	movf	EUSART_Write@byte,w
  5040  0727  0023               	movlb	3	; select bank3
  5041  0728  009A               	movwf	26	;volatile
  5042                           
  5043                           ;eusart.c: 42: }
  5044  0729  2F3E               	goto	l3171
  5045  072A                     l58:	
  5046                           
  5047                           ;eusart.c: 43: else
  5048                           ;eusart.c: 44: {
  5049                           ;eusart.c: 45: PIE1bits.TXIE = 0;
  5050  072A  1211               	bcf	17,4	;volatile
  5051                           
  5052                           ;eusart.c: 46: txBuf[txHead++] = byte;
  5053  072B  0020               	movlb	0	; select bank0
  5054  072C  0854               	movf	EUSART_Write@byte,w
  5055  072D  00D3               	movwf	??_EUSART_Write
  5056  072E  0847               	movf	_txHead,w
  5057  072F  3EA0               	addlw	(low (_txBuf| 0))& (0+255)
  5058  0730  0086               	movwf	6
  5059  0731  0187               	clrf	7
  5060  0732  0853               	movf	??_EUSART_Write,w
  5061  0733  0081               	movwf	1
  5062  0734  3001               	movlw	1
  5063  0735  00D3               	movwf	??_EUSART_Write
  5064  0736  0853               	movf	??_EUSART_Write,w
  5065  0737  07C7               	addwf	_txHead,f
  5066                           
  5067                           ;eusart.c: 47: if ( sizeof (txBuf ) <= txHead )
  5068  0738  3020               	movlw	32
  5069  0739  0247               	subwf	_txHead,w
  5070  073A  1803               	btfsc	3,0
  5071                           
  5072                           ;eusart.c: 48: {
  5073                           ;eusart.c: 49: txHead = 0;
  5074  073B  01C7               	clrf	_txHead
  5075                           
  5076                           ;eusart.c: 50: }
  5077                           ;eusart.c: 51: txRemain--;
  5078  073C  3001               	movlw	1
  5079  073D  02C8               	subwf	_txRemain,f
  5080  073E                     l3171:	
  5081                           
  5082                           ;eusart.c: 52: }
  5083                           ;eusart.c: 53: PIE1bits.TXIE = 1;
  5084  073E  0021               	movlb	1	; select bank1
  5085  073F  1611               	bsf	17,4	;volatile
  5086                           
  5087                           ;eusart.c: 54: return byte;
  5088  0740  0020               	movlb	0	; select bank0
  5089  0741  0854               	movf	EUSART_Write@byte,w
  5090  0742  0008               	return
  5091  0743                     __end_of_EUSART_Write:	
  5092                           
  5093                           	psect	text24
  5094  04CA                     __ptext24:	
  5095 ;; *************** function _Led_InitPara *****************
  5096 ;; Defined at:
  5097 ;;		line 12 in file "user/src/led.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5111 ;;      Params:         0       0       0       0
  5112 ;;      Locals:         0       0       0       0
  5113 ;;      Temps:          0       0       1       0
  5114 ;;      Totals:         0       0       1       0
  5115 ;;Total ram usage:        1 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:   10
  5118 ;; This function calls:
  5119 ;;		_FLASH_ReadBuffer
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           
  5126                           ;psect for function _Led_InitPara
  5127  04CA                     _Led_InitPara:	
  5128                           
  5129                           ;led.c: 13: FLASH_ReadBuffer((uint8_t*) & gLedPara, 0xFC0, sizeof (gLedPara));
  5130                           
  5131                           ;incstack = 0
  5132                           ; Regs used in _Led_InitPara: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5133  04CA  30C0               	movlw	192
  5134  04CB  0020               	movlb	0	; select bank0
  5135  04CC  00D6               	movwf	FLASH_ReadBuffer@addr
  5136  04CD  300F               	movlw	15
  5137  04CE  00D7               	movwf	FLASH_ReadBuffer@addr+1
  5138  04CF  3020               	movlw	32
  5139  04D0  0021               	movlb	1	; select bank1
  5140  04D1  00E2               	movwf	??_Led_InitPara^(0+128)
  5141  04D2  0862               	movf	??_Led_InitPara^(0+128),w
  5142  04D3  0020               	movlb	0	; select bank0
  5143  04D4  00D8               	movwf	FLASH_ReadBuffer@size
  5144  04D5  30C0               	movlw	(low (_gLedPara| 0))& (0+255)
  5145  04D6  3187  2743  3184   	fcall	_FLASH_ReadBuffer
  5146                           
  5147                           ;led.c: 14: if (gLedPara.all_bright > 1000) {
  5148  04D9  3003               	movlw	3
  5149  04DA  0021               	movlb	1	; select bank1
  5150  04DB  0242               	subwf	((_gLedPara+1)^(0+128)+1),w	;volatile
  5151  04DC  30E9               	movlw	233
  5152  04DD  1903               	skipnz
  5153  04DE  0241               	subwf	(_gLedPara^(0+128)+1),w	;volatile
  5154  04DF  1C03               	skipc
  5155  04E0  2CE5               	goto	l3383
  5156                           
  5157                           ;led.c: 15: gLedPara.all_bright = 1000;
  5158  04E1  3003               	movlw	3
  5159  04E2  00C2               	movwf	((_gLedPara+1)^(0+128)+1)	;volatile
  5160  04E3  30E8               	movlw	232
  5161  04E4  00C1               	movwf	(_gLedPara^(0+128)+1)	;volatile
  5162  04E5                     l3383:	
  5163                           
  5164                           ;led.c: 16: }
  5165                           ;led.c: 17: if (gLedPara.white_bright > 1000) {
  5166  04E5  3003               	movlw	3
  5167  04E6  0244               	subwf	((_gLedPara+1)^(0+128)+3),w	;volatile
  5168  04E7  30E9               	movlw	233
  5169  04E8  1903               	skipnz
  5170  04E9  0243               	subwf	(_gLedPara^(0+128)+3),w	;volatile
  5171  04EA  1C03               	skipc
  5172  04EB  2CF0               	goto	l3387
  5173                           
  5174                           ;led.c: 18: gLedPara.white_bright = 1000;
  5175  04EC  3003               	movlw	3
  5176  04ED  00C4               	movwf	((_gLedPara+1)^(0+128)+3)	;volatile
  5177  04EE  30E8               	movlw	232
  5178  04EF  00C3               	movwf	(_gLedPara^(0+128)+3)	;volatile
  5179  04F0                     l3387:	
  5180                           
  5181                           ;led.c: 19: }
  5182                           ;led.c: 20: if (gLedPara.blue_bright > 1000) {
  5183  04F0  3003               	movlw	3
  5184  04F1  0246               	subwf	((_gLedPara+1)^(0+128)+5),w	;volatile
  5185  04F2  30E9               	movlw	233
  5186  04F3  1903               	skipnz
  5187  04F4  0245               	subwf	(_gLedPara^(0+128)+5),w	;volatile
  5188  04F5  1C03               	skipc
  5189  04F6  2CFB               	goto	l3391
  5190                           
  5191                           ;led.c: 21: gLedPara.blue_bright = 1000;
  5192  04F7  3003               	movlw	3
  5193  04F8  00C6               	movwf	((_gLedPara+1)^(0+128)+5)	;volatile
  5194  04F9  30E8               	movlw	232
  5195  04FA  00C5               	movwf	(_gLedPara^(0+128)+5)	;volatile
  5196  04FB                     l3391:	
  5197                           
  5198                           ;led.c: 22: }
  5199                           ;led.c: 24: if (gLedPara.all_bright < 10) {
  5200  04FB  3000               	movlw	0
  5201  04FC  0242               	subwf	((_gLedPara+1)^(0+128)+1),w	;volatile
  5202  04FD  300A               	movlw	10
  5203  04FE  1903               	skipnz
  5204  04FF  0241               	subwf	(_gLedPara^(0+128)+1),w	;volatile
  5205  0500  1803               	skipnc
  5206  0501  2D06               	goto	l3395
  5207                           
  5208                           ;led.c: 25: gLedPara.all_bright = 10;
  5209  0502  3000               	movlw	0
  5210  0503  00C2               	movwf	((_gLedPara+1)^(0+128)+1)	;volatile
  5211  0504  300A               	movlw	10
  5212  0505  00C1               	movwf	(_gLedPara^(0+128)+1)	;volatile
  5213  0506                     l3395:	
  5214                           
  5215                           ;led.c: 26: }
  5216                           ;led.c: 27: if (gLedPara.white_bright < 10) {
  5217  0506  3000               	movlw	0
  5218  0507  0244               	subwf	((_gLedPara+1)^(0+128)+3),w	;volatile
  5219  0508  300A               	movlw	10
  5220  0509  1903               	skipnz
  5221  050A  0243               	subwf	(_gLedPara^(0+128)+3),w	;volatile
  5222  050B  1803               	skipnc
  5223  050C  2D11               	goto	l3399
  5224                           
  5225                           ;led.c: 28: gLedPara.white_bright = 10;
  5226  050D  3000               	movlw	0
  5227  050E  00C4               	movwf	((_gLedPara+1)^(0+128)+3)	;volatile
  5228  050F  300A               	movlw	10
  5229  0510  00C3               	movwf	(_gLedPara^(0+128)+3)	;volatile
  5230  0511                     l3399:	
  5231                           
  5232                           ;led.c: 29: }
  5233                           ;led.c: 30: if (gLedPara.blue_bright < 10) {
  5234  0511  3000               	movlw	0
  5235  0512  0246               	subwf	((_gLedPara+1)^(0+128)+5),w	;volatile
  5236  0513  300A               	movlw	10
  5237  0514  1903               	skipnz
  5238  0515  0245               	subwf	(_gLedPara^(0+128)+5),w	;volatile
  5239  0516  1803               	skipnc
  5240  0517  2D1C               	goto	l3403
  5241                           
  5242                           ;led.c: 31: gLedPara.blue_bright = 10;
  5243  0518  3000               	movlw	0
  5244  0519  00C6               	movwf	((_gLedPara+1)^(0+128)+5)	;volatile
  5245  051A  300A               	movlw	10
  5246  051B  00C5               	movwf	(_gLedPara^(0+128)+5)	;volatile
  5247  051C                     l3403:	
  5248                           
  5249                           ;led.c: 32: }
  5250                           ;led.c: 34: if (gLedPara.mMode > 4) {
  5251  051C  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  5252  051D  3907               	andlw	7
  5253  051E  00E2               	movwf	??_Led_InitPara^(0+128)
  5254  051F  3005               	movlw	5
  5255  0520  0262               	subwf	??_Led_InitPara^(0+128),w
  5256  0521  1C03               	skipc
  5257  0522  2D25               	goto	l372
  5258                           
  5259                           ;led.c: 35: gLedPara.mMode = 0;
  5260  0523  30F1               	movlw	-15
  5261  0524  05C0               	andwf	_gLedPara^(0+128),f	;volatile
  5262  0525                     l372:	
  5263                           
  5264                           ;led.c: 36: }
  5265                           ;led.c: 37: if (gLedPara.mVolume > 4) {
  5266  0525  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  5267  0526  0C89               	rrf	9,f
  5268  0527  3907               	andlw	7
  5269  0528  00E2               	movwf	??_Led_InitPara^(0+128)
  5270  0529  3005               	movlw	5
  5271  052A  0262               	subwf	??_Led_InitPara^(0+128),w
  5272  052B  1C03               	skipc
  5273  052C  2D31               	goto	l373
  5274                           
  5275                           ;led.c: 38: gLedPara.mVolume = 4;
  5276  052D  0840               	movf	_gLedPara^(0+128),w	;volatile
  5277  052E  391F               	andlw	-225
  5278  052F  3880               	iorlw	128
  5279  0530  00C0               	movwf	_gLedPara^(0+128)	;volatile
  5280  0531                     l373:	
  5281                           
  5282                           ;led.c: 39: }
  5283                           ;led.c: 45: gLedRunPara.music_state = 0;
  5284  0531  3001               	movlw	-255
  5285  0532  0020               	movlb	0	; select bank0
  5286  0533  05A8               	andwf	_gLedRunPara+8,f	;volatile
  5287  0534  0008               	return
  5288  0535                     __end_of_Led_InitPara:	
  5289                           
  5290                           	psect	text25
  5291  0743                     __ptext25:	
  5292 ;; *************** function _FLASH_ReadBuffer *****************
  5293 ;; Defined at:
  5294 ;;		line 86 in file "driver/src/flash.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  buf             1    wreg     PTR unsigned char 
  5297 ;;		 -> gLedPara(32), 
  5298 ;;  addr            2   12[BANK0 ] unsigned int 
  5299 ;;  size            1   14[BANK0 ] unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  buf             1    0[BANK1 ] PTR unsigned char 
  5302 ;;		 -> gLedPara(32), 
  5303 ;;  i               1    1[BANK1 ] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5313 ;;      Params:         0       3       0       0
  5314 ;;      Locals:         0       0       2       0
  5315 ;;      Temps:          0       2       0       0
  5316 ;;      Totals:         0       5       2       0
  5317 ;;Total ram usage:        7 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    9
  5320 ;; This function calls:
  5321 ;;		_FLASH_ReadByte
  5322 ;; This function is called by:
  5323 ;;		_Led_InitPara
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function _FLASH_ReadBuffer
  5329  0743                     _FLASH_ReadBuffer:	
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in _FLASH_ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5333                           ;FLASH_ReadBuffer@buf stored from wreg
  5334  0743  0021               	movlb	1	; select bank1
  5335  0744  00E0               	movwf	FLASH_ReadBuffer@buf^(0+128)
  5336                           
  5337                           ;flash.c: 87: for (uint8_t i = 0; i < size; i++) {
  5338  0745  01E1               	clrf	FLASH_ReadBuffer@i^(0+128)
  5339  0746                     l3271:	
  5340  0746  0020               	movlb	0	; select bank0
  5341  0747  0858               	movf	FLASH_ReadBuffer@size,w
  5342  0748  0021               	movlb	1	; select bank1
  5343  0749  0261               	subwf	FLASH_ReadBuffer@i^(0+128),w
  5344  074A  1803               	btfsc	3,0
  5345  074B  0008               	return
  5346                           
  5347                           ;flash.c: 88: *(buf + i) = FLASH_ReadByte(addr + i);
  5348  074C  0861               	movf	FLASH_ReadBuffer@i^(0+128),w
  5349  074D  0020               	movlb	0	; select bank0
  5350  074E  0756               	addwf	FLASH_ReadBuffer@addr,w
  5351  074F  00D3               	movwf	FLASH_ReadByte@addr
  5352  0750  0857               	movf	FLASH_ReadBuffer@addr+1,w
  5353  0751  1803               	skipnc
  5354  0752  0A57               	incf	FLASH_ReadBuffer@addr+1,w
  5355  0753  00D4               	movwf	FLASH_ReadByte@addr+1
  5356  0754  318E  2682  3187   	fcall	_FLASH_ReadByte
  5357  0757  0020               	movlb	0	; select bank0
  5358  0758  00D9               	movwf	??_FLASH_ReadBuffer
  5359  0759  0021               	movlb	1	; select bank1
  5360  075A  0861               	movf	FLASH_ReadBuffer@i^(0+128),w
  5361  075B  0760               	addwf	FLASH_ReadBuffer@buf^(0+128),w
  5362  075C  0020               	movlb	0	; select bank0
  5363  075D  00DA               	movwf	??_FLASH_ReadBuffer+1
  5364  075E  085A               	movf	??_FLASH_ReadBuffer+1,w
  5365  075F  0086               	movwf	6
  5366  0760  0187               	clrf	7
  5367  0761  0859               	movf	??_FLASH_ReadBuffer,w
  5368  0762  0081               	movwf	1
  5369  0763  3001               	movlw	1
  5370  0764  00D9               	movwf	??_FLASH_ReadBuffer
  5371  0765  0859               	movf	??_FLASH_ReadBuffer,w
  5372  0766  0021               	movlb	1	; select bank1
  5373  0767  07E1               	addwf	FLASH_ReadBuffer@i^(0+128),f
  5374  0768  2F46               	goto	l3271
  5375  0769                     __end_of_FLASH_ReadBuffer:	
  5376                           
  5377                           	psect	text26
  5378  0E82                     __ptext26:	
  5379 ;; *************** function _FLASH_ReadByte *****************
  5380 ;; Defined at:
  5381 ;;		line 73 in file "driver/src/flash.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  addr            2    9[BANK0 ] unsigned int 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  state           1   11[BANK0 ] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      unsigned char 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5395 ;;      Params:         0       2       0       0
  5396 ;;      Locals:         0       1       0       0
  5397 ;;      Temps:          0       0       0       0
  5398 ;;      Totals:         0       3       0       0
  5399 ;;Total ram usage:        3 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    8
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_FLASH_ReadBuffer
  5406 ;;		_FLASH_WriteByte
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function _FLASH_ReadByte
  5412  0E82                     _FLASH_ReadByte:	
  5413                           
  5414                           ;flash.c: 74: uint8_t state = GIE;
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _FLASH_ReadByte: [wreg+status,2]
  5418  0E82  3000               	movlw	0
  5419  0E83  1B8B               	btfsc	11,7	;volatile
  5420  0E84  3001               	movlw	1
  5421  0E85  0020               	movlb	0	; select bank0
  5422  0E86  00D5               	movwf	FLASH_ReadByte@state
  5423                           
  5424                           ;flash.c: 75: GIE = 0;
  5425  0E87  138B               	bcf	11,7	;volatile
  5426                           
  5427                           ;flash.c: 76: PMADR = addr;
  5428  0E88  0854               	movf	FLASH_ReadByte@addr+1,w
  5429  0E89  0023               	movlb	3	; select bank3
  5430  0E8A  0092               	movwf	18	;volatile
  5431  0E8B  0020               	movlb	0	; select bank0
  5432  0E8C  0853               	movf	FLASH_ReadByte@addr,w
  5433  0E8D  0023               	movlb	3	; select bank3
  5434  0E8E  0091               	movwf	17	;volatile
  5435                           
  5436                           ;flash.c: 78: CFGS = 0;
  5437  0E8F  1315               	bcf	21,6	;volatile
  5438                           
  5439                           ;flash.c: 79: RD = 1;
  5440  0E90  1415               	bsf	21,0	;volatile
  5441                           
  5442                           ;flash.c: 80: __nop();
  5443  0E91  0000               	nop
  5444                           
  5445                           ;flash.c: 81: __nop();
  5446  0E92  0000               	nop
  5447                           
  5448                           ;flash.c: 82: GIE = state;
  5449  0E93  0020               	movlb	0	; select bank0
  5450  0E94  1C55               	btfss	FLASH_ReadByte@state,0
  5451  0E95  2E98               	goto	u2640
  5452  0E96  178B               	bsf	11,7	;volatile
  5453  0E97  2E99               	goto	l3219
  5454  0E98                     u2640:	
  5455  0E98  138B               	bcf	11,7	;volatile
  5456  0E99                     l3219:	
  5457                           
  5458                           ;flash.c: 83: return PMDATL;
  5459  0E99  0023               	movlb	3	; select bank3
  5460  0E9A  0813               	movf	19,w	;volatile
  5461  0E9B  0008               	return
  5462  0E9C                     __end_of_FLASH_ReadByte:	
  5463                           
  5464                           	psect	text27
  5465  0DDD                     __ptext27:	
  5466 ;; *************** function _Interrupt_Initialize *****************
  5467 ;; Defined at:
  5468 ;;		line 86 in file "user/src/main.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0, pclath, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5482 ;;      Params:         0       0       0       0
  5483 ;;      Locals:         0       0       0       0
  5484 ;;      Temps:          0       0       0       0
  5485 ;;      Totals:         0       0       0       0
  5486 ;;Total ram usage:        0 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    9
  5489 ;; This function calls:
  5490 ;;		_Key_SetActionHandler
  5491 ;;		_TMR2_SetInterruptHandler
  5492 ;; This function is called by:
  5493 ;;		_main
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _Interrupt_Initialize
  5499  0DDD                     _Interrupt_Initialize:	
  5500                           
  5501                           ;main.c: 87: TMR2_SetInterruptHandler(Led_Run);
  5502                           
  5503                           ;incstack = 0
  5504                           ; Regs used in _Interrupt_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5505  0DDD  3028               	movlw	low _Led_Run
  5506  0DDE  0020               	movlb	0	; select bank0
  5507  0DDF  00D3               	movwf	TMR2_SetInterruptHandler@handler
  5508  0DE0  300E               	movlw	high _Led_Run
  5509  0DE1  00D4               	movwf	TMR2_SetInterruptHandler@handler+1
  5510  0DE2  318D  2522  318D   	fcall	_TMR2_SetInterruptHandler
  5511                           
  5512                           ;main.c: 88: Key_SetActionHandler(Led_OnKeyPressed);
  5513  0DE5  3041               	movlw	low _Led_OnKeyPressed
  5514  0DE6  0020               	movlb	0	; select bank0
  5515  0DE7  00D3               	movwf	Key_SetActionHandler@handler
  5516  0DE8  3000               	movlw	high _Led_OnKeyPressed
  5517  0DE9  00D4               	movwf	Key_SetActionHandler@handler+1
  5518  0DEA  318D  251C         	fcall	_Key_SetActionHandler
  5519  0DEC  0008               	return
  5520  0DED                     __end_of_Interrupt_Initialize:	
  5521                           
  5522                           	psect	text28
  5523  0D22                     __ptext28:	
  5524 ;; *************** function _TMR2_SetInterruptHandler *****************
  5525 ;; Defined at:
  5526 ;;		line 31 in file "driver/src/tmr2.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  handler         2    9[BANK0 ] PTR FTN()void 
  5529 ;;		 -> Led_Run(1), 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5541 ;;      Params:         0       2       0       0
  5542 ;;      Locals:         0       0       0       0
  5543 ;;      Temps:          0       0       0       0
  5544 ;;      Totals:         0       2       0       0
  5545 ;;Total ram usage:        2 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    8
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_Interrupt_Initialize
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           
  5556                           ;psect for function _TMR2_SetInterruptHandler
  5557  0D22                     _TMR2_SetInterruptHandler:	
  5558                           
  5559                           ;tmr2.c: 32: tmr2_isr_handler = handler;
  5560                           
  5561                           ;incstack = 0
  5562                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  5563  0D22  0020               	movlb	0	; select bank0
  5564  0D23  0854               	movf	TMR2_SetInterruptHandler@handler+1,w
  5565  0D24  00C2               	movwf	_tmr2_isr_handler+1
  5566  0D25  0853               	movf	TMR2_SetInterruptHandler@handler,w
  5567  0D26  00C1               	movwf	_tmr2_isr_handler
  5568  0D27  0008               	return
  5569  0D28                     __end_of_TMR2_SetInterruptHandler:	
  5570                           
  5571                           	psect	text29
  5572  0D1C                     __ptext29:	
  5573 ;; *************** function _Key_SetActionHandler *****************
  5574 ;; Defined at:
  5575 ;;		line 68 in file "user/src/key.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  handler         2    9[BANK0 ] PTR FTN(unsigned char ,)
  5578 ;;		 -> Led_OnKeyPressed(1), 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5590 ;;      Params:         0       2       0       0
  5591 ;;      Locals:         0       0       0       0
  5592 ;;      Temps:          0       0       0       0
  5593 ;;      Totals:         0       2       0       0
  5594 ;;Total ram usage:        2 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    8
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_Interrupt_Initialize
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           
  5605                           ;psect for function _Key_SetActionHandler
  5606  0D1C                     _Key_SetActionHandler:	
  5607                           
  5608                           ;key.c: 69: key_press_cb = handler;
  5609                           
  5610                           ;incstack = 0
  5611                           ; Regs used in _Key_SetActionHandler: [wreg]
  5612  0D1C  0020               	movlb	0	; select bank0
  5613  0D1D  0854               	movf	Key_SetActionHandler@handler+1,w
  5614  0D1E  00BA               	movwf	_key_press_cb+1
  5615  0D1F  0853               	movf	Key_SetActionHandler@handler,w
  5616  0D20  00B9               	movwf	_key_press_cb
  5617  0D21  0008               	return
  5618  0D22                     __end_of_Key_SetActionHandler:	
  5619                           
  5620                           	psect	text30
  5621  030E                     __ptext30:	
  5622 ;; *************** function _Audio_GetValue *****************
  5623 ;; Defined at:
  5624 ;;		line 59 in file "user/src/audio.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  value           2   15[BANK0 ] unsigned int 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5638 ;;      Params:         0       0       0       0
  5639 ;;      Locals:         0       2       0       0
  5640 ;;      Temps:          0       0       6       0
  5641 ;;      Totals:         0       2       6       0
  5642 ;;Total ram usage:        8 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    9
  5645 ;; This function calls:
  5646 ;;		_ADC_Conversion
  5647 ;;		___wmul
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           
  5654                           ;psect for function _Audio_GetValue
  5655  030E                     _Audio_GetValue:	
  5656                           
  5657                           ;audio.c: 61: static uint16_t max = 0;
  5658                           ;audio.c: 62: static uint16_t min = 0;
  5659                           ;audio.c: 63: static uint16_t cnt = 0;
  5660                           ;audio.c: 64: uint16_t value;
  5661                           ;audio.c: 66: (INTCONbits.GIE = 0);
  5662                           
  5663                           ;incstack = 0
  5664                           ; Regs used in _Audio_GetValue: [wreg+status,2+status,0+pclath+cstack]
  5665  030E  138B               	bcf	11,7	;volatile
  5666                           
  5667                           ;audio.c: 67: value = ADC_Conversion ( 6 );
  5668  030F  3006               	movlw	6
  5669  0310  3187  27D3  3183   	fcall	_ADC_Conversion
  5670  0313  0020               	movlb	0	; select bank0
  5671  0314  0854               	movf	?_ADC_Conversion+1,w
  5672  0315  00DA               	movwf	Audio_GetValue@value+1
  5673  0316  0853               	movf	?_ADC_Conversion,w
  5674  0317  00D9               	movwf	Audio_GetValue@value
  5675                           
  5676                           ;audio.c: 68: (INTCONbits.GIE = 1);
  5677  0318  178B               	bsf	11,7	;volatile
  5678                           
  5679                           ;audio.c: 69: if ( cnt == 0 )
  5680  0319  0829               	movf	Audio_GetValue@cnt,w
  5681  031A  042A               	iorwf	Audio_GetValue@cnt+1,w
  5682  031B  1D03               	btfss	3,2
  5683  031C  2B22               	goto	l3363
  5684                           
  5685                           ;audio.c: 70: {
  5686                           ;audio.c: 71: max = value;
  5687  031D  085A               	movf	Audio_GetValue@value+1,w
  5688  031E  00AC               	movwf	Audio_GetValue@max+1
  5689  031F  0859               	movf	Audio_GetValue@value,w
  5690  0320  00AB               	movwf	Audio_GetValue@max
  5691  0321  2B36               	goto	l3367
  5692  0322                     l3363:	
  5693                           ;audio.c: 73: }
  5694                           
  5695                           ;audio.c: 72: min = value;
  5696                           
  5697                           
  5698                           ;audio.c: 74: else
  5699                           ;audio.c: 75: {
  5700                           ;audio.c: 76: if ( max < value )
  5701  0322  085A               	movf	Audio_GetValue@value+1,w
  5702  0323  022C               	subwf	Audio_GetValue@max+1,w
  5703  0324  1D03               	skipz
  5704  0325  2B28               	goto	u2785
  5705  0326  0859               	movf	Audio_GetValue@value,w
  5706  0327  022B               	subwf	Audio_GetValue@max,w
  5707  0328                     u2785:	
  5708  0328  1803               	skipnc
  5709  0329  2B2E               	goto	l316
  5710                           
  5711                           ;audio.c: 77: {
  5712                           ;audio.c: 78: max = value;
  5713  032A  085A               	movf	Audio_GetValue@value+1,w
  5714  032B  00AC               	movwf	Audio_GetValue@max+1
  5715  032C  0859               	movf	Audio_GetValue@value,w
  5716  032D  00AB               	movwf	Audio_GetValue@max
  5717  032E                     l316:	
  5718                           
  5719                           ;audio.c: 79: }
  5720                           ;audio.c: 80: if ( min > value )
  5721  032E  082E               	movf	Audio_GetValue@min+1,w
  5722  032F  025A               	subwf	Audio_GetValue@value+1,w
  5723  0330  1D03               	skipz
  5724  0331  2B34               	goto	u2795
  5725  0332  082D               	movf	Audio_GetValue@min,w
  5726  0333  0259               	subwf	Audio_GetValue@value,w
  5727  0334                     u2795:	
  5728  0334  1803               	skipnc
  5729  0335  2B3A               	goto	l315
  5730  0336                     l3367:	
  5731                           
  5732                           ;audio.c: 81: {
  5733                           ;audio.c: 82: min = value;
  5734  0336  085A               	movf	Audio_GetValue@value+1,w
  5735  0337  00AE               	movwf	Audio_GetValue@min+1
  5736  0338  0859               	movf	Audio_GetValue@value,w
  5737  0339  00AD               	movwf	Audio_GetValue@min
  5738  033A                     l315:	
  5739                           
  5740                           ;audio.c: 83: }
  5741                           ;audio.c: 84: }
  5742                           ;audio.c: 85: cnt++;
  5743  033A  3001               	movlw	1
  5744  033B  07A9               	addwf	Audio_GetValue@cnt,f
  5745  033C  3000               	movlw	0
  5746  033D  3DAA               	addwfc	Audio_GetValue@cnt+1,f
  5747                           
  5748                           ;audio.c: 86: if ( cnt >= 256 )
  5749  033E  3001               	movlw	1
  5750  033F  022A               	subwf	Audio_GetValue@cnt+1,w
  5751  0340  3000               	movlw	0
  5752  0341  1903               	skipnz
  5753  0342  0229               	subwf	Audio_GetValue@cnt,w
  5754  0343  1C03               	skipc
  5755  0344  0008               	return
  5756                           
  5757                           ;audio.c: 87: {
  5758                           ;audio.c: 88: cnt = 0;
  5759  0345  01A9               	clrf	Audio_GetValue@cnt
  5760  0346  01AA               	clrf	Audio_GetValue@cnt+1
  5761                           
  5762                           ;audio.c: 89: (INTCONbits.GIE = 0);
  5763  0347  138B               	bcf	11,7	;volatile
  5764                           
  5765                           ;audio.c: 90: audio_value = ( audio_value * 15 + max - min ) >> 4;
  5766  0348  092D               	comf	Audio_GetValue@min,w
  5767  0349  0021               	movlb	1	; select bank1
  5768  034A  00E0               	movwf	??_Audio_GetValue^(0+128)
  5769  034B  0020               	movlb	0	; select bank0
  5770  034C  092E               	comf	Audio_GetValue@min+1,w
  5771  034D  0021               	movlb	1	; select bank1
  5772  034E  00E1               	movwf	(??_Audio_GetValue^(0+128)+1)
  5773  034F  0AE0               	incf	??_Audio_GetValue^(0+128),f
  5774  0350  1903               	skipnz
  5775  0351  0AE1               	incf	(??_Audio_GetValue^(0+128)+1),f
  5776  0352  0020               	movlb	0	; select bank0
  5777  0353  0834               	movf	_audio_value+1,w	;volatile
  5778  0354  00D4               	movwf	___wmul@multiplier+1
  5779  0355  0833               	movf	_audio_value,w	;volatile
  5780  0356  00D3               	movwf	___wmul@multiplier
  5781  0357  300F               	movlw	15
  5782  0358  00D5               	movwf	___wmul@multiplicand
  5783  0359  3000               	movlw	0
  5784  035A  00D6               	movwf	___wmul@multiplicand+1
  5785  035B  318F  2709         	fcall	___wmul
  5786  035D  0021               	movlb	1	; select bank1
  5787  035E  0860               	movf	??_Audio_GetValue^(0+128),w
  5788  035F  0020               	movlb	0	; select bank0
  5789  0360  0753               	addwf	?___wmul,w
  5790  0361  0021               	movlb	1	; select bank1
  5791  0362  00E2               	movwf	(??_Audio_GetValue+2)^(0+128)
  5792  0363  0861               	movf	(??_Audio_GetValue+1)^(0+128),w
  5793  0364  0020               	movlb	0	; select bank0
  5794  0365  3D54               	addwfc	?___wmul+1,w
  5795  0366  0021               	movlb	1	; select bank1
  5796  0367  00E3               	movwf	(??_Audio_GetValue+3)^(0+128)
  5797  0368  0020               	movlb	0	; select bank0
  5798  0369  082B               	movf	Audio_GetValue@max,w
  5799  036A  0021               	movlb	1	; select bank1
  5800  036B  0762               	addwf	(??_Audio_GetValue+2)^(0+128),w
  5801  036C  00E4               	movwf	(??_Audio_GetValue+4)^(0+128)
  5802  036D  0020               	movlb	0	; select bank0
  5803  036E  082C               	movf	Audio_GetValue@max+1,w
  5804  036F  0021               	movlb	1	; select bank1
  5805  0370  3D63               	addwfc	(??_Audio_GetValue+3)^(0+128),w
  5806  0371  00E5               	movwf	(??_Audio_GetValue+5)^(0+128)
  5807  0372  0E64               	swapf	(??_Audio_GetValue+4)^(0+128),w
  5808  0373  390F               	andlw	15
  5809  0374  0020               	movlb	0	; select bank0
  5810  0375  00B3               	movwf	_audio_value	;volatile
  5811  0376  0021               	movlb	1	; select bank1
  5812  0377  0E65               	swapf	(??_Audio_GetValue+5)^(0+128),w
  5813  0378  39F0               	andlw	240
  5814  0379  0020               	movlb	0	; select bank0
  5815  037A  04B3               	iorwf	_audio_value,f	;volatile
  5816  037B  0021               	movlb	1	; select bank1
  5817  037C  0E65               	swapf	(??_Audio_GetValue+5)^(0+128),w
  5818  037D  390F               	andlw	15
  5819  037E  0020               	movlb	0	; select bank0
  5820  037F  00B4               	movwf	_audio_value+1	;volatile
  5821                           
  5822                           ;audio.c: 91: (INTCONbits.GIE = 1);
  5823  0380  178B               	bsf	11,7	;volatile
  5824  0381  0008               	return
  5825  0382                     __end_of_Audio_GetValue:	
  5826                           
  5827                           	psect	text31
  5828  0F09                     __ptext31:	
  5829 ;; *************** function ___wmul *****************
  5830 ;; Defined at:
  5831 ;;		line 15 in file "/Applications/microchip/xc8/v1.40/sources/common/Umul16.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  multiplier      2    9[BANK0 ] unsigned int 
  5834 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  product         2   13[BANK0 ] unsigned int 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  2    9[BANK0 ] unsigned int 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2, status,0
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5846 ;;      Params:         0       4       0       0
  5847 ;;      Locals:         0       2       0       0
  5848 ;;      Temps:          0       0       0       0
  5849 ;;      Totals:         0       6       0       0
  5850 ;;Total ram usage:        6 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    8
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_Audio_GetValue
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           
  5861                           ;psect for function ___wmul
  5862  0F09                     ___wmul:	
  5863                           
  5864                           ;incstack = 0
  5865                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5866  0F09  0020               	movlb	0	; select bank0
  5867  0F0A  01D7               	clrf	___wmul@product
  5868  0F0B  01D8               	clrf	___wmul@product+1
  5869  0F0C                     l2905:	
  5870  0F0C  1C53               	btfss	___wmul@multiplier,0
  5871  0F0D  2F12               	goto	l665
  5872  0F0E  0855               	movf	___wmul@multiplicand,w
  5873  0F0F  07D7               	addwf	___wmul@product,f
  5874  0F10  0856               	movf	___wmul@multiplicand+1,w
  5875  0F11  3DD8               	addwfc	___wmul@product+1,f
  5876  0F12                     l665:	
  5877  0F12  3001               	movlw	1
  5878  0F13                     u2275:	
  5879  0F13  35D5               	lslf	___wmul@multiplicand,f
  5880  0F14  0DD6               	rlf	___wmul@multiplicand+1,f
  5881  0F15  0B89               	decfsz	9,f
  5882  0F16  2F13               	goto	u2275
  5883  0F17  3001               	movlw	1
  5884  0F18                     u2285:	
  5885  0F18  36D4               	lsrf	___wmul@multiplier+1,f
  5886  0F19  0CD3               	rrf	___wmul@multiplier,f
  5887  0F1A  0B89               	decfsz	9,f
  5888  0F1B  2F18               	goto	u2285
  5889  0F1C  0853               	movf	___wmul@multiplier,w
  5890  0F1D  0454               	iorwf	___wmul@multiplier+1,w
  5891  0F1E  1D03               	btfss	3,2
  5892  0F1F  2F0C               	goto	l2905
  5893  0F20  0858               	movf	___wmul@product+1,w
  5894  0F21  00D4               	movwf	?___wmul+1
  5895  0F22  0857               	movf	___wmul@product,w
  5896  0F23  00D3               	movwf	?___wmul
  5897  0F24  0008               	return
  5898  0F25                     __end_of___wmul:	
  5899                           
  5900                           	psect	text32
  5901  07D3                     __ptext32:	
  5902 ;; *************** function _ADC_Conversion *****************
  5903 ;; Defined at:
  5904 ;;		line 22 in file "driver/src/adc.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  chn             1    wreg     unsigned char 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  chn             1   12[BANK0 ] unsigned char 
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  2    9[BANK0 ] unsigned int 
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5918 ;;      Params:         0       2       0       0
  5919 ;;      Locals:         0       1       0       0
  5920 ;;      Temps:          0       1       0       0
  5921 ;;      Totals:         0       4       0       0
  5922 ;;Total ram usage:        4 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    8
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_Audio_GetValue
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _ADC_Conversion
  5934  07D3                     _ADC_Conversion:	
  5935                           
  5936                           ;incstack = 0
  5937                           ; Regs used in _ADC_Conversion: [wreg+status,2+status,0]
  5938                           ;ADC_Conversion@chn stored from wreg
  5939  07D3  0020               	movlb	0	; select bank0
  5940  07D4  00D6               	movwf	ADC_Conversion@chn
  5941                           
  5942                           ;adc.c: 24: ADCON0bits.CHS = chn;
  5943  07D5  0856               	movf	ADC_Conversion@chn,w
  5944  07D6  00D5               	movwf	??_ADC_Conversion
  5945  07D7  0DD5               	rlf	??_ADC_Conversion,f
  5946  07D8  0DD5               	rlf	??_ADC_Conversion,f
  5947  07D9  0021               	movlb	1	; select bank1
  5948  07DA  081D               	movf	29,w	;volatile
  5949  07DB  0020               	movlb	0	; select bank0
  5950  07DC  0655               	xorwf	??_ADC_Conversion,w
  5951  07DD  3983               	andlw	-125
  5952  07DE  0655               	xorwf	??_ADC_Conversion,w
  5953  07DF  0021               	movlb	1	; select bank1
  5954  07E0  009D               	movwf	29	;volatile
  5955                           
  5956                           ;adc.c: 25: ADCON0bits.ADON = 1;
  5957  07E1  141D               	bsf	29,0	;volatile
  5958                           
  5959                           ;adc.c: 26: _delay((unsigned long)((4)*(16000000/4000000.0)));
  5960  07E2  3005               	movlw	5
  5961  07E3                     u3017:	
  5962  07E3  0B89               	decfsz	9,f
  5963  07E4  2FE3               	goto	u3017
  5964  07E5  0000               	nop
  5965                           
  5966                           ;adc.c: 27: ADCON0bits.GO_nDONE = 1;
  5967  07E6  0021               	movlb	1	; select bank1
  5968  07E7  149D               	bsf	29,1	;volatile
  5969  07E8                     l22:	
  5970                           ;adc.c: 28: while ( !PIR1bits.ADIF );
  5971                           
  5972  07E8  0020               	movlb	0	; select bank0
  5973  07E9  1F11               	btfss	17,6	;volatile
  5974  07EA  2FE8               	goto	l22
  5975                           
  5976                           ;adc.c: 29: PIR1bits.ADIF = 0;
  5977  07EB  1311               	bcf	17,6	;volatile
  5978                           
  5979                           ;adc.c: 30: return ADRES;
  5980  07EC  0021               	movlb	1	; select bank1
  5981  07ED  081C               	movf	28,w	;volatile
  5982  07EE  0020               	movlb	0	; select bank0
  5983  07EF  00D4               	movwf	?_ADC_Conversion+1
  5984  07F0  0021               	movlb	1	; select bank1
  5985  07F1  081B               	movf	27,w	;volatile
  5986  07F2  0020               	movlb	0	; select bank0
  5987  07F3  00D3               	movwf	?_ADC_Conversion
  5988  07F4  0008               	return
  5989  07F5                     __end_of_ADC_Conversion:	
  5990                           
  5991                           	psect	intentry
  5992  0004                     __pintentry:	
  5993 ;; *************** function _ISR *****************
  5994 ;; Defined at:
  5995 ;;		line 46 in file "user/src/main.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;		None
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6009 ;;      Params:         0       0       0       0
  6010 ;;      Locals:         0       0       0       0
  6011 ;;      Temps:          0       1       0       0
  6012 ;;      Totals:         0       1       0       0
  6013 ;;Total ram usage:        1 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    7
  6016 ;; This function calls:
  6017 ;;		_EUSART_Transmit_ISR
  6018 ;;		_TMR2_ISR
  6019 ;; This function is called by:
  6020 ;;		Interrupt level 1
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024  0004                     _ISR:	
  6025                           
  6026                           ;incstack = 0
  6027  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6028                           
  6029                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6030  0005  3180               	pagesel	$
  6031  0006  0020               	movlb	0	; select bank0
  6032  0007  087F               	movf	127,w
  6033  0008  00D2               	movwf	??_ISR
  6034                           
  6035                           ;main.c: 47: if (PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  6036  0009  0021               	movlb	1	; select bank1
  6037  000A  1C91               	btfss	17,1	;volatile
  6038  000B  2813               	goto	i1l588
  6039  000C  0020               	movlb	0	; select bank0
  6040  000D  1C91               	btfss	17,1	;volatile
  6041  000E  2813               	goto	i1l588
  6042                           
  6043                           ;main.c: 48: TMR2_ISR();
  6044  000F  318D  2570  3180   	fcall	_TMR2_ISR
  6045                           
  6046                           ;main.c: 49: } else if (PIE1bits.TXIE && PIR1bits.TXIF) {
  6047  0012  281B               	goto	i1l591
  6048  0013                     i1l588:	
  6049  0013  0021               	movlb	1	; select bank1
  6050  0014  1E11               	btfss	17,4	;volatile
  6051  0015  281B               	goto	i1l591
  6052  0016  0020               	movlb	0	; select bank0
  6053  0017  1E11               	btfss	17,4	;volatile
  6054  0018  281B               	goto	i1l591
  6055                           
  6056                           ;main.c: 50: EUSART_Transmit_ISR();
  6057  0019  318F  2725         	fcall	_EUSART_Transmit_ISR
  6058  001B                     i1l591:	
  6059  001B  0020               	movlb	0	; select bank0
  6060  001C  0852               	movf	??_ISR,w
  6061  001D  00FF               	movwf	127
  6062  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6063  001F  0009               	retfie
  6064  0020                     __end_of_ISR:	
  6065                           
  6066                           	psect	text34
  6067  0D70                     __ptext34:	
  6068 ;; *************** function _TMR2_ISR *****************
  6069 ;; Defined at:
  6070 ;;		line 24 in file "driver/src/tmr2.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6084 ;;      Params:         0       0       0       0
  6085 ;;      Locals:         0       0       0       0
  6086 ;;      Temps:          0       0       0       0
  6087 ;;      Totals:         0       0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    6
  6091 ;; This function calls:
  6092 ;;		Absolute function
  6093 ;;		_Led_Run
  6094 ;; This function is called by:
  6095 ;;		_ISR
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function _TMR2_ISR
  6101  0D70                     _TMR2_ISR:	
  6102                           
  6103                           ;tmr2.c: 25: PIR1bits.TMR2IF = 0;
  6104                           
  6105                           ;incstack = 0
  6106                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6107  0D70  0020               	movlb	0	; select bank0
  6108  0D71  1091               	bcf	17,1	;volatile
  6109                           
  6110                           ;tmr2.c: 26: if (tmr2_isr_handler) {
  6111  0D72  0841               	movf	_tmr2_isr_handler,w
  6112  0D73  0442               	iorwf	_tmr2_isr_handler+1,w
  6113  0D74  1903               	btfsc	3,2
  6114  0D75  0008               	return
  6115                           
  6116                           ;tmr2.c: 27: tmr2_isr_handler();
  6117  0D76  0842               	movf	_tmr2_isr_handler+1,w
  6118  0D77  008A               	movwf	10
  6119  0D78  0841               	movf	_tmr2_isr_handler,w
  6120  0D79  000A               	callw
  6121  0D7A  318D               	pagesel	$
  6122  0D7B  0008               	return
  6123  0D7C                     __end_of_TMR2_ISR:	
  6124                           
  6125                           	psect	text35
  6126  0E28                     __ptext35:	
  6127 ;; *************** function _Led_Run *****************
  6128 ;; Defined at:
  6129 ;;		line 272 in file "user/src/led.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6143 ;;      Params:         0       0       0       0
  6144 ;;      Locals:         0       0       0       0
  6145 ;;      Temps:          0       1       0       0
  6146 ;;      Totals:         0       1       0       0
  6147 ;;Total ram usage:        1 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    5
  6150 ;; This function calls:
  6151 ;;		_Key_Scan
  6152 ;;		_Led_Ramp
  6153 ;;		_Led_RunMusic
  6154 ;; This function is called by:
  6155 ;;		_Interrupt_Initialize
  6156 ;;		_TMR2_ISR
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function _Led_Run
  6162  0E28                     _Led_Run:	
  6163                           
  6164                           ;led.c: 273: static uint8_t cnt = 0;
  6165                           ;led.c: 274: cnt++;
  6166                           
  6167                           ;incstack = 0
  6168                           ; Regs used in _Led_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6169  0E28  3001               	movlw	1
  6170  0E29  0020               	movlb	0	; select bank0
  6171  0E2A  00D1               	movwf	??_Led_Run
  6172  0E2B  0851               	movf	??_Led_Run,w
  6173  0E2C  07C5               	addwf	Led_Run@cnt,f
  6174                           
  6175                           ;led.c: 275: if ((cnt & 0x0F) == 0x00) {
  6176  0E2D  0845               	movf	Led_Run@cnt,w
  6177  0E2E  390F               	andlw	15
  6178  0E2F  1D03               	btfss	3,2
  6179  0E30  2E34               	goto	i1l2881
  6180                           
  6181                           ;led.c: 276: Key_Scan();
  6182  0E31  3184  245D  318E   	fcall	_Key_Scan
  6183  0E34                     i1l2881:	
  6184                           
  6185                           ;led.c: 277: }
  6186                           ;led.c: 278: if (gLedPara.mOn) {
  6187  0E34  0021               	movlb	1	; select bank1
  6188  0E35  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  6189  0E36  2E3A               	goto	i1l2885
  6190                           
  6191                           ;led.c: 279: Led_RunMusic();
  6192  0E37  3185  25EF         	fcall	_Led_RunMusic
  6193                           
  6194                           ;led.c: 280: } else {
  6195  0E39  0008               	return
  6196  0E3A                     i1l2885:	
  6197                           
  6198                           ;led.c: 281: Led_Ramp();
  6199  0E3A  3182  2296         	fcall	_Led_Ramp
  6200  0E3C  0008               	return
  6201  0E3D                     __end_of_Led_Run:	
  6202                           
  6203                           	psect	text36
  6204  05EF                     __ptext36:	
  6205 ;; *************** function _Led_RunMusic *****************
  6206 ;; Defined at:
  6207 ;;		line 242 in file "user/src/led.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;		None
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6221 ;;      Params:         0       0       0       0
  6222 ;;      Locals:         0       0       0       0
  6223 ;;      Temps:          1       0       0       0
  6224 ;;      Totals:         1       0       0       0
  6225 ;;Total ram usage:        1 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    2
  6228 ;; This function calls:
  6229 ;;		_Audio_SelectSound
  6230 ;;		_Led_DynamicCloud
  6231 ;;		_Led_DynamicStorm
  6232 ;;		_Led_Ramp
  6233 ;; This function is called by:
  6234 ;;		_Led_Run
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           
  6239                           ;psect for function _Led_RunMusic
  6240  05EF                     _Led_RunMusic:	
  6241                           
  6242                           ;led.c: 243: if (gLedRunPara.music_state < 32) {
  6243                           
  6244                           ;incstack = 0
  6245                           ; Regs used in _Led_RunMusic: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6246  05EF  0020               	movlb	0	; select bank0
  6247  05F0  0C28               	rrf	_gLedRunPara+8,w	;volatile
  6248  05F1  397F               	andlw	127
  6249  05F2  00FC               	movwf	??_Led_RunMusic
  6250  05F3  3020               	movlw	32
  6251  05F4  027C               	subwf	??_Led_RunMusic,w
  6252  05F5  1C03               	btfss	3,0
  6253  05F6  2E04               	goto	L3
  6254                           
  6255                           ;led.c: 245: } else if (gLedRunPara.music_state == 32) {
  6256                           
  6257                           ;led.c: 244: gLedRunPara.music_state++;
  6258  05F7  0C28               	rrf	_gLedRunPara+8,w	;volatile
  6259  05F8  397F               	andlw	127
  6260  05F9  3A20               	xorlw	32
  6261  05FA  1D03               	skipz
  6262  05FB  2E22               	goto	i1l2631
  6263                           
  6264                           ;led.c: 246: Audio_SelectSound(gLedPara.mMode + 1);
  6265  05FC  0021               	movlb	1	; select bank1
  6266  05FD  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  6267  05FE  3907               	andlw	7
  6268  05FF  3E01               	addlw	1
  6269  0600  3186  262F  3185   	fcall	_Audio_SelectSound
  6270                           
  6271                           ;led.c: 247: gLedRunPara.music_state++;
  6272  0603  0020               	movlb	0	; select bank0
  6273  0604                     L3:	
  6274  0604  0C28               	rrf	_gLedRunPara+8,w	;volatile
  6275  0605  397F               	andlw	127
  6276  0606  00FC               	movwf	??_Led_RunMusic
  6277  0607  0AFC               	incf	??_Led_RunMusic,f
  6278  0608  0DFC               	rlf	??_Led_RunMusic,f
  6279  0609  0828               	movf	_gLedRunPara+8,w	;volatile
  6280  060A  067C               	xorwf	??_Led_RunMusic,w
  6281  060B  3901               	andlw	-255
  6282  060C  067C               	xorwf	??_Led_RunMusic,w
  6283  060D  00A8               	movwf	_gLedRunPara+8	;volatile
  6284                           
  6285                           ;led.c: 248: }
  6286                           ;led.c: 255: switch (gLedPara.mMode) {
  6287  060E  2E22               	goto	i1l2631
  6288  060F                     i1l2623:	
  6289                           ;led.c: 256: case 0:
  6290                           
  6291                           
  6292                           ;led.c: 257: case 1:
  6293                           ;led.c: 258: case 2:
  6294                           ;led.c: 259: Led_Ramp();
  6295  060F  3182  2296         	fcall	_Led_Ramp
  6296                           
  6297                           ;led.c: 260: break;
  6298  0611  0008               	return
  6299  0612                     i1l2625:	
  6300                           ;led.c: 261: case 3:
  6301                           
  6302                           
  6303                           ;led.c: 262: Led_DynamicCloud(audio_value);
  6304  0612  0020               	movlb	0	; select bank0
  6305  0613  0834               	movf	_audio_value+1,w	;volatile
  6306  0614  00F7               	movwf	Led_DynamicCloud@ptp+1
  6307  0615  0833               	movf	_audio_value,w	;volatile
  6308  0616  00F6               	movwf	Led_DynamicCloud@ptp
  6309  0617  3182  2202         	fcall	_Led_DynamicCloud
  6310                           
  6311                           ;led.c: 263: break;
  6312  0619  0008               	return
  6313  061A                     i1l2627:	
  6314                           ;led.c: 264: case 4:
  6315                           
  6316                           
  6317                           ;led.c: 265: Led_DynamicStorm(audio_value);
  6318  061A  0020               	movlb	0	; select bank0
  6319  061B  0834               	movf	_audio_value+1,w	;volatile
  6320  061C  00F7               	movwf	Led_DynamicStorm@ptp+1
  6321  061D  0833               	movf	_audio_value,w	;volatile
  6322  061E  00F6               	movwf	Led_DynamicStorm@ptp
  6323  061F  3181  216A         	fcall	_Led_DynamicStorm
  6324                           
  6325                           ;led.c: 269: }
  6326                           
  6327                           ;led.c: 268: break;
  6328                           
  6329                           ;led.c: 267: default:
  6330                           
  6331                           ;led.c: 266: break;
  6332  0621  0008               	return
  6333  0622                     i1l2631:	
  6334  0622  0021               	movlb	1	; select bank1
  6335  0623  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  6336  0624  3907               	andlw	7
  6337                           
  6338                           ; Switch size 1, requested type "space"
  6339                           ; Number of cases is 5, Range of values is 0 to 4
  6340                           ; switch strategies available:
  6341                           ; Name         Instructions Cycles
  6342                           ; direct_byte           16     6 (fixed)
  6343                           ; simple_byte           16     9 (average)
  6344                           ; jumptable            260     6 (fixed)
  6345                           ;	Chosen strategy is direct_byte
  6346  0625  0084               	movwf	4
  6347  0626  3005               	movlw	5
  6348  0627  0204               	subwf	4,w
  6349  0628  1803               	skipnc
  6350  0629  0008               	return
  6351  062A  3188               	movlp	high i1S3521
  6352  062B  3504               	lslf	4,w
  6353  062C  3E00               	addlw	low i1S3521
  6354  062D  0082               	movwf	2
  6355  062E  0008               	return
  6356  062F                     __end_of_Led_RunMusic:	
  6357                           
  6358                           	psect	swtext1
  6359  0800                     __pswtext1:	
  6360  0800                     i1S3521:	
  6361  0800  3186  2E0F         	ljmp	i1l2623
  6362  0802  3186  2E0F         	ljmp	i1l2623
  6363  0804  3186  2E0F         	ljmp	i1l2623
  6364  0806  3186  2E12         	ljmp	i1l2625
  6365  0808  3186  2E1A         	ljmp	i1l2627
  6366                           
  6367                           	psect	text37
  6368  0296                     __ptext37:	
  6369 ;; *************** function _Led_Ramp *****************
  6370 ;; Defined at:
  6371 ;;		line 190 in file "user/src/led.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  i               1   10[COMMON] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6385 ;;      Params:         0       0       0       0
  6386 ;;      Locals:         1       0       0       0
  6387 ;;      Temps:          6       0       0       0
  6388 ;;      Totals:         7       0       0       0
  6389 ;;Total ram usage:        7 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    1
  6392 ;; This function calls:
  6393 ;;		_PWM1_LoadDutyValue
  6394 ;;		_PWM3_LoadDutyValue
  6395 ;; This function is called by:
  6396 ;;		_Led_RunMusic
  6397 ;;		_Led_Run
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           
  6402                           ;psect for function _Led_Ramp
  6403  0296                     _Led_Ramp:	
  6404                           
  6405                           ;led.c: 191: for (uint8_t i = 0; i < 2; i++) {
  6406                           
  6407                           ;incstack = 0
  6408                           ; Regs used in _Led_Ramp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6409  0296  01FA               	clrf	Led_Ramp@i
  6410  0297                     L4:	
  6411  0297  3002               	movlw	2
  6412  0298  027A               	subwf	Led_Ramp@i,w
  6413  0299  1803               	btfsc	3,0
  6414  029A  0008               	return
  6415                           
  6416                           ;led.c: 192: if (gLedRunPara.mCurrentBright[i] + 1 < gLedRunPara.mTargetBright[i]) {
  6417  029B  357A               	lslf	Led_Ramp@i,w
  6418  029C  3E24               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  6419  029D  0086               	movwf	6
  6420  029E  0187               	clrf	7
  6421  029F  3F40               	moviw [0]fsr1
  6422  02A0  00F4               	movwf	??_Led_Ramp
  6423  02A1  3F41               	moviw [1]fsr1
  6424  02A2  00F5               	movwf	??_Led_Ramp+1
  6425  02A3  357A               	lslf	Led_Ramp@i,w
  6426  02A4  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6427  02A5  0086               	movwf	6
  6428  02A6  0187               	clrf	7
  6429  02A7  3F40               	moviw [0]fsr1
  6430  02A8  00F6               	movwf	??_Led_Ramp+2
  6431  02A9  3F41               	moviw [1]fsr1
  6432  02AA  00F7               	movwf	??_Led_Ramp+3
  6433  02AB  0876               	movf	??_Led_Ramp+2,w
  6434  02AC  3E01               	addlw	1
  6435  02AD  00F8               	movwf	??_Led_Ramp+4
  6436  02AE  3000               	movlw	0
  6437  02AF  3D77               	addwfc	??_Led_Ramp+3,w
  6438  02B0  00F9               	movwf	??_Led_Ramp+5
  6439  02B1  0875               	movf	??_Led_Ramp+1,w
  6440  02B2  0279               	subwf	??_Led_Ramp+5,w
  6441  02B3  1D03               	skipz
  6442  02B4  2AB7               	goto	u169_25
  6443  02B5  0874               	movf	??_Led_Ramp,w
  6444  02B6  0278               	subwf	??_Led_Ramp+4,w
  6445  02B7                     u169_25:	
  6446  02B7  1803               	skipnc
  6447  02B8  2AC3               	goto	i1l2421
  6448                           
  6449                           ;led.c: 193: gLedRunPara.mCurrentBright[i] += 1;
  6450  02B9  357A               	lslf	Led_Ramp@i,w
  6451  02BA  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6452  02BB  0086               	movwf	6
  6453  02BC  0187               	clrf	7
  6454  02BD  3001               	movlw	1
  6455  02BE  0781               	addwf	1,f
  6456  02BF  3141               	addfsr 1,1
  6457  02C0  1803               	skipnc
  6458  02C1  0A81               	incf	1,f
  6459                           
  6460                           ;led.c: 194: } else if (gLedRunPara.mCurrentBright[i] > gLedRunPara.mTargetBright[i] + 1
      +                          ) {
  6461  02C2  2AF8               	goto	i1l2427
  6462  02C3                     i1l2421:	
  6463  02C3  357A               	lslf	Led_Ramp@i,w
  6464  02C4  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6465  02C5  0086               	movwf	6
  6466  02C6  0187               	clrf	7
  6467  02C7  3F40               	moviw [0]fsr1
  6468  02C8  00F4               	movwf	??_Led_Ramp
  6469  02C9  3F41               	moviw [1]fsr1
  6470  02CA  00F5               	movwf	??_Led_Ramp+1
  6471  02CB  357A               	lslf	Led_Ramp@i,w
  6472  02CC  3E24               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  6473  02CD  0086               	movwf	6
  6474  02CE  0187               	clrf	7
  6475  02CF  3F40               	moviw [0]fsr1
  6476  02D0  00F6               	movwf	??_Led_Ramp+2
  6477  02D1  3F41               	moviw [1]fsr1
  6478  02D2  00F7               	movwf	??_Led_Ramp+3
  6479  02D3  0876               	movf	??_Led_Ramp+2,w
  6480  02D4  3E01               	addlw	1
  6481  02D5  00F8               	movwf	??_Led_Ramp+4
  6482  02D6  3000               	movlw	0
  6483  02D7  3D77               	addwfc	??_Led_Ramp+3,w
  6484  02D8  00F9               	movwf	??_Led_Ramp+5
  6485  02D9  0875               	movf	??_Led_Ramp+1,w
  6486  02DA  0279               	subwf	??_Led_Ramp+5,w
  6487  02DB  1D03               	skipz
  6488  02DC  2ADF               	goto	u170_25
  6489  02DD  0874               	movf	??_Led_Ramp,w
  6490  02DE  0278               	subwf	??_Led_Ramp+4,w
  6491  02DF                     u170_25:	
  6492  02DF  1803               	skipnc
  6493  02E0  2AEC               	goto	i1l2425
  6494                           
  6495                           ;led.c: 195: gLedRunPara.mCurrentBright[i] -= 1;
  6496  02E1  357A               	lslf	Led_Ramp@i,w
  6497  02E2  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6498  02E3  0086               	movwf	6
  6499  02E4  0187               	clrf	7
  6500  02E5  3001               	movlw	1
  6501  02E6  0281               	subwf	1,f
  6502  02E7  3141               	addfsr 1,1
  6503  02E8  3000               	movlw	0
  6504  02E9  3B81               	subwfb	1,f
  6505  02EA  317F               	addfsr 1,-1
  6506                           
  6507                           ;led.c: 196: } else {
  6508  02EB  2AF8               	goto	i1l2427
  6509  02EC                     i1l2425:	
  6510                           
  6511                           ;led.c: 197: gLedRunPara.mCurrentBright[i] = gLedRunPara.mTargetBright[i];
  6512  02EC  357A               	lslf	Led_Ramp@i,w
  6513  02ED  3E24               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  6514  02EE  0086               	movwf	6
  6515  02EF  0187               	clrf	7
  6516  02F0  357A               	lslf	Led_Ramp@i,w
  6517  02F1  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6518  02F2  0084               	movwf	4
  6519  02F3  0185               	clrf	5
  6520  02F4  3F40               	moviw [0]fsr1
  6521  02F5  3F80               	movwi [0]fsr0
  6522  02F6  3F41               	moviw [1]fsr1
  6523  02F7  3F81               	movwi [1]fsr0
  6524  02F8                     i1l2427:	
  6525                           
  6526                           ;led.c: 198: }
  6527                           ;led.c: 199: loadDuty[i]( gLedRunPara.mCurrentBright[i] );
  6528  02F8  357A               	lslf	Led_Ramp@i,w
  6529  02F9  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6530  02FA  0086               	movwf	6
  6531  02FB  0187               	clrf	7
  6532  02FC  3F40               	moviw [0]fsr1
  6533  02FD  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  6534  02FE  3F41               	moviw [1]fsr1
  6535  02FF  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  6536  0300  357A               	lslf	Led_Ramp@i,w
  6537  0301  3E63               	addlw	(low (_loadDuty| 0))& (0+255)
  6538  0302  0086               	movwf	6
  6539  0303  0187               	clrf	7
  6540  0304  3F41               	moviw [1]fsr1
  6541  0305  008A               	movwf	10
  6542  0306  3F40               	moviw [0]fsr1
  6543  0307  000A               	callw
  6544  0308  3182               	pagesel	$
  6545  0309  3001               	movlw	1
  6546  030A  00F4               	movwf	??_Led_Ramp
  6547  030B  0874               	movf	??_Led_Ramp,w
  6548  030C  07FA               	addwf	Led_Ramp@i,f
  6549  030D  2A97               	goto	L4
  6550  030E                     __end_of_Led_Ramp:	
  6551                           
  6552                           	psect	text38
  6553  016A                     __ptext38:	
  6554 ;; *************** function _Led_DynamicStorm *****************
  6555 ;; Defined at:
  6556 ;;		line 222 in file "user/src/led.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  ptp             2    6[COMMON] unsigned int 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  duty            4    0[BANK0 ] unsigned int [2]
  6561 ;;  val             2    4[BANK0 ] unsigned int 
  6562 ;;  i               1    6[BANK0 ] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  1    wreg      void 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6572 ;;      Params:         2       0       0       0
  6573 ;;      Locals:         0       7       0       0
  6574 ;;      Temps:          4       0       0       0
  6575 ;;      Totals:         6       7       0       0
  6576 ;;Total ram usage:       13 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    1
  6579 ;; This function calls:
  6580 ;;		_PWM1_LoadDutyValue
  6581 ;;		_PWM3_LoadDutyValue
  6582 ;;		i1___wmul
  6583 ;; This function is called by:
  6584 ;;		_Led_RunMusic
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _Led_DynamicStorm
  6590  016A                     _Led_DynamicStorm:	
  6591                           
  6592                           ;led.c: 223: uint8_t i;
  6593                           ;led.c: 224: uint16_t val = ptp * ( 5 + GAIN[gLedPara.mVolume] );
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _Led_DynamicStorm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6597  016A  0021               	movlb	1	; select bank1
  6598  016B  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  6599  016C  0C89               	rrf	9,f
  6600  016D  3907               	andlw	7
  6601  016E  3EF5               	addlw	low (_GAIN| (0+32768))
  6602  016F  0084               	movwf	4
  6603  0170  3087               	movlw	high (_GAIN| (0+32768))
  6604  0171  1803               	skipnc
  6605  0172  3E01               	addlw	1
  6606  0173  0085               	movwf	5
  6607  0174  0800               	movf	0,w	;code access
  6608  0175  3E05               	addlw	5
  6609  0176  00F0               	movwf	i1___wmul@multiplier
  6610  0177  3000               	movlw	0
  6611  0178  1803               	skipnc
  6612  0179  3001               	movlw	1
  6613  017A  00F1               	movwf	i1___wmul@multiplier+1
  6614  017B  0877               	movf	Led_DynamicStorm@ptp+1,w
  6615  017C  00F3               	movwf	i1___wmul@multiplicand+1
  6616  017D  0876               	movf	Led_DynamicStorm@ptp,w
  6617  017E  00F2               	movwf	i1___wmul@multiplicand
  6618  017F  318E  26B7  3181   	fcall	i1___wmul
  6619  0182  0871               	movf	?i1___wmul+1,w
  6620  0183  0020               	movlb	0	; select bank0
  6621  0184  00CF               	movwf	Led_DynamicStorm@val+1
  6622  0185  0870               	movf	?i1___wmul,w
  6623  0186  00CE               	movwf	Led_DynamicStorm@val
  6624                           
  6625                           ;led.c: 225: uint16_t duty[2] = {500, 64};
  6626  0187  0862               	movf	Led_DynamicStorm@F4467+3,w
  6627  0188  00CD               	movwf	Led_DynamicStorm@duty+3
  6628  0189  0861               	movf	Led_DynamicStorm@F4467+2,w
  6629  018A  00CC               	movwf	Led_DynamicStorm@duty+2
  6630  018B  0860               	movf	Led_DynamicStorm@F4467+1,w
  6631  018C  00CB               	movwf	Led_DynamicStorm@duty+1
  6632  018D  085F               	movf	Led_DynamicStorm@F4467,w
  6633  018E  00CA               	movwf	Led_DynamicStorm@duty
  6634                           
  6635                           ;led.c: 226: if (duty[0] > val) {
  6636  018F  084B               	movf	Led_DynamicStorm@duty+1,w
  6637  0190  024F               	subwf	Led_DynamicStorm@val+1,w
  6638  0191  1D03               	skipz
  6639  0192  2995               	goto	u177_25
  6640  0193  084A               	movf	Led_DynamicStorm@duty,w
  6641  0194  024E               	subwf	Led_DynamicStorm@val,w
  6642  0195                     u177_25:	
  6643  0195  1803               	skipnc
  6644  0196  299C               	goto	i1l2469
  6645                           
  6646                           ;led.c: 227: duty[0] -= val;
  6647  0197  084E               	movf	Led_DynamicStorm@val,w
  6648  0198  02CA               	subwf	Led_DynamicStorm@duty,f
  6649  0199  084F               	movf	Led_DynamicStorm@val+1,w
  6650  019A  3BCB               	subwfb	Led_DynamicStorm@duty+1,f
  6651                           
  6652                           ;led.c: 228: } else {
  6653  019B  299E               	goto	i1l2471
  6654  019C                     i1l2469:	
  6655                           
  6656                           ;led.c: 229: duty[0] = 0;
  6657  019C  01CA               	clrf	Led_DynamicStorm@duty
  6658  019D  01CB               	clrf	Led_DynamicStorm@duty+1
  6659  019E                     i1l2471:	
  6660                           
  6661                           ;led.c: 230: }
  6662                           ;led.c: 231: duty[1] += val;
  6663  019E  084E               	movf	Led_DynamicStorm@val,w
  6664  019F  07CC               	addwf	Led_DynamicStorm@duty+2,f
  6665  01A0  084F               	movf	Led_DynamicStorm@val+1,w
  6666  01A1  3DCD               	addwfc	Led_DynamicStorm@duty+3,f
  6667                           
  6668                           ;led.c: 232: for (i = 0; i < 2; i++) {
  6669  01A2  01D0               	clrf	Led_DynamicStorm@i
  6670  01A3                     L5:	
  6671  01A3  3002               	movlw	2
  6672  01A4  0250               	subwf	Led_DynamicStorm@i,w
  6673  01A5  1803               	btfsc	3,0
  6674  01A6  0008               	return
  6675                           
  6676                           ;led.c: 233: if (gLedRunPara.mCurrentBright[i] < duty[i]) {
  6677  01A7  3550               	lslf	Led_DynamicStorm@i,w
  6678  01A8  3E4A               	addlw	(low (Led_DynamicStorm@duty| 0))& (0+255)
  6679  01A9  0086               	movwf	6
  6680  01AA  0187               	clrf	7
  6681  01AB  3F40               	moviw [0]fsr1
  6682  01AC  00F8               	movwf	??_Led_DynamicStorm
  6683  01AD  3F41               	moviw [1]fsr1
  6684  01AE  00F9               	movwf	??_Led_DynamicStorm+1
  6685  01AF  3550               	lslf	Led_DynamicStorm@i,w
  6686  01B0  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6687  01B1  0086               	movwf	6
  6688  01B2  0187               	clrf	7
  6689  01B3  3F40               	moviw [0]fsr1
  6690  01B4  00FA               	movwf	??_Led_DynamicStorm+2
  6691  01B5  3F41               	moviw [1]fsr1
  6692  01B6  00FB               	movwf	??_Led_DynamicStorm+3
  6693  01B7  0879               	movf	??_Led_DynamicStorm+1,w
  6694  01B8  027B               	subwf	??_Led_DynamicStorm+3,w
  6695  01B9  1D03               	skipz
  6696  01BA  29BD               	goto	u179_25
  6697  01BB  0878               	movf	??_Led_DynamicStorm,w
  6698  01BC  027A               	subwf	??_Led_DynamicStorm+2,w
  6699  01BD                     u179_25:	
  6700  01BD  1803               	skipnc
  6701  01BE  29C9               	goto	i1l2481
  6702                           
  6703                           ;led.c: 234: gLedRunPara.mCurrentBright[i]++;
  6704  01BF  3550               	lslf	Led_DynamicStorm@i,w
  6705  01C0  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6706  01C1  0086               	movwf	6
  6707  01C2  0187               	clrf	7
  6708  01C3  3001               	movlw	1
  6709  01C4  0781               	addwf	1,f
  6710  01C5  3141               	addfsr 1,1
  6711  01C6  1803               	skipnc
  6712  01C7  0A81               	incf	1,f
  6713                           
  6714                           ;led.c: 235: } else if (gLedRunPara.mCurrentBright[i] > duty[i]) {
  6715  01C8  29EB               	goto	i1l2485
  6716  01C9                     i1l2481:	
  6717  01C9  3550               	lslf	Led_DynamicStorm@i,w
  6718  01CA  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6719  01CB  0086               	movwf	6
  6720  01CC  0187               	clrf	7
  6721  01CD  3F40               	moviw [0]fsr1
  6722  01CE  00F8               	movwf	??_Led_DynamicStorm
  6723  01CF  3F41               	moviw [1]fsr1
  6724  01D0  00F9               	movwf	??_Led_DynamicStorm+1
  6725  01D1  3550               	lslf	Led_DynamicStorm@i,w
  6726  01D2  3E4A               	addlw	(low (Led_DynamicStorm@duty| 0))& (0+255)
  6727  01D3  0086               	movwf	6
  6728  01D4  0187               	clrf	7
  6729  01D5  3F40               	moviw [0]fsr1
  6730  01D6  00FA               	movwf	??_Led_DynamicStorm+2
  6731  01D7  3F41               	moviw [1]fsr1
  6732  01D8  00FB               	movwf	??_Led_DynamicStorm+3
  6733  01D9  0879               	movf	??_Led_DynamicStorm+1,w
  6734  01DA  027B               	subwf	??_Led_DynamicStorm+3,w
  6735  01DB  1D03               	skipz
  6736  01DC  29DF               	goto	u180_25
  6737  01DD  0878               	movf	??_Led_DynamicStorm,w
  6738  01DE  027A               	subwf	??_Led_DynamicStorm+2,w
  6739  01DF                     u180_25:	
  6740  01DF  1803               	skipnc
  6741  01E0  29EB               	goto	i1l2485
  6742                           
  6743                           ;led.c: 236: gLedRunPara.mCurrentBright[i]--;
  6744  01E1  3550               	lslf	Led_DynamicStorm@i,w
  6745  01E2  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6746  01E3  0086               	movwf	6
  6747  01E4  0187               	clrf	7
  6748  01E5  3001               	movlw	1
  6749  01E6  0281               	subwf	1,f
  6750  01E7  3141               	addfsr 1,1
  6751  01E8  3000               	movlw	0
  6752  01E9  3B81               	subwfb	1,f
  6753  01EA  317F               	addfsr 1,-1
  6754  01EB                     i1l2485:	
  6755                           
  6756                           ;led.c: 237: }
  6757                           ;led.c: 238: loadDuty[i](gLedRunPara.mCurrentBright[i]);
  6758  01EB  3550               	lslf	Led_DynamicStorm@i,w
  6759  01EC  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6760  01ED  0086               	movwf	6
  6761  01EE  0187               	clrf	7
  6762  01EF  3F40               	moviw [0]fsr1
  6763  01F0  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  6764  01F1  3F41               	moviw [1]fsr1
  6765  01F2  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  6766  01F3  3550               	lslf	Led_DynamicStorm@i,w
  6767  01F4  3E63               	addlw	(low (_loadDuty| 0))& (0+255)
  6768  01F5  0086               	movwf	6
  6769  01F6  0187               	clrf	7
  6770  01F7  3F41               	moviw [1]fsr1
  6771  01F8  008A               	movwf	10
  6772  01F9  3F40               	moviw [0]fsr1
  6773  01FA  000A               	callw
  6774  01FB  3181               	pagesel	$
  6775  01FC  3001               	movlw	1
  6776  01FD  00F8               	movwf	??_Led_DynamicStorm
  6777  01FE  0878               	movf	??_Led_DynamicStorm,w
  6778  01FF  0020               	movlb	0	; select bank0
  6779  0200  07D0               	addwf	Led_DynamicStorm@i,f
  6780  0201  29A3               	goto	L5
  6781  0202                     __end_of_Led_DynamicStorm:	
  6782                           
  6783                           	psect	text39
  6784  0202                     __ptext39:	
  6785 ;; *************** function _Led_DynamicCloud *****************
  6786 ;; Defined at:
  6787 ;;		line 203 in file "user/src/led.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  ptp             2    6[COMMON] unsigned int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  duty            4    2[BANK0 ] unsigned int [2]
  6792 ;;  val             2    0[BANK0 ] unsigned int 
  6793 ;;  i               1    6[BANK0 ] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6803 ;;      Params:         2       0       0       0
  6804 ;;      Locals:         0       7       0       0
  6805 ;;      Temps:          4       0       0       0
  6806 ;;      Totals:         6       7       0       0
  6807 ;;Total ram usage:       13 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:    1
  6810 ;; This function calls:
  6811 ;;		_PWM1_LoadDutyValue
  6812 ;;		_PWM3_LoadDutyValue
  6813 ;;		i1___wmul
  6814 ;; This function is called by:
  6815 ;;		_Led_RunMusic
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           
  6820                           ;psect for function _Led_DynamicCloud
  6821  0202                     _Led_DynamicCloud:	
  6822                           
  6823                           ;led.c: 204: uint8_t i;
  6824                           ;led.c: 205: uint16_t val = ptp * ( 6 + GAIN[gLedPara.mVolume] );
  6825                           
  6826                           ;incstack = 0
  6827                           ; Regs used in _Led_DynamicCloud: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6828  0202  0021               	movlb	1	; select bank1
  6829  0203  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  6830  0204  0C89               	rrf	9,f
  6831  0205  3907               	andlw	7
  6832  0206  3EF5               	addlw	low (_GAIN| (0+32768))
  6833  0207  0084               	movwf	4
  6834  0208  3087               	movlw	high (_GAIN| (0+32768))
  6835  0209  1803               	skipnc
  6836  020A  3E01               	addlw	1
  6837  020B  0085               	movwf	5
  6838  020C  0800               	movf	0,w	;code access
  6839  020D  3E06               	addlw	6
  6840  020E  00F0               	movwf	i1___wmul@multiplier
  6841  020F  3000               	movlw	0
  6842  0210  1803               	skipnc
  6843  0211  3001               	movlw	1
  6844  0212  00F1               	movwf	i1___wmul@multiplier+1
  6845  0213  0877               	movf	Led_DynamicCloud@ptp+1,w
  6846  0214  00F3               	movwf	i1___wmul@multiplicand+1
  6847  0215  0876               	movf	Led_DynamicCloud@ptp,w
  6848  0216  00F2               	movwf	i1___wmul@multiplicand
  6849  0217  318E  26B7  3182   	fcall	i1___wmul
  6850  021A  0871               	movf	?i1___wmul+1,w
  6851  021B  0020               	movlb	0	; select bank0
  6852  021C  00CB               	movwf	Led_DynamicCloud@val+1
  6853  021D  0870               	movf	?i1___wmul,w
  6854  021E  00CA               	movwf	Led_DynamicCloud@val
  6855                           
  6856                           ;led.c: 206: uint16_t duty[2] = {400, 320};
  6857  021F  085E               	movf	Led_DynamicCloud@F4456+3,w
  6858  0220  00CF               	movwf	Led_DynamicCloud@duty+3
  6859  0221  085D               	movf	Led_DynamicCloud@F4456+2,w
  6860  0222  00CE               	movwf	Led_DynamicCloud@duty+2
  6861  0223  085C               	movf	Led_DynamicCloud@F4456+1,w
  6862  0224  00CD               	movwf	Led_DynamicCloud@duty+1
  6863  0225  085B               	movf	Led_DynamicCloud@F4456,w
  6864  0226  00CC               	movwf	Led_DynamicCloud@duty
  6865                           
  6866                           ;led.c: 207: if (duty[1] > val) {
  6867  0227  084F               	movf	Led_DynamicCloud@duty+3,w
  6868  0228  024B               	subwf	Led_DynamicCloud@val+1,w
  6869  0229  1D03               	skipz
  6870  022A  2A2D               	goto	u172_25
  6871  022B  084E               	movf	Led_DynamicCloud@duty+2,w
  6872  022C  024A               	subwf	Led_DynamicCloud@val,w
  6873  022D                     u172_25:	
  6874  022D  1803               	skipnc
  6875  022E  2A34               	goto	i1l2441
  6876                           
  6877                           ;led.c: 208: duty[1] -= val;
  6878  022F  084A               	movf	Led_DynamicCloud@val,w
  6879  0230  02CE               	subwf	Led_DynamicCloud@duty+2,f
  6880  0231  084B               	movf	Led_DynamicCloud@val+1,w
  6881  0232  3BCF               	subwfb	Led_DynamicCloud@duty+3,f
  6882                           
  6883                           ;led.c: 209: } else {
  6884  0233  2A36               	goto	i1l462
  6885  0234                     i1l2441:	
  6886                           
  6887                           ;led.c: 210: duty[1] = 0;
  6888  0234  01CE               	clrf	Led_DynamicCloud@duty+2
  6889  0235  01CF               	clrf	Led_DynamicCloud@duty+3
  6890  0236                     i1l462:	
  6891                           
  6892                           ;led.c: 211: }
  6893                           ;led.c: 212: for (i = 0; i < 2; i++) {
  6894  0236  01D0               	clrf	Led_DynamicCloud@i
  6895  0237                     L6:	
  6896  0237  3002               	movlw	2
  6897  0238  0250               	subwf	Led_DynamicCloud@i,w
  6898  0239  1803               	btfsc	3,0
  6899  023A  0008               	return
  6900                           
  6901                           ;led.c: 213: if (gLedRunPara.mCurrentBright[i] < duty[i]) {
  6902  023B  3550               	lslf	Led_DynamicCloud@i,w
  6903  023C  3E4C               	addlw	(low (Led_DynamicCloud@duty| 0))& (0+255)
  6904  023D  0086               	movwf	6
  6905  023E  0187               	clrf	7
  6906  023F  3F40               	moviw [0]fsr1
  6907  0240  00F8               	movwf	??_Led_DynamicCloud
  6908  0241  3F41               	moviw [1]fsr1
  6909  0242  00F9               	movwf	??_Led_DynamicCloud+1
  6910  0243  3550               	lslf	Led_DynamicCloud@i,w
  6911  0244  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6912  0245  0086               	movwf	6
  6913  0246  0187               	clrf	7
  6914  0247  3F40               	moviw [0]fsr1
  6915  0248  00FA               	movwf	??_Led_DynamicCloud+2
  6916  0249  3F41               	moviw [1]fsr1
  6917  024A  00FB               	movwf	??_Led_DynamicCloud+3
  6918  024B  0879               	movf	??_Led_DynamicCloud+1,w
  6919  024C  027B               	subwf	??_Led_DynamicCloud+3,w
  6920  024D  1D03               	skipz
  6921  024E  2A51               	goto	u174_25
  6922  024F  0878               	movf	??_Led_DynamicCloud,w
  6923  0250  027A               	subwf	??_Led_DynamicCloud+2,w
  6924  0251                     u174_25:	
  6925  0251  1803               	skipnc
  6926  0252  2A5D               	goto	i1l2451
  6927                           
  6928                           ;led.c: 214: gLedRunPara.mCurrentBright[i]++;
  6929  0253  3550               	lslf	Led_DynamicCloud@i,w
  6930  0254  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6931  0255  0086               	movwf	6
  6932  0256  0187               	clrf	7
  6933  0257  3001               	movlw	1
  6934  0258  0781               	addwf	1,f
  6935  0259  3141               	addfsr 1,1
  6936  025A  1803               	skipnc
  6937  025B  0A81               	incf	1,f
  6938                           
  6939                           ;led.c: 215: } else if (gLedRunPara.mCurrentBright[i] > duty[i]) {
  6940  025C  2A7F               	goto	i1l2455
  6941  025D                     i1l2451:	
  6942  025D  3550               	lslf	Led_DynamicCloud@i,w
  6943  025E  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6944  025F  0086               	movwf	6
  6945  0260  0187               	clrf	7
  6946  0261  3F40               	moviw [0]fsr1
  6947  0262  00F8               	movwf	??_Led_DynamicCloud
  6948  0263  3F41               	moviw [1]fsr1
  6949  0264  00F9               	movwf	??_Led_DynamicCloud+1
  6950  0265  3550               	lslf	Led_DynamicCloud@i,w
  6951  0266  3E4C               	addlw	(low (Led_DynamicCloud@duty| 0))& (0+255)
  6952  0267  0086               	movwf	6
  6953  0268  0187               	clrf	7
  6954  0269  3F40               	moviw [0]fsr1
  6955  026A  00FA               	movwf	??_Led_DynamicCloud+2
  6956  026B  3F41               	moviw [1]fsr1
  6957  026C  00FB               	movwf	??_Led_DynamicCloud+3
  6958  026D  0879               	movf	??_Led_DynamicCloud+1,w
  6959  026E  027B               	subwf	??_Led_DynamicCloud+3,w
  6960  026F  1D03               	skipz
  6961  0270  2A73               	goto	u175_25
  6962  0271  0878               	movf	??_Led_DynamicCloud,w
  6963  0272  027A               	subwf	??_Led_DynamicCloud+2,w
  6964  0273                     u175_25:	
  6965  0273  1803               	skipnc
  6966  0274  2A7F               	goto	i1l2455
  6967                           
  6968                           ;led.c: 216: gLedRunPara.mCurrentBright[i]--;
  6969  0275  3550               	lslf	Led_DynamicCloud@i,w
  6970  0276  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6971  0277  0086               	movwf	6
  6972  0278  0187               	clrf	7
  6973  0279  3001               	movlw	1
  6974  027A  0281               	subwf	1,f
  6975  027B  3141               	addfsr 1,1
  6976  027C  3000               	movlw	0
  6977  027D  3B81               	subwfb	1,f
  6978  027E  317F               	addfsr 1,-1
  6979  027F                     i1l2455:	
  6980                           
  6981                           ;led.c: 217: }
  6982                           ;led.c: 218: loadDuty[i](gLedRunPara.mCurrentBright[i]);
  6983  027F  3550               	lslf	Led_DynamicCloud@i,w
  6984  0280  3E20               	addlw	(low (_gLedRunPara| 0))& (0+255)
  6985  0281  0086               	movwf	6
  6986  0282  0187               	clrf	7
  6987  0283  3F40               	moviw [0]fsr1
  6988  0284  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  6989  0285  3F41               	moviw [1]fsr1
  6990  0286  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  6991  0287  3550               	lslf	Led_DynamicCloud@i,w
  6992  0288  3E63               	addlw	(low (_loadDuty| 0))& (0+255)
  6993  0289  0086               	movwf	6
  6994  028A  0187               	clrf	7
  6995  028B  3F41               	moviw [1]fsr1
  6996  028C  008A               	movwf	10
  6997  028D  3F40               	moviw [0]fsr1
  6998  028E  000A               	callw
  6999  028F  3182               	pagesel	$
  7000  0290  3001               	movlw	1
  7001  0291  00F8               	movwf	??_Led_DynamicCloud
  7002  0292  0878               	movf	??_Led_DynamicCloud,w
  7003  0293  0020               	movlb	0	; select bank0
  7004  0294  07D0               	addwf	Led_DynamicCloud@i,f
  7005  0295  2A37               	goto	L6
  7006  0296                     __end_of_Led_DynamicCloud:	
  7007                           
  7008                           	psect	text40
  7009  0EB7                     __ptext40:	
  7010 ;; *************** function i1___wmul *****************
  7011 ;; Defined at:
  7012 ;;		line 15 in file "/Applications/microchip/xc8/v1.40/sources/common/Umul16.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  multiplier      2    0[COMMON] unsigned int 
  7015 ;;  multiplicand    2    2[COMMON] unsigned int 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  __wmul          2    4[COMMON] unsigned int 
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  2    0[COMMON] unsigned int 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7027 ;;      Params:         4       0       0       0
  7028 ;;      Locals:         2       0       0       0
  7029 ;;      Temps:          0       0       0       0
  7030 ;;      Totals:         6       0       0       0
  7031 ;;Total ram usage:        6 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_Led_DynamicCloud
  7037 ;;		_Led_DynamicStorm
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function i1___wmul
  7043  0EB7                     i1___wmul:	
  7044                           
  7045                           ;incstack = 0
  7046                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7047  0EB7  01F4               	clrf	i1___wmul@product
  7048  0EB8  01F5               	clrf	i1___wmul@product+1
  7049  0EB9                     i1l2291:	
  7050  0EB9  1C70               	btfss	i1___wmul@multiplier,0
  7051  0EBA  2EBF               	goto	i1l665
  7052  0EBB  0872               	movf	i1___wmul@multiplicand,w
  7053  0EBC  07F4               	addwf	i1___wmul@product,f
  7054  0EBD  0873               	movf	i1___wmul@multiplicand+1,w
  7055  0EBE  3DF5               	addwfc	i1___wmul@product+1,f
  7056  0EBF                     i1l665:	
  7057  0EBF  3001               	movlw	1
  7058  0EC0                     u146_25:	
  7059  0EC0  35F2               	lslf	i1___wmul@multiplicand,f
  7060  0EC1  0DF3               	rlf	i1___wmul@multiplicand+1,f
  7061  0EC2  0B89               	decfsz	9,f
  7062  0EC3  2EC0               	goto	u146_25
  7063  0EC4  3001               	movlw	1
  7064  0EC5                     u147_25:	
  7065  0EC5  36F1               	lsrf	i1___wmul@multiplier+1,f
  7066  0EC6  0CF0               	rrf	i1___wmul@multiplier,f
  7067  0EC7  0B89               	decfsz	9,f
  7068  0EC8  2EC5               	goto	u147_25
  7069  0EC9  0870               	movf	i1___wmul@multiplier,w
  7070  0ECA  0471               	iorwf	i1___wmul@multiplier+1,w
  7071  0ECB  1D03               	btfss	3,2
  7072  0ECC  2EB9               	goto	i1l2291
  7073  0ECD  0875               	movf	i1___wmul@product+1,w
  7074  0ECE  00F1               	movwf	?i1___wmul+1
  7075  0ECF  0874               	movf	i1___wmul@product,w
  7076  0ED0  00F0               	movwf	?i1___wmul
  7077  0ED1  0008               	return
  7078  0ED2                     __end_ofi1___wmul:	
  7079                           
  7080                           	psect	text41
  7081  0DBF                     __ptext41:	
  7082 ;; *************** function _PWM1_LoadDutyValue *****************
  7083 ;; Defined at:
  7084 ;;		line 14 in file "driver/src/pwm.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  dutyValue       2    0[COMMON] unsigned int 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7098 ;;      Params:         2       0       0       0
  7099 ;;      Locals:         0       0       0       0
  7100 ;;      Temps:          2       0       0       0
  7101 ;;      Totals:         4       0       0       0
  7102 ;;Total ram usage:        4 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_Led_Ramp
  7108 ;;		_Led_DynamicCloud
  7109 ;;		_Led_DynamicStorm
  7110 ;;		_Led_UpdateBright
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           
  7115                           ;psect for function _PWM1_LoadDutyValue
  7116  0DBF                     _PWM1_LoadDutyValue:	
  7117                           
  7118                           ;pwm.c: 16: PWM1DC = dutyValue << 6;
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in _PWM1_LoadDutyValue: [wreg]
  7122  0DBF  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  7123  0DC0  00F3               	movwf	??_PWM1_LoadDutyValue+1
  7124  0DC1  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  7125  0DC2  00F2               	movwf	??_PWM1_LoadDutyValue
  7126  0DC3  3006               	movlw	6
  7127  0DC4                     u138_25:	
  7128  0DC4  35F2               	lslf	??_PWM1_LoadDutyValue,f
  7129  0DC5  0DF3               	rlf	??_PWM1_LoadDutyValue+1,f
  7130  0DC6  0B89               	decfsz	9,f
  7131  0DC7  2DC4               	goto	u138_25
  7132  0DC8  0872               	movf	??_PWM1_LoadDutyValue,w
  7133  0DC9  002C               	movlb	12	; select bank12
  7134  0DCA  0091               	movwf	17	;volatile
  7135  0DCB  0873               	movf	??_PWM1_LoadDutyValue+1,w
  7136  0DCC  0092               	movwf	18	;volatile
  7137  0DCD  0008               	return
  7138  0DCE                     __end_of_PWM1_LoadDutyValue:	
  7139                           
  7140                           	psect	text42
  7141  0DB0                     __ptext42:	
  7142 ;; *************** function _PWM3_LoadDutyValue *****************
  7143 ;; Defined at:
  7144 ;;		line 36 in file "driver/src/pwm.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  dutyValue       2    0[COMMON] unsigned int 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7158 ;;      Params:         2       0       0       0
  7159 ;;      Locals:         0       0       0       0
  7160 ;;      Temps:          2       0       0       0
  7161 ;;      Totals:         4       0       0       0
  7162 ;;Total ram usage:        4 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_Led_Ramp
  7168 ;;		_Led_DynamicCloud
  7169 ;;		_Led_DynamicStorm
  7170 ;;		_Led_UpdateBright
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           
  7175                           ;psect for function _PWM3_LoadDutyValue
  7176  0DB0                     _PWM3_LoadDutyValue:	
  7177                           
  7178                           ;pwm.c: 38: PWM3DC = dutyValue << 6;
  7179                           
  7180                           ;incstack = 0
  7181                           ; Regs used in _PWM3_LoadDutyValue: [wreg]
  7182  0DB0  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  7183  0DB1  00F3               	movwf	??_PWM3_LoadDutyValue+1
  7184  0DB2  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  7185  0DB3  00F2               	movwf	??_PWM3_LoadDutyValue
  7186  0DB4  3006               	movlw	6
  7187  0DB5                     u139_25:	
  7188  0DB5  35F2               	lslf	??_PWM3_LoadDutyValue,f
  7189  0DB6  0DF3               	rlf	??_PWM3_LoadDutyValue+1,f
  7190  0DB7  0B89               	decfsz	9,f
  7191  0DB8  2DB5               	goto	u139_25
  7192  0DB9  0872               	movf	??_PWM3_LoadDutyValue,w
  7193  0DBA  002C               	movlb	12	; select bank12
  7194  0DBB  0097               	movwf	23	;volatile
  7195  0DBC  0873               	movf	??_PWM3_LoadDutyValue+1,w
  7196  0DBD  0098               	movwf	24	;volatile
  7197  0DBE  0008               	return
  7198  0DBF                     __end_of_PWM3_LoadDutyValue:	
  7199                           
  7200                           	psect	text43
  7201  062F                     __ptext43:	
  7202 ;; *************** function _Audio_SelectSound *****************
  7203 ;; Defined at:
  7204 ;;		line 25 in file "user/src/audio.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  index           1    wreg     unsigned char 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  index           1    3[COMMON] unsigned char 
  7209 ;;  checksum        1    4[COMMON] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7219 ;;      Params:         0       0       0       0
  7220 ;;      Locals:         2       0       0       0
  7221 ;;      Temps:          1       0       0       0
  7222 ;;      Totals:         3       0       0       0
  7223 ;;Total ram usage:        3 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:    1
  7226 ;; This function calls:
  7227 ;;		i1_EUSART_Write
  7228 ;; This function is called by:
  7229 ;;		_Led_RunMusic
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           
  7234                           ;psect for function _Audio_SelectSound
  7235  062F                     _Audio_SelectSound:	
  7236                           
  7237                           ;incstack = 0
  7238                           ; Regs used in _Audio_SelectSound: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7239                           ;Audio_SelectSound@index stored from wreg
  7240  062F  00F3               	movwf	Audio_SelectSound@index
  7241                           
  7242                           ;audio.c: 27: uint8_t checksum = 0x00;
  7243  0630  01F4               	clrf	Audio_SelectSound@checksum
  7244                           
  7245                           ;audio.c: 28: EUSART_Write ( 0x7E );
  7246  0631  307E               	movlw	126
  7247  0632  3187  2769  3186   	fcall	i1_EUSART_Write
  7248                           
  7249                           ;audio.c: 29: checksum ^= EUSART_Write ( 0x05 );
  7250  0635  3005               	movlw	5
  7251  0636  3187  2769  3186   	fcall	i1_EUSART_Write
  7252  0639  00F2               	movwf	??_Audio_SelectSound
  7253  063A  0872               	movf	??_Audio_SelectSound,w
  7254  063B  06F4               	xorwf	Audio_SelectSound@checksum,f
  7255                           
  7256                           ;audio.c: 30: checksum ^= EUSART_Write ( 0x41 );
  7257  063C  3041               	movlw	65
  7258  063D  3187  2769  3186   	fcall	i1_EUSART_Write
  7259  0640  00F2               	movwf	??_Audio_SelectSound
  7260  0641  0872               	movf	??_Audio_SelectSound,w
  7261  0642  06F4               	xorwf	Audio_SelectSound@checksum,f
  7262                           
  7263                           ;audio.c: 31: checksum ^= EUSART_Write ( 0x00 );
  7264  0643  3000               	movlw	0
  7265  0644  3187  2769  3186   	fcall	i1_EUSART_Write
  7266  0647  00F2               	movwf	??_Audio_SelectSound
  7267  0648  0872               	movf	??_Audio_SelectSound,w
  7268  0649  06F4               	xorwf	Audio_SelectSound@checksum,f
  7269                           
  7270                           ;audio.c: 32: checksum ^= EUSART_Write ( index );
  7271  064A  0873               	movf	Audio_SelectSound@index,w
  7272  064B  3187  2769  3186   	fcall	i1_EUSART_Write
  7273  064E  00F2               	movwf	??_Audio_SelectSound
  7274  064F  0872               	movf	??_Audio_SelectSound,w
  7275  0650  06F4               	xorwf	Audio_SelectSound@checksum,f
  7276                           
  7277                           ;audio.c: 33: EUSART_Write ( checksum );
  7278  0651  0874               	movf	Audio_SelectSound@checksum,w
  7279  0652  3187  2769  3186   	fcall	i1_EUSART_Write
  7280                           
  7281                           ;audio.c: 34: EUSART_Write ( 0xEF );
  7282  0655  30EF               	movlw	239
  7283  0656  3187  2769         	fcall	i1_EUSART_Write
  7284  0658  0008               	return
  7285  0659                     __end_of_Audio_SelectSound:	
  7286                           
  7287                           	psect	text44
  7288  045D                     __ptext44:	
  7289 ;; *************** function _Key_Scan *****************
  7290 ;; Defined at:
  7291 ;;		line 24 in file "user/src/key.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  keyNum          1    1[BANK0 ] unsigned char 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7305 ;;      Params:         0       0       0       0
  7306 ;;      Locals:         0       1       0       0
  7307 ;;      Temps:          0       1       0       0
  7308 ;;      Totals:         0       2       0       0
  7309 ;;Total ram usage:        2 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    4
  7312 ;; This function calls:
  7313 ;;		Absolute function
  7314 ;;		_Key_Read
  7315 ;;		_Led_OnKeyPressed
  7316 ;; This function is called by:
  7317 ;;		_Led_Run
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function _Key_Scan
  7323  045D                     _Key_Scan:	
  7324                           
  7325                           ;key.c: 25: static uint8_t lastKey = 0x00;
  7326                           ;key.c: 26: static uint8_t rptCount = 0;
  7327                           ;key.c: 27: static uint16_t idleCount = 0;
  7328                           ;key.c: 28: uint8_t keyNum = Key_Read();
  7329                           
  7330                           ;incstack = 0
  7331                           ; Regs used in _Key_Scan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7332  045D  3185  259C  3184   	fcall	_Key_Read
  7333  0460  0020               	movlb	0	; select bank0
  7334  0461  00CA               	movwf	??_Key_Scan
  7335  0462  084A               	movf	??_Key_Scan,w
  7336  0463  00CB               	movwf	Key_Scan@keyNum
  7337                           
  7338                           ;key.c: 30: if (keyNum != 0x00) {
  7339  0464  084B               	movf	Key_Scan@keyNum,w
  7340  0465  1903               	btfsc	3,2
  7341  0466  2C94               	goto	i1l2661
  7342                           
  7343                           ;key.c: 31: idleCount = 0;
  7344  0467  01AF               	clrf	Key_Scan@idleCount
  7345  0468  01B0               	clrf	Key_Scan@idleCount+1
  7346                           
  7347                           ;key.c: 32: if (keyNum == lastKey) {
  7348  0469  084B               	movf	Key_Scan@keyNum,w
  7349  046A  0643               	xorwf	Key_Scan@lastKey,w
  7350  046B  1D03               	skipz
  7351  046C  2C91               	goto	i1l2659
  7352                           
  7353                           ;key.c: 33: if (rptCount < 128) {
  7354  046D  3080               	movlw	128
  7355  046E  0244               	subwf	Key_Scan@rptCount,w
  7356  046F  1803               	skipnc
  7357  0470  2C76               	goto	i1l2649
  7358                           
  7359                           ;key.c: 34: rptCount++;
  7360  0471  3001               	movlw	1
  7361  0472  00CA               	movwf	??_Key_Scan
  7362  0473  084A               	movf	??_Key_Scan,w
  7363  0474  07C4               	addwf	Key_Scan@rptCount,f
  7364                           
  7365                           ;key.c: 35: } else if (rptCount == 128) {
  7366  0475  2CC4               	goto	i1l2685
  7367  0476                     i1l2649:	
  7368  0476  3080               	movlw	128
  7369  0477  0644               	xorwf	Key_Scan@rptCount,w
  7370  0478  1D03               	btfss	3,2
  7371  0479  2CC4               	goto	i1l2685
  7372                           
  7373                           ;key.c: 36: rptCount++;
  7374  047A  3001               	movlw	1
  7375  047B  00CA               	movwf	??_Key_Scan
  7376  047C  084A               	movf	??_Key_Scan,w
  7377  047D  07C4               	addwf	Key_Scan@rptCount,f
  7378                           
  7379                           ;key.c: 37: keyValue = keyNum | 0x80;
  7380  047E  084B               	movf	Key_Scan@keyNum,w
  7381  047F  3880               	iorlw	128
  7382  0480  00CA               	movwf	??_Key_Scan
  7383  0481  084A               	movf	??_Key_Scan,w
  7384  0482  00C6               	movwf	_keyValue	;volatile
  7385                           
  7386                           ;key.c: 38: if (key_press_cb) {
  7387  0483  0839               	movf	_key_press_cb,w
  7388  0484  043A               	iorwf	_key_press_cb+1,w
  7389  0485  1903               	btfsc	3,2
  7390  0486  2CC4               	goto	i1l2685
  7391                           
  7392                           ;key.c: 39: key_press_cb(keyValue);
  7393  0487  0846               	movf	_keyValue,w	;volatile
  7394  0488  00CA               	movwf	??_Key_Scan
  7395  0489  084A               	movf	??_Key_Scan,w
  7396  048A  00F9               	movwf	Led_OnKeyPressed@key
  7397  048B  083A               	movf	_key_press_cb+1,w
  7398  048C  008A               	movwf	10
  7399  048D  0839               	movf	_key_press_cb,w
  7400  048E  000A               	callw
  7401  048F  3184               	pagesel	$
  7402                           
  7403                           ;key.c: 40: }
  7404                           ;key.c: 41: }
  7405                           ;key.c: 42: } else {
  7406  0490  2CC4               	goto	i1l2685
  7407  0491                     i1l2659:	
  7408                           
  7409                           ;key.c: 43: rptCount = 0;
  7410  0491  0020               	movlb	0	; select bank0
  7411  0492  01C4               	clrf	Key_Scan@rptCount
  7412                           
  7413                           ;key.c: 44: }
  7414                           ;key.c: 45: } else {
  7415  0493  2CC4               	goto	i1l2685
  7416  0494                     i1l2661:	
  7417                           
  7418                           ;key.c: 46: if (lastKey != 0x00) {
  7419  0494  0843               	movf	Key_Scan@lastKey,w
  7420  0495  1903               	btfsc	3,2
  7421  0496  2CB0               	goto	i1l2673
  7422                           
  7423                           ;key.c: 47: if (rptCount > 1 && rptCount < 128) {
  7424  0497  3002               	movlw	2
  7425  0498  0244               	subwf	Key_Scan@rptCount,w
  7426  0499  1C03               	skipc
  7427  049A  2CB0               	goto	i1l2673
  7428  049B  3080               	movlw	128
  7429  049C  0244               	subwf	Key_Scan@rptCount,w
  7430  049D  1803               	skipnc
  7431  049E  2CB0               	goto	i1l2673
  7432                           
  7433                           ;key.c: 48: keyValue = lastKey;
  7434  049F  0843               	movf	Key_Scan@lastKey,w
  7435  04A0  00CA               	movwf	??_Key_Scan
  7436  04A1  084A               	movf	??_Key_Scan,w
  7437  04A2  00C6               	movwf	_keyValue	;volatile
  7438                           
  7439                           ;key.c: 49: if (key_press_cb) {
  7440  04A3  0839               	movf	_key_press_cb,w
  7441  04A4  043A               	iorwf	_key_press_cb+1,w
  7442  04A5  1903               	btfsc	3,2
  7443  04A6  2CB0               	goto	i1l2673
  7444                           
  7445                           ;key.c: 50: key_press_cb(keyValue);
  7446  04A7  0846               	movf	_keyValue,w	;volatile
  7447  04A8  00CA               	movwf	??_Key_Scan
  7448  04A9  084A               	movf	??_Key_Scan,w
  7449  04AA  00F9               	movwf	Led_OnKeyPressed@key
  7450  04AB  083A               	movf	_key_press_cb+1,w
  7451  04AC  008A               	movwf	10
  7452  04AD  0839               	movf	_key_press_cb,w
  7453  04AE  000A               	callw
  7454  04AF  3184               	pagesel	$
  7455  04B0                     i1l2673:	
  7456                           
  7457                           ;key.c: 51: }
  7458                           ;key.c: 52: }
  7459                           ;key.c: 53: }
  7460                           ;key.c: 54: rptCount = 0;
  7461  04B0  0020               	movlb	0	; select bank0
  7462  04B1  01C4               	clrf	Key_Scan@rptCount
  7463                           
  7464                           ;key.c: 56: if (idleCount < 1000) {
  7465  04B2  3003               	movlw	3
  7466  04B3  0230               	subwf	Key_Scan@idleCount+1,w
  7467  04B4  30E8               	movlw	232
  7468  04B5  1903               	skipnz
  7469  04B6  022F               	subwf	Key_Scan@idleCount,w
  7470  04B7  1C03               	btfss	3,0
  7471  04B8  2CC0               	goto	i1l2681
  7472                           
  7473                           ;key.c: 58: } else if (idleCount == 1000) {
  7474                           
  7475                           ;key.c: 57: idleCount++;
  7476  04B9  30E8               	movlw	232
  7477  04BA  062F               	xorwf	Key_Scan@idleCount,w
  7478  04BB  3003               	movlw	3
  7479  04BC  1903               	skipnz
  7480  04BD  0630               	xorwf	Key_Scan@idleCount+1,w
  7481  04BE  1D03               	btfss	3,2
  7482  04BF  2CC4               	goto	i1l2685
  7483  04C0                     i1l2681:	
  7484                           
  7485                           ;key.c: 59: idleCount++;
  7486  04C0  3001               	movlw	1
  7487  04C1  07AF               	addwf	Key_Scan@idleCount,f
  7488  04C2  3000               	movlw	0
  7489  04C3  3DB0               	addwfc	Key_Scan@idleCount+1,f
  7490  04C4                     i1l2685:	
  7491                           
  7492                           ;key.c: 62: }
  7493                           ;key.c: 63: }
  7494                           ;key.c: 64: }
  7495                           ;key.c: 65: lastKey = keyNum;
  7496  04C4  0020               	movlb	0	; select bank0
  7497  04C5  084B               	movf	Key_Scan@keyNum,w
  7498  04C6  00CA               	movwf	??_Key_Scan
  7499  04C7  084A               	movf	??_Key_Scan,w
  7500  04C8  00C3               	movwf	Key_Scan@lastKey
  7501  04C9  0008               	return
  7502  04CA                     __end_of_Key_Scan:	
  7503                           
  7504                           	psect	text45
  7505  0041                     __ptext45:	
  7506 ;; *************** function _Led_OnKeyPressed *****************
  7507 ;; Defined at:
  7508 ;;		line 115 in file "user/src/led.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  key             1    9[COMMON] unsigned char 
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      void 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7522 ;;      Params:         1       0       0       0
  7523 ;;      Locals:         2       0       0       0
  7524 ;;      Temps:          2       0       0       0
  7525 ;;      Totals:         5       0       0       0
  7526 ;;Total ram usage:        5 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    3
  7529 ;; This function calls:
  7530 ;;		_Util_DecValue
  7531 ;;		_Util_IncValue
  7532 ;;		i1_Audio_SetVolume
  7533 ;;		i1_Audio_StopSound
  7534 ;;		i1_Led_Initialize
  7535 ;;		i1_Led_TurnOnAllRamp
  7536 ;;		i1_Led_TurnOnBlueRamp
  7537 ;;		i1_Led_TurnOnWhiteRamp
  7538 ;; This function is called by:
  7539 ;;		_Interrupt_Initialize
  7540 ;;		_Key_Scan
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           
  7545                           ;psect for function _Led_OnKeyPressed
  7546  0041                     _Led_OnKeyPressed:	
  7547                           
  7548                           ;led.c: 116: switch (key) {
  7549                           
  7550                           ;incstack = 0
  7551                           ; Regs used in _Led_OnKeyPressed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7552  0041  2955               	goto	i1l2409
  7553  0042                     i1l418:	
  7554                           ;led.c: 117: case 0x08:
  7555                           
  7556                           
  7557                           ;led.c: 118: if (gLedPara.mOn) {
  7558  0042  0021               	movlb	1	; select bank1
  7559  0043  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  7560  0044  0008               	return
  7561                           
  7562                           ;led.c: 119: Audio_StopSound();
  7563  0045  318E  269C  3180   	fcall	i1_Audio_StopSound
  7564                           
  7565                           ;led.c: 120: gLedPara.mMode++;
  7566  0048  0021               	movlb	1	; select bank1
  7567  0049  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7568  004A  3907               	andlw	7
  7569  004B  00FA               	movwf	??_Led_OnKeyPressed
  7570  004C  0AFA               	incf	??_Led_OnKeyPressed,f
  7571  004D  0DFA               	rlf	??_Led_OnKeyPressed,f
  7572  004E  0840               	movf	_gLedPara^(0+128),w	;volatile
  7573  004F  067A               	xorwf	??_Led_OnKeyPressed,w
  7574  0050  39F1               	andlw	-15
  7575  0051  067A               	xorwf	??_Led_OnKeyPressed,w
  7576  0052  00C0               	movwf	_gLedPara^(0+128)	;volatile
  7577                           
  7578                           ;led.c: 121: if (gLedPara.mMode >= 5) {
  7579  0053  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7580  0054  3907               	andlw	7
  7581  0055  00FA               	movwf	??_Led_OnKeyPressed
  7582  0056  3005               	movlw	5
  7583  0057  027A               	subwf	??_Led_OnKeyPressed,w
  7584  0058  1C03               	skipc
  7585  0059  285C               	goto	i1l2329
  7586                           
  7587                           ;led.c: 122: gLedPara.mMode = 0;
  7588  005A  30F1               	movlw	-15
  7589  005B  05C0               	andwf	_gLedPara^(0+128),f	;volatile
  7590  005C                     i1l2329:	
  7591                           
  7592                           ;led.c: 123: }
  7593                           ;led.c: 124: Led_Initialize();
  7594  005C  3185  2535         	fcall	i1_Led_Initialize
  7595                           
  7596                           ;led.c: 125: gLedRunPara.mParaChanged = 1;
  7597  005E  0020               	movlb	0	; select bank0
  7598  005F  1428               	bsf	_gLedRunPara+8,0	;volatile
  7599                           
  7600                           ;led.c: 126: }
  7601                           ;led.c: 127: break;
  7602  0060  0008               	return
  7603  0061                     i1l422:	
  7604                           ;led.c: 128: case 0x04:
  7605                           
  7606                           
  7607                           ;led.c: 129: if (gLedPara.mOn) {
  7608  0061  0021               	movlb	1	; select bank1
  7609  0062  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  7610  0063  0008               	return
  7611                           
  7612                           ;led.c: 130: if (gLedPara.mMode == 0) {
  7613  0064  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7614  0065  3907               	andlw	7
  7615  0066  3A00               	xorlw	0
  7616  0067  1D03               	skipz
  7617  0068  287A               	goto	i1l2339
  7618                           
  7619                           ;led.c: 131: Util_IncValue((uint16_t *) & gLedPara.all_bright, 1000, 200);
  7620  0069  30E8               	movlw	232
  7621  006A  00F0               	movwf	Util_IncValue@max
  7622  006B  3003               	movlw	3
  7623  006C  00F1               	movwf	Util_IncValue@max+1
  7624  006D  30C8               	movlw	200
  7625  006E  00F2               	movwf	Util_IncValue@delta
  7626  006F  3000               	movlw	0
  7627  0070  00F3               	movwf	Util_IncValue@delta+1
  7628  0071  30C1               	movlw	(low ((_gLedPara| 0+1)))& (0+255)
  7629  0072  3186  2659  3180   	fcall	_Util_IncValue
  7630                           
  7631                           ;led.c: 132: Led_TurnOnAllRamp();
  7632  0075  318E  2600         	fcall	i1_Led_TurnOnAllRamp
  7633                           
  7634                           ;led.c: 133: gLedRunPara.mParaChanged = 1;
  7635  0077  0020               	movlb	0	; select bank0
  7636  0078  1428               	bsf	_gLedRunPara+8,0	;volatile
  7637                           
  7638                           ;led.c: 134: } else if (gLedPara.mMode == 1) {
  7639  0079  0008               	return
  7640  007A                     i1l2339:	
  7641  007A  0021               	movlb	1	; select bank1
  7642  007B  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7643  007C  3907               	andlw	7
  7644  007D  3A01               	xorlw	1
  7645  007E  1D03               	skipz
  7646  007F  2891               	goto	i1l2347
  7647                           
  7648                           ;led.c: 135: Util_IncValue((uint16_t *) & gLedPara.white_bright, 1000, 200);
  7649  0080  30E8               	movlw	232
  7650  0081  00F0               	movwf	Util_IncValue@max
  7651  0082  3003               	movlw	3
  7652  0083  00F1               	movwf	Util_IncValue@max+1
  7653  0084  30C8               	movlw	200
  7654  0085  00F2               	movwf	Util_IncValue@delta
  7655  0086  3000               	movlw	0
  7656  0087  00F3               	movwf	Util_IncValue@delta+1
  7657  0088  30C3               	movlw	(low ((_gLedPara| 0+3)))& (0+255)
  7658  0089  3186  2659  3180   	fcall	_Util_IncValue
  7659                           
  7660                           ;led.c: 136: Led_TurnOnWhiteRamp();
  7661  008C  318D  2594         	fcall	i1_Led_TurnOnWhiteRamp
  7662                           
  7663                           ;led.c: 137: gLedRunPara.mParaChanged = 1;
  7664  008E  0020               	movlb	0	; select bank0
  7665  008F  1428               	bsf	_gLedRunPara+8,0	;volatile
  7666                           
  7667                           ;led.c: 138: } else if (gLedPara.mMode == 2) {
  7668  0090  0008               	return
  7669  0091                     i1l2347:	
  7670  0091  0021               	movlb	1	; select bank1
  7671  0092  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7672  0093  3907               	andlw	7
  7673  0094  3A02               	xorlw	2
  7674  0095  1D03               	skipz
  7675  0096  0008               	return
  7676                           
  7677                           ;led.c: 139: Util_IncValue((uint16_t *) & gLedPara.blue_bright, 1000, 200);
  7678  0097  30E8               	movlw	232
  7679  0098  00F0               	movwf	Util_IncValue@max
  7680  0099  3003               	movlw	3
  7681  009A  00F1               	movwf	Util_IncValue@max+1
  7682  009B  30C8               	movlw	200
  7683  009C  00F2               	movwf	Util_IncValue@delta
  7684  009D  3000               	movlw	0
  7685  009E  00F3               	movwf	Util_IncValue@delta+1
  7686  009F  30C5               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  7687  00A0  3186  2659  3180   	fcall	_Util_IncValue
  7688                           
  7689                           ;led.c: 140: Led_TurnOnBlueRamp();
  7690  00A3  318D  2564         	fcall	i1_Led_TurnOnBlueRamp
  7691                           
  7692                           ;led.c: 141: gLedRunPara.mParaChanged = 1;
  7693  00A5  0020               	movlb	0	; select bank0
  7694  00A6  1428               	bsf	_gLedRunPara+8,0	;volatile
  7695                           
  7696                           ;led.c: 142: }
  7697                           ;led.c: 143: }
  7698                           ;led.c: 144: break;
  7699  00A7  0008               	return
  7700  00A8                     i1l429:	
  7701                           ;led.c: 145: case 0x02:
  7702                           
  7703                           
  7704                           ;led.c: 146: if (gLedPara.mOn) {
  7705  00A8  0021               	movlb	1	; select bank1
  7706  00A9  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  7707  00AA  0008               	return
  7708                           
  7709                           ;led.c: 147: if (gLedPara.mMode == 0) {
  7710  00AB  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7711  00AC  3907               	andlw	7
  7712  00AD  3A00               	xorlw	0
  7713  00AE  1D03               	skipz
  7714  00AF  28C1               	goto	i1l2361
  7715                           
  7716                           ;led.c: 148: Util_DecValue((uint16_t *) & gLedPara.all_bright, 10, 200);
  7717  00B0  300A               	movlw	10
  7718  00B1  00F0               	movwf	Util_DecValue@min
  7719  00B2  3000               	movlw	0
  7720  00B3  00F1               	movwf	Util_DecValue@min+1
  7721  00B4  30C8               	movlw	200
  7722  00B5  00F2               	movwf	Util_DecValue@delta
  7723  00B6  3000               	movlw	0
  7724  00B7  00F3               	movwf	Util_DecValue@delta+1
  7725  00B8  30C1               	movlw	(low ((_gLedPara| 0+1)))& (0+255)
  7726  00B9  3186  2681  3180   	fcall	_Util_DecValue
  7727                           
  7728                           ;led.c: 149: Led_TurnOnAllRamp();
  7729  00BC  318E  2600         	fcall	i1_Led_TurnOnAllRamp
  7730                           
  7731                           ;led.c: 150: gLedRunPara.mParaChanged = 1;
  7732  00BE  0020               	movlb	0	; select bank0
  7733  00BF  1428               	bsf	_gLedRunPara+8,0	;volatile
  7734                           
  7735                           ;led.c: 151: } else if (gLedPara.mMode == 1) {
  7736  00C0  0008               	return
  7737  00C1                     i1l2361:	
  7738  00C1  0021               	movlb	1	; select bank1
  7739  00C2  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7740  00C3  3907               	andlw	7
  7741  00C4  3A01               	xorlw	1
  7742  00C5  1D03               	skipz
  7743  00C6  28D8               	goto	i1l2369
  7744                           
  7745                           ;led.c: 152: Util_DecValue((uint16_t *) & gLedPara.white_bright, 10, 200);
  7746  00C7  300A               	movlw	10
  7747  00C8  00F0               	movwf	Util_DecValue@min
  7748  00C9  3000               	movlw	0
  7749  00CA  00F1               	movwf	Util_DecValue@min+1
  7750  00CB  30C8               	movlw	200
  7751  00CC  00F2               	movwf	Util_DecValue@delta
  7752  00CD  3000               	movlw	0
  7753  00CE  00F3               	movwf	Util_DecValue@delta+1
  7754  00CF  30C3               	movlw	(low ((_gLedPara| 0+3)))& (0+255)
  7755  00D0  3186  2681  3180   	fcall	_Util_DecValue
  7756                           
  7757                           ;led.c: 153: Led_TurnOnWhiteRamp();
  7758  00D3  318D  2594         	fcall	i1_Led_TurnOnWhiteRamp
  7759                           
  7760                           ;led.c: 154: gLedRunPara.mParaChanged = 1;
  7761  00D5  0020               	movlb	0	; select bank0
  7762  00D6  1428               	bsf	_gLedRunPara+8,0	;volatile
  7763                           
  7764                           ;led.c: 155: } else if (gLedPara.mMode == 2) {
  7765  00D7  0008               	return
  7766  00D8                     i1l2369:	
  7767  00D8  0021               	movlb	1	; select bank1
  7768  00D9  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  7769  00DA  3907               	andlw	7
  7770  00DB  3A02               	xorlw	2
  7771  00DC  1D03               	skipz
  7772  00DD  0008               	return
  7773                           
  7774                           ;led.c: 156: Util_DecValue((uint16_t *) & gLedPara.blue_bright, 10, 200);
  7775  00DE  300A               	movlw	10
  7776  00DF  00F0               	movwf	Util_DecValue@min
  7777  00E0  3000               	movlw	0
  7778  00E1  00F1               	movwf	Util_DecValue@min+1
  7779  00E2  30C8               	movlw	200
  7780  00E3  00F2               	movwf	Util_DecValue@delta
  7781  00E4  3000               	movlw	0
  7782  00E5  00F3               	movwf	Util_DecValue@delta+1
  7783  00E6  30C5               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  7784  00E7  3186  2681  3180   	fcall	_Util_DecValue
  7785                           
  7786                           ;led.c: 157: Led_TurnOnBlueRamp();
  7787  00EA  318D  2564         	fcall	i1_Led_TurnOnBlueRamp
  7788                           
  7789                           ;led.c: 158: gLedRunPara.mParaChanged = 1;
  7790  00EC  0020               	movlb	0	; select bank0
  7791  00ED  1428               	bsf	_gLedRunPara+8,0	;volatile
  7792                           
  7793                           ;led.c: 159: }
  7794                           ;led.c: 160: }
  7795                           ;led.c: 161: break;
  7796  00EE  0008               	return
  7797  00EF                     i1l436:	
  7798                           ;led.c: 162: case 0x01:
  7799                           
  7800                           
  7801                           ;led.c: 163: if (gLedPara.mOn && gLedPara.mVolOn) {
  7802  00EF  0021               	movlb	1	; select bank1
  7803  00F0  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  7804  00F1  0008               	return
  7805  00F2  1E40               	btfss	_gLedPara^(0+128),4	;volatile
  7806  00F3  0008               	return
  7807                           
  7808                           ;led.c: 164: gLedPara.mVolume++;
  7809  00F4  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  7810  00F5  00FA               	movwf	??_Led_OnKeyPressed
  7811  00F6  0C7A               	rrf	??_Led_OnKeyPressed,w
  7812  00F7  3907               	andlw	7
  7813  00F8  00FA               	movwf	??_Led_OnKeyPressed
  7814  00F9  0AFA               	incf	??_Led_OnKeyPressed,f
  7815  00FA  0EFA               	swapf	??_Led_OnKeyPressed,f
  7816  00FB  0DFA               	rlf	??_Led_OnKeyPressed,f
  7817  00FC  0840               	movf	_gLedPara^(0+128),w	;volatile
  7818  00FD  067A               	xorwf	??_Led_OnKeyPressed,w
  7819  00FE  391F               	andlw	-225
  7820  00FF  067A               	xorwf	??_Led_OnKeyPressed,w
  7821  0100  00C0               	movwf	_gLedPara^(0+128)	;volatile
  7822                           
  7823                           ;led.c: 165: if (gLedPara.mVolume > 4) {
  7824  0101  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  7825  0102  0C89               	rrf	9,f
  7826  0103  3907               	andlw	7
  7827  0104  00FA               	movwf	??_Led_OnKeyPressed
  7828  0105  3005               	movlw	5
  7829  0106  027A               	subwf	??_Led_OnKeyPressed,w
  7830  0107  1C03               	skipc
  7831  0108  290B               	goto	i1l2383
  7832                           
  7833                           ;led.c: 166: gLedPara.mVolume = 0;
  7834  0109  301F               	movlw	-225
  7835  010A  05C0               	andwf	_gLedPara^(0+128),f	;volatile
  7836  010B                     i1l2383:	
  7837                           
  7838                           ;led.c: 167: }
  7839                           ;led.c: 168: Audio_SetVolume(VOLUME[gLedPara.mVolume]);
  7840  010B  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  7841  010C  0C89               	rrf	9,f
  7842  010D  3907               	andlw	7
  7843  010E  3EFA               	addlw	low (_VOLUME| (0+32768))
  7844  010F  0084               	movwf	4
  7845  0110  3087               	movlw	high (_VOLUME| (0+32768))
  7846  0111  1803               	skipnc
  7847  0112  3E01               	addlw	1
  7848  0113  0085               	movwf	5
  7849  0114  0800               	movf	0,w	;code access
  7850  0115  3187  278D         	fcall	i1_Audio_SetVolume
  7851                           
  7852                           ;led.c: 169: gLedRunPara.mParaChanged = 1;
  7853  0117  0020               	movlb	0	; select bank0
  7854  0118  1428               	bsf	_gLedRunPara+8,0	;volatile
  7855                           
  7856                           ;led.c: 170: }
  7857                           ;led.c: 171: break;
  7858  0119  0008               	return
  7859  011A                     i1l2387:	
  7860                           ;led.c: 172: case (0x80 | 0x08):
  7861                           
  7862                           
  7863                           ;led.c: 173: Audio_StopSound();
  7864  011A  318E  269C  3180   	fcall	i1_Audio_StopSound
  7865                           
  7866                           ;led.c: 174: gLedPara.mOn = !gLedPara.mOn;
  7867  011D  1003               	clrc
  7868  011E  0021               	movlb	1	; select bank1
  7869  011F  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  7870  0120  1403               	setc
  7871  0121  1C03               	btfss	3,0
  7872  0122  2926               	goto	u162_20
  7873  0123  0021               	movlb	1	; select bank1
  7874  0124  1440               	bsf	_gLedPara^(0+128),0	;volatile
  7875  0125  2928               	goto	i1l2391
  7876  0126                     u162_20:	
  7877  0126  0021               	movlb	1	; select bank1
  7878  0127  1040               	bcf	_gLedPara^(0+128),0	;volatile
  7879  0128                     i1l2391:	
  7880                           
  7881                           ;led.c: 175: Led_Initialize();
  7882  0128  3185  2535         	fcall	i1_Led_Initialize
  7883                           
  7884                           ;led.c: 176: gLedRunPara.mParaChanged = 1;
  7885  012A  0020               	movlb	0	; select bank0
  7886  012B  1428               	bsf	_gLedRunPara+8,0	;volatile
  7887                           
  7888                           ;led.c: 177: break;
  7889  012C  0008               	return
  7890  012D                     i1l440:	
  7891                           ;led.c: 178: case (0x80 | 0x01):
  7892                           
  7893                           
  7894                           ;led.c: 179: if (gLedPara.mOn) {
  7895  012D  0021               	movlb	1	; select bank1
  7896  012E  1C40               	btfss	_gLedPara^(0+128),0	;volatile
  7897  012F  0008               	return
  7898                           
  7899                           ;led.c: 180: gLedPara.mVolOn = !gLedPara.mVolOn;
  7900  0130  1003               	clrc
  7901  0131  1E40               	btfss	_gLedPara^(0+128),4	;volatile
  7902  0132  1403               	setc
  7903  0133  1C03               	btfss	3,0
  7904  0134  2938               	goto	u165_20
  7905  0135  0021               	movlb	1	; select bank1
  7906  0136  1640               	bsf	_gLedPara^(0+128),4	;volatile
  7907  0137  293A               	goto	i1l2397
  7908  0138                     u165_20:	
  7909  0138  0021               	movlb	1	; select bank1
  7910  0139  1240               	bcf	_gLedPara^(0+128),4	;volatile
  7911  013A                     i1l2397:	
  7912                           
  7913                           ;led.c: 181: Audio_SetVolume(gLedPara.mOn ? VOLUME[gLedPara.mVolume] : 0);
  7914  013A  1840               	btfsc	_gLedPara^(0+128),0	;volatile
  7915  013B  293F               	goto	i1l2401
  7916  013C  01FC               	clrf	_Led_OnKeyPressed$609
  7917  013D  01FD               	clrf	_Led_OnKeyPressed$609+1
  7918  013E  294F               	goto	i1l2403
  7919  013F                     i1l2401:	
  7920  013F  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  7921  0140  0C89               	rrf	9,f
  7922  0141  3907               	andlw	7
  7923  0142  3EFA               	addlw	low (_VOLUME| (0+32768))
  7924  0143  0084               	movwf	4
  7925  0144  3087               	movlw	high (_VOLUME| (0+32768))
  7926  0145  1803               	skipnc
  7927  0146  3E01               	addlw	1
  7928  0147  0085               	movwf	5
  7929  0148  0800               	movf	0,w	;code access
  7930  0149  00FA               	movwf	??_Led_OnKeyPressed
  7931  014A  01FB               	clrf	??_Led_OnKeyPressed+1
  7932  014B  087A               	movf	??_Led_OnKeyPressed,w
  7933  014C  00FC               	movwf	_Led_OnKeyPressed$609
  7934  014D  087B               	movf	??_Led_OnKeyPressed+1,w
  7935  014E  00FD               	movwf	_Led_OnKeyPressed$609+1
  7936  014F                     i1l2403:	
  7937  014F  087C               	movf	_Led_OnKeyPressed$609,w
  7938  0150  3187  278D         	fcall	i1_Audio_SetVolume
  7939                           
  7940                           ;led.c: 182: gLedRunPara.mParaChanged = 1;
  7941  0152  0020               	movlb	0	; select bank0
  7942  0153  1428               	bsf	_gLedRunPara+8,0	;volatile
  7943                           
  7944                           ;led.c: 187: }
  7945                           
  7946                           ;led.c: 186: break;
  7947                           
  7948                           ;led.c: 185: default:
  7949                           
  7950                           ;led.c: 183: }
  7951                           ;led.c: 184: break;
  7952  0154  0008               	return
  7953  0155                     i1l2409:	
  7954  0155  0879               	movf	Led_OnKeyPressed@key,w
  7955                           
  7956                           ; Switch size 1, requested type "space"
  7957                           ; Number of cases is 6, Range of values is 1 to 136
  7958                           ; switch strategies available:
  7959                           ; Name         Instructions Cycles
  7960                           ; simple_byte           19    10 (average)
  7961                           ; jumptable            263     9 (fixed)
  7962                           ;	Chosen strategy is simple_byte
  7963  0156  3A01               	xorlw	1	; case 1
  7964  0157  1903               	skipnz
  7965  0158  28EF               	goto	i1l436
  7966  0159  3A03               	xorlw	3	; case 2
  7967  015A  1903               	skipnz
  7968  015B  28A8               	goto	i1l429
  7969  015C  3A06               	xorlw	6	; case 4
  7970  015D  1903               	skipnz
  7971  015E  2861               	goto	i1l422
  7972  015F  3A0C               	xorlw	12	; case 8
  7973  0160  1903               	skipnz
  7974  0161  2842               	goto	i1l418
  7975  0162  3A89               	xorlw	137	; case 129
  7976  0163  1903               	skipnz
  7977  0164  292D               	goto	i1l440
  7978  0165  3A09               	xorlw	9	; case 136
  7979  0166  1903               	skipnz
  7980  0167  291A               	goto	i1l2387
  7981  0168  2969               	goto	i1l447
  7982  0169                     i1l447:	
  7983  0169  0008               	return
  7984  016A                     __end_of_Led_OnKeyPressed:	
  7985                           
  7986                           	psect	text46
  7987  0535                     __ptext46:	
  7988 ;; *************** function i1_Led_Initialize *****************
  7989 ;; Defined at:
  7990 ;;		line 48 in file "user/src/led.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8004 ;;      Params:         0       0       0       0
  8005 ;;      Locals:         2       0       0       0
  8006 ;;      Temps:          2       0       0       0
  8007 ;;      Totals:         4       0       0       0
  8008 ;;Total ram usage:        4 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    2
  8011 ;; This function calls:
  8012 ;;		i1_Audio_SetPlayMode
  8013 ;;		i1_Audio_SetVolume
  8014 ;;		i1_Audio_StopSound
  8015 ;;		i1_Led_TurnOffRamp
  8016 ;;		i1_Led_TurnOnAllRamp
  8017 ;;		i1_Led_TurnOnBlueRamp
  8018 ;;		i1_Led_TurnOnWhiteRamp
  8019 ;; This function is called by:
  8020 ;;		_Led_OnKeyPressed
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           
  8025                           ;psect for function i1_Led_Initialize
  8026  0535                     i1_Led_Initialize:	
  8027                           
  8028                           ;led.c: 49: _delay((unsigned long)((480)*(16000000/4000.0)));
  8029                           
  8030                           ;incstack = 0
  8031                           ; Regs used in i1_Led_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8032  0535  300A               	movlw	10
  8033  0536  00F6               	movwf	??i1_Led_Initialize+1
  8034  0537  30BE               	movlw	190
  8035  0538  00F5               	movwf	??i1_Led_Initialize
  8036  0539  3079               	movlw	121
  8037  053A                     u302_27:	
  8038  053A  0B89               	decfsz	9,f
  8039  053B  2D3A               	goto	u302_27
  8040  053C  0BF5               	decfsz	??i1_Led_Initialize,f
  8041  053D  2D3A               	goto	u302_27
  8042  053E  0BF6               	decfsz	??i1_Led_Initialize+1,f
  8043  053F  2D3A               	goto	u302_27
  8044  0540  0000               	nop
  8045                           
  8046                           ;led.c: 50: Audio_StopSound();
  8047  0541  318E  269C  3185   	fcall	i1_Audio_StopSound
  8048                           
  8049                           ;led.c: 51: _delay((unsigned long)((48)*(16000000/4000.0)));
  8050  0544  30FA               	movlw	250
  8051  0545  00F5               	movwf	??i1_Led_Initialize
  8052  0546  3058               	movlw	88
  8053  0547                     u303_27:	
  8054  0547  0B89               	decfsz	9,f
  8055  0548  2D47               	goto	u303_27
  8056  0549  0BF5               	decfsz	??i1_Led_Initialize,f
  8057  054A  2D47               	goto	u303_27
  8058  054B  3200               	nop2
  8059                           
  8060                           ;led.c: 52: Audio_SetVolume(gLedPara.mVolOn ? VOLUME[ gLedPara.mVolume ] : 0);
  8061  054C  0021               	movlb	1	; select bank1
  8062  054D  1A40               	btfsc	_gLedPara^(0+128),4	;volatile
  8063  054E  2D52               	goto	i1l2263
  8064  054F  01F7               	clrf	i1_Led_Initialize$595
  8065  0550  01F8               	clrf	i1_Led_Initialize$595+1
  8066  0551  2D62               	goto	i1l2265
  8067  0552                     i1l2263:	
  8068  0552  0E40               	swapf	_gLedPara^(0+128),w	;volatile
  8069  0553  0C89               	rrf	9,f
  8070  0554  3907               	andlw	7
  8071  0555  3EFA               	addlw	low (_VOLUME| (0+32768))
  8072  0556  0084               	movwf	4
  8073  0557  3087               	movlw	high (_VOLUME| (0+32768))
  8074  0558  1803               	skipnc
  8075  0559  3E01               	addlw	1
  8076  055A  0085               	movwf	5
  8077  055B  0800               	movf	0,w	;code access
  8078  055C  00F5               	movwf	??i1_Led_Initialize
  8079  055D  01F6               	clrf	??i1_Led_Initialize+1
  8080  055E  0875               	movf	??i1_Led_Initialize,w
  8081  055F  00F7               	movwf	i1_Led_Initialize$595
  8082  0560  0876               	movf	??i1_Led_Initialize+1,w
  8083  0561  00F8               	movwf	i1_Led_Initialize$595+1
  8084  0562                     i1l2265:	
  8085  0562  0877               	movf	i1_Led_Initialize$595,w
  8086  0563  3187  278D  3185   	fcall	i1_Audio_SetVolume
  8087                           
  8088                           ;led.c: 53: _delay((unsigned long)((48)*(16000000/4000.0)));
  8089  0566  30FA               	movlw	250
  8090  0567  00F5               	movwf	??i1_Led_Initialize
  8091  0568  3058               	movlw	88
  8092  0569                     u304_27:	
  8093  0569  0B89               	decfsz	9,f
  8094  056A  2D69               	goto	u304_27
  8095  056B  0BF5               	decfsz	??i1_Led_Initialize,f
  8096  056C  2D69               	goto	u304_27
  8097  056D  3200               	nop2
  8098                           
  8099                           ;led.c: 54: Audio_SetPlayMode(0x02);
  8100  056E  3002               	movlw	2
  8101  056F  3187  27B0  3185   	fcall	i1_Audio_SetPlayMode
  8102                           
  8103                           ;led.c: 55: _delay((unsigned long)((48)*(16000000/4000.0)));
  8104  0572  30FA               	movlw	250
  8105  0573  00F5               	movwf	??i1_Led_Initialize
  8106  0574  3058               	movlw	88
  8107  0575                     u305_27:	
  8108  0575  0B89               	decfsz	9,f
  8109  0576  2D75               	goto	u305_27
  8110  0577  0BF5               	decfsz	??i1_Led_Initialize,f
  8111  0578  2D75               	goto	u305_27
  8112  0579  3200               	nop2
  8113                           
  8114                           ;led.c: 56: if (!gLedPara.mOn) {
  8115  057A  0021               	movlb	1	; select bank1
  8116  057B  1840               	btfsc	_gLedPara^(0+128),0	;volatile
  8117  057C  2D80               	goto	i1l2277
  8118                           
  8119                           ;led.c: 57: Led_TurnOffRamp();
  8120  057D  318D  25ED         	fcall	i1_Led_TurnOffRamp
  8121                           
  8122                           ;led.c: 58: } else {
  8123  057F  0008               	return
  8124  0580                     i1l2277:	
  8125                           
  8126                           ;led.c: 59: gLedRunPara.music_state = 0;
  8127  0580  3001               	movlw	-255
  8128  0581  0020               	movlb	0	; select bank0
  8129  0582  05A8               	andwf	_gLedRunPara+8,f	;volatile
  8130                           
  8131                           ;led.c: 60: switch (gLedPara.mMode) {
  8132  0583  2D8D               	goto	i1l2287
  8133  0584                     i1l2279:	
  8134                           ;led.c: 61: case 0:
  8135                           
  8136                           
  8137                           ;led.c: 62: Led_TurnOnAllRamp();
  8138  0584  318E  2600         	fcall	i1_Led_TurnOnAllRamp
  8139                           
  8140                           ;led.c: 63: break;
  8141  0586  0008               	return
  8142  0587                     i1l2281:	
  8143                           ;led.c: 64: case 1:
  8144                           
  8145                           
  8146                           ;led.c: 65: Led_TurnOnWhiteRamp();
  8147  0587  318D  2594         	fcall	i1_Led_TurnOnWhiteRamp
  8148                           
  8149                           ;led.c: 66: break;
  8150  0589  0008               	return
  8151  058A                     i1l2283:	
  8152                           ;led.c: 67: case 2:
  8153                           
  8154                           
  8155                           ;led.c: 68: Led_TurnOnBlueRamp();
  8156  058A  318D  2564         	fcall	i1_Led_TurnOnBlueRamp
  8157                           
  8158                           ;led.c: 72: }
  8159                           
  8160                           ;led.c: 71: break;
  8161                           
  8162                           ;led.c: 70: default:
  8163                           
  8164                           ;led.c: 69: break;
  8165  058C  0008               	return
  8166  058D                     i1l2287:	
  8167  058D  0021               	movlb	1	; select bank1
  8168  058E  0C40               	rrf	_gLedPara^(0+128),w	;volatile
  8169  058F  3907               	andlw	7
  8170                           
  8171                           ; Switch size 1, requested type "space"
  8172                           ; Number of cases is 3, Range of values is 0 to 2
  8173                           ; switch strategies available:
  8174                           ; Name         Instructions Cycles
  8175                           ; simple_byte           10     6 (average)
  8176                           ; direct_byte           12     6 (fixed)
  8177                           ; jumptable            260     6 (fixed)
  8178                           ;	Chosen strategy is simple_byte
  8179  0590  3A00               	xorlw	0	; case 0
  8180  0591  1903               	skipnz
  8181  0592  2D84               	goto	i1l2279
  8182  0593  3A01               	xorlw	1	; case 1
  8183  0594  1903               	skipnz
  8184  0595  2D87               	goto	i1l2281
  8185  0596  3A03               	xorlw	3	; case 2
  8186  0597  1903               	skipnz
  8187  0598  2D8A               	goto	i1l2283
  8188  0599  2D9B               	goto	i1l389
  8189  059A  0008               	return
  8190  059B                     i1l389:	
  8191  059B  0008               	return
  8192  059C                     __end_ofi1_Led_Initialize:	
  8193                           
  8194                           	psect	text47
  8195  0D94                     __ptext47:	
  8196 ;; *************** function i1_Led_TurnOnWhiteRamp *****************
  8197 ;; Defined at:
  8198 ;;		line 96 in file "user/src/led.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8212 ;;      Params:         0       0       0       0
  8213 ;;      Locals:         0       0       0       0
  8214 ;;      Temps:          0       0       0       0
  8215 ;;      Totals:         0       0       0       0
  8216 ;;Total ram usage:        0 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; This function calls:
  8219 ;;		Nothing
  8220 ;; This function is called by:
  8221 ;;		_Led_OnKeyPressed
  8222 ;;		i1_Led_Initialize
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           
  8227                           ;psect for function i1_Led_TurnOnWhiteRamp
  8228  0D94                     i1_Led_TurnOnWhiteRamp:	
  8229                           
  8230                           ;led.c: 97: gLedPara.mOn = 1;
  8231                           
  8232                           ;incstack = 0
  8233                           ; Regs used in i1_Led_TurnOnWhiteRamp: [wreg+status,2]
  8234  0D94  0021               	movlb	1	; select bank1
  8235  0D95  1440               	bsf	_gLedPara^(0+128),0	;volatile
  8236                           
  8237                           ;led.c: 98: gLedRunPara.mTargetBright[0] = 0;
  8238  0D96  0020               	movlb	0	; select bank0
  8239  0D97  01A4               	clrf	_gLedRunPara+4	;volatile
  8240  0D98  01A5               	clrf	_gLedRunPara+5	;volatile
  8241                           
  8242                           ;led.c: 99: gLedRunPara.mTargetBright[1] = gLedPara.white_bright;
  8243  0D99  0021               	movlb	1	; select bank1
  8244  0D9A  0844               	movf	((_gLedPara+1)^(0+128)+3),w	;volatile
  8245  0D9B  0020               	movlb	0	; select bank0
  8246  0D9C  00A7               	movwf	_gLedRunPara+7	;volatile
  8247  0D9D  0021               	movlb	1	; select bank1
  8248  0D9E  0843               	movf	(_gLedPara^(0+128)+3),w	;volatile
  8249  0D9F  0020               	movlb	0	; select bank0
  8250  0DA0  00A6               	movwf	_gLedRunPara+6	;volatile
  8251  0DA1  0008               	return
  8252  0DA2                     __end_ofi1_Led_TurnOnWhiteRamp:	
  8253                           
  8254                           	psect	text48
  8255  0D64                     __ptext48:	
  8256 ;; *************** function i1_Led_TurnOnBlueRamp *****************
  8257 ;; Defined at:
  8258 ;;		line 102 in file "user/src/led.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;		None
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1    wreg      void 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8272 ;;      Params:         0       0       0       0
  8273 ;;      Locals:         0       0       0       0
  8274 ;;      Temps:          0       0       0       0
  8275 ;;      Totals:         0       0       0       0
  8276 ;;Total ram usage:        0 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_Led_OnKeyPressed
  8282 ;;		i1_Led_Initialize
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function i1_Led_TurnOnBlueRamp
  8288  0D64                     i1_Led_TurnOnBlueRamp:	
  8289                           
  8290                           ;led.c: 103: gLedPara.mOn = 1;
  8291                           
  8292                           ;incstack = 0
  8293                           ; Regs used in i1_Led_TurnOnBlueRamp: [wreg+status,2]
  8294  0D64  0021               	movlb	1	; select bank1
  8295  0D65  1440               	bsf	_gLedPara^(0+128),0	;volatile
  8296                           
  8297                           ;led.c: 104: gLedRunPara.mTargetBright[0] = gLedPara.blue_bright;
  8298  0D66  0846               	movf	((_gLedPara+1)^(0+128)+5),w	;volatile
  8299  0D67  0020               	movlb	0	; select bank0
  8300  0D68  00A5               	movwf	_gLedRunPara+5	;volatile
  8301  0D69  0021               	movlb	1	; select bank1
  8302  0D6A  0845               	movf	(_gLedPara^(0+128)+5),w	;volatile
  8303  0D6B  0020               	movlb	0	; select bank0
  8304  0D6C  00A4               	movwf	_gLedRunPara+4	;volatile
  8305                           
  8306                           ;led.c: 105: gLedRunPara.mTargetBright[1] = 0;
  8307  0D6D  01A6               	clrf	_gLedRunPara+6	;volatile
  8308  0D6E  01A7               	clrf	_gLedRunPara+7	;volatile
  8309  0D6F  0008               	return
  8310  0D70                     __end_ofi1_Led_TurnOnBlueRamp:	
  8311                           
  8312                           	psect	text49
  8313  0E00                     __ptext49:	
  8314 ;; *************** function i1_Led_TurnOnAllRamp *****************
  8315 ;; Defined at:
  8316 ;;		line 89 in file "user/src/led.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  Led_TurnOnAl    1    1[COMMON] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8330 ;;      Params:         0       0       0       0
  8331 ;;      Locals:         1       0       0       0
  8332 ;;      Temps:          1       0       0       0
  8333 ;;      Totals:         2       0       0       0
  8334 ;;Total ram usage:        2 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_Led_OnKeyPressed
  8340 ;;		i1_Led_Initialize
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function i1_Led_TurnOnAllRamp
  8346  0E00                     i1_Led_TurnOnAllRamp:	
  8347                           
  8348                           ;led.c: 90: gLedPara.mOn = 1;
  8349                           
  8350                           ;incstack = 0
  8351                           ; Regs used in i1_Led_TurnOnAllRamp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8352  0E00  0021               	movlb	1	; select bank1
  8353  0E01  1440               	bsf	_gLedPara^(0+128),0	;volatile
  8354                           
  8355                           ;led.c: 91: for (uint8_t i = 0; i < 2; i++) {
  8356  0E02  01F1               	clrf	i1Led_TurnOnAllRamp@i
  8357  0E03                     L7:	
  8358  0E03  3002               	movlw	2
  8359  0E04  0271               	subwf	i1Led_TurnOnAllRamp@i,w
  8360  0E05  1803               	btfsc	3,0
  8361  0E06  0008               	return
  8362                           
  8363                           ;led.c: 92: gLedRunPara.mTargetBright[i] = gLedPara.all_bright;
  8364  0E07  3571               	lslf	i1Led_TurnOnAllRamp@i,w
  8365  0E08  3E24               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  8366  0E09  0086               	movwf	6
  8367  0E0A  0187               	clrf	7
  8368  0E0B  0841               	movf	(_gLedPara^(0+128)+1),w	;volatile
  8369  0E0C  3FC0               	movwi [0]fsr1
  8370  0E0D  0842               	movf	((_gLedPara+1)^(0+128)+1),w	;volatile
  8371  0E0E  3FC1               	movwi [1]fsr1
  8372  0E0F  3001               	movlw	1
  8373  0E10  00F0               	movwf	??i1_Led_TurnOnAllRamp
  8374  0E11  0870               	movf	??i1_Led_TurnOnAllRamp,w
  8375  0E12  07F1               	addwf	i1Led_TurnOnAllRamp@i,f
  8376  0E13  2E03               	goto	L7
  8377  0E14                     __end_ofi1_Led_TurnOnAllRamp:	
  8378                           
  8379                           	psect	text50
  8380  0DED                     __ptext50:	
  8381 ;; *************** function i1_Led_TurnOffRamp *****************
  8382 ;; Defined at:
  8383 ;;		line 108 in file "user/src/led.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  Led_TurnOffR    1    1[COMMON] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8397 ;;      Params:         0       0       0       0
  8398 ;;      Locals:         1       0       0       0
  8399 ;;      Temps:          1       0       0       0
  8400 ;;      Totals:         2       0       0       0
  8401 ;;Total ram usage:        2 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		i1_Led_Initialize
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           
  8411                           ;psect for function i1_Led_TurnOffRamp
  8412  0DED                     i1_Led_TurnOffRamp:	
  8413                           
  8414                           ;led.c: 109: gLedPara.mOn = 0;
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in i1_Led_TurnOffRamp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8418  0DED  0021               	movlb	1	; select bank1
  8419  0DEE  1040               	bcf	_gLedPara^(0+128),0	;volatile
  8420                           
  8421                           ;led.c: 110: for (uint8_t i = 0; i < 2; i++) {
  8422  0DEF  01F1               	clrf	i1Led_TurnOffRamp@i
  8423  0DF0                     L8:	
  8424  0DF0  3002               	movlw	2
  8425  0DF1  0271               	subwf	i1Led_TurnOffRamp@i,w
  8426  0DF2  1803               	btfsc	3,0
  8427  0DF3  0008               	return
  8428                           
  8429                           ;led.c: 111: gLedRunPara.mTargetBright[i] = 0;
  8430  0DF4  3571               	lslf	i1Led_TurnOffRamp@i,w
  8431  0DF5  3E24               	addlw	(low ((_gLedRunPara| 0+4)))& (0+255)
  8432  0DF6  0086               	movwf	6
  8433  0DF7  0187               	clrf	7
  8434  0DF8  3000               	movlw	0
  8435  0DF9  3FC0               	movwi [0]fsr1
  8436  0DFA  3FC1               	movwi [1]fsr1
  8437  0DFB  3001               	movlw	1
  8438  0DFC  00F0               	movwf	??i1_Led_TurnOffRamp
  8439  0DFD  0870               	movf	??i1_Led_TurnOffRamp,w
  8440  0DFE  07F1               	addwf	i1Led_TurnOffRamp@i,f
  8441  0DFF  2DF0               	goto	L8
  8442  0E00                     __end_ofi1_Led_TurnOffRamp:	
  8443                           
  8444                           	psect	text51
  8445  0E9C                     __ptext51:	
  8446 ;; *************** function i1_Audio_StopSound *****************
  8447 ;; Defined at:
  8448 ;;		line 15 in file "user/src/audio.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;  Audio_StopSo    1    3[COMMON] unsigned char 
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8462 ;;      Params:         0       0       0       0
  8463 ;;      Locals:         1       0       0       0
  8464 ;;      Temps:          1       0       0       0
  8465 ;;      Totals:         2       0       0       0
  8466 ;;Total ram usage:        2 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:    1
  8469 ;; This function calls:
  8470 ;;		i1_EUSART_Write
  8471 ;; This function is called by:
  8472 ;;		_Led_OnKeyPressed
  8473 ;;		i1_Led_Initialize
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           
  8478                           ;psect for function i1_Audio_StopSound
  8479  0E9C                     i1_Audio_StopSound:	
  8480                           
  8481                           ;audio.c: 17: uint8_t checksum = 0x00;
  8482                           
  8483                           ;incstack = 0
  8484                           ; Regs used in i1_Audio_StopSound: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8485  0E9C  01F3               	clrf	i1Audio_StopSound@checksum
  8486                           
  8487                           ;audio.c: 18: EUSART_Write ( 0x7E );
  8488  0E9D  307E               	movlw	126
  8489  0E9E  3187  2769  318E   	fcall	i1_EUSART_Write
  8490                           
  8491                           ;audio.c: 19: checksum ^= EUSART_Write ( 0x03 );
  8492  0EA1  3003               	movlw	3
  8493  0EA2  3187  2769  318E   	fcall	i1_EUSART_Write
  8494  0EA5  00F2               	movwf	??i1_Audio_StopSound
  8495  0EA6  0872               	movf	??i1_Audio_StopSound,w
  8496  0EA7  06F3               	xorwf	i1Audio_StopSound@checksum,f
  8497                           
  8498                           ;audio.c: 20: checksum ^= EUSART_Write ( 0x1E );
  8499  0EA8  301E               	movlw	30
  8500  0EA9  3187  2769  318E   	fcall	i1_EUSART_Write
  8501  0EAC  00F2               	movwf	??i1_Audio_StopSound
  8502  0EAD  0872               	movf	??i1_Audio_StopSound,w
  8503  0EAE  06F3               	xorwf	i1Audio_StopSound@checksum,f
  8504                           
  8505                           ;audio.c: 21: EUSART_Write ( checksum );
  8506  0EAF  0873               	movf	i1Audio_StopSound@checksum,w
  8507  0EB0  3187  2769  318E   	fcall	i1_EUSART_Write
  8508                           
  8509                           ;audio.c: 22: EUSART_Write ( 0xEF );
  8510  0EB3  30EF               	movlw	239
  8511  0EB4  3187  2769         	fcall	i1_EUSART_Write
  8512  0EB6  0008               	return
  8513  0EB7                     __end_ofi1_Audio_StopSound:	
  8514                           
  8515                           	psect	text52
  8516  078D                     __ptext52:	
  8517 ;; *************** function i1_Audio_SetVolume *****************
  8518 ;; Defined at:
  8519 ;;		line 48 in file "user/src/audio.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  vol             1    wreg     unsigned char 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  vol             1    3[COMMON] unsigned char 
  8524 ;;  Audio_SetVol    1    4[COMMON] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8534 ;;      Params:         0       0       0       0
  8535 ;;      Locals:         2       0       0       0
  8536 ;;      Temps:          1       0       0       0
  8537 ;;      Totals:         3       0       0       0
  8538 ;;Total ram usage:        3 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    1
  8541 ;; This function calls:
  8542 ;;		i1_EUSART_Write
  8543 ;; This function is called by:
  8544 ;;		_Led_OnKeyPressed
  8545 ;;		i1_Led_Initialize
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           
  8550                           ;psect for function i1_Audio_SetVolume
  8551  078D                     i1_Audio_SetVolume:	
  8552                           
  8553                           ;incstack = 0
  8554                           ; Regs used in i1_Audio_SetVolume: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8555                           ;i1Audio_SetVolume@vol stored from wreg
  8556  078D  00F3               	movwf	i1Audio_SetVolume@vol
  8557                           
  8558                           ;audio.c: 50: uint8_t checksum = 0x00;
  8559  078E  01F4               	clrf	i1Audio_SetVolume@checksum
  8560                           
  8561                           ;audio.c: 51: EUSART_Write ( 0x7E );
  8562  078F  307E               	movlw	126
  8563  0790  3187  2769  3187   	fcall	i1_EUSART_Write
  8564                           
  8565                           ;audio.c: 52: checksum ^= EUSART_Write ( 0x04 );
  8566  0793  3004               	movlw	4
  8567  0794  3187  2769  3187   	fcall	i1_EUSART_Write
  8568  0797  00F2               	movwf	??i1_Audio_SetVolume
  8569  0798  0872               	movf	??i1_Audio_SetVolume,w
  8570  0799  06F4               	xorwf	i1Audio_SetVolume@checksum,f
  8571                           
  8572                           ;audio.c: 53: checksum ^= EUSART_Write ( 0x31 );
  8573  079A  3031               	movlw	49
  8574  079B  3187  2769  3187   	fcall	i1_EUSART_Write
  8575  079E  00F2               	movwf	??i1_Audio_SetVolume
  8576  079F  0872               	movf	??i1_Audio_SetVolume,w
  8577  07A0  06F4               	xorwf	i1Audio_SetVolume@checksum,f
  8578                           
  8579                           ;audio.c: 54: checksum ^= EUSART_Write ( vol );
  8580  07A1  0873               	movf	i1Audio_SetVolume@vol,w
  8581  07A2  3187  2769  3187   	fcall	i1_EUSART_Write
  8582  07A5  00F2               	movwf	??i1_Audio_SetVolume
  8583  07A6  0872               	movf	??i1_Audio_SetVolume,w
  8584  07A7  06F4               	xorwf	i1Audio_SetVolume@checksum,f
  8585                           
  8586                           ;audio.c: 55: EUSART_Write ( checksum );
  8587  07A8  0874               	movf	i1Audio_SetVolume@checksum,w
  8588  07A9  3187  2769  3187   	fcall	i1_EUSART_Write
  8589                           
  8590                           ;audio.c: 56: EUSART_Write ( 0xEF );
  8591  07AC  30EF               	movlw	239
  8592  07AD  3187  2769         	fcall	i1_EUSART_Write
  8593  07AF  0008               	return
  8594  07B0                     __end_ofi1_Audio_SetVolume:	
  8595                           
  8596                           	psect	text53
  8597  07B0                     __ptext53:	
  8598 ;; *************** function i1_Audio_SetPlayMode *****************
  8599 ;; Defined at:
  8600 ;;		line 37 in file "user/src/audio.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  type            1    wreg     unsigned char 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;  type            1    3[COMMON] unsigned char 
  8605 ;;  Audio_SetPla    1    4[COMMON] unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8615 ;;      Params:         0       0       0       0
  8616 ;;      Locals:         2       0       0       0
  8617 ;;      Temps:          1       0       0       0
  8618 ;;      Totals:         3       0       0       0
  8619 ;;Total ram usage:        3 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; Hardware stack levels required when called:    1
  8622 ;; This function calls:
  8623 ;;		i1_EUSART_Write
  8624 ;; This function is called by:
  8625 ;;		i1_Led_Initialize
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           
  8630                           ;psect for function i1_Audio_SetPlayMode
  8631  07B0                     i1_Audio_SetPlayMode:	
  8632                           
  8633                           ;incstack = 0
  8634                           ; Regs used in i1_Audio_SetPlayMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8635                           ;i1Audio_SetPlayMode@type stored from wreg
  8636  07B0  00F3               	movwf	i1Audio_SetPlayMode@type
  8637                           
  8638                           ;audio.c: 39: uint8_t checksum = 0x00;
  8639  07B1  01F4               	clrf	i1Audio_SetPlayMode@checksum
  8640                           
  8641                           ;audio.c: 40: EUSART_Write ( 0x7E );
  8642  07B2  307E               	movlw	126
  8643  07B3  3187  2769  3187   	fcall	i1_EUSART_Write
  8644                           
  8645                           ;audio.c: 41: checksum ^= EUSART_Write ( 0x04 );
  8646  07B6  3004               	movlw	4
  8647  07B7  3187  2769  3187   	fcall	i1_EUSART_Write
  8648  07BA  00F2               	movwf	??i1_Audio_SetPlayMode
  8649  07BB  0872               	movf	??i1_Audio_SetPlayMode,w
  8650  07BC  06F4               	xorwf	i1Audio_SetPlayMode@checksum,f
  8651                           
  8652                           ;audio.c: 42: checksum ^= EUSART_Write ( 0x33 );
  8653  07BD  3033               	movlw	51
  8654  07BE  3187  2769  3187   	fcall	i1_EUSART_Write
  8655  07C1  00F2               	movwf	??i1_Audio_SetPlayMode
  8656  07C2  0872               	movf	??i1_Audio_SetPlayMode,w
  8657  07C3  06F4               	xorwf	i1Audio_SetPlayMode@checksum,f
  8658                           
  8659                           ;audio.c: 43: checksum ^= EUSART_Write ( type );
  8660  07C4  0873               	movf	i1Audio_SetPlayMode@type,w
  8661  07C5  3187  2769  3187   	fcall	i1_EUSART_Write
  8662  07C8  00F2               	movwf	??i1_Audio_SetPlayMode
  8663  07C9  0872               	movf	??i1_Audio_SetPlayMode,w
  8664  07CA  06F4               	xorwf	i1Audio_SetPlayMode@checksum,f
  8665                           
  8666                           ;audio.c: 44: EUSART_Write ( checksum );
  8667  07CB  0874               	movf	i1Audio_SetPlayMode@checksum,w
  8668  07CC  3187  2769  3187   	fcall	i1_EUSART_Write
  8669                           
  8670                           ;audio.c: 45: EUSART_Write ( 0xEF );
  8671  07CF  30EF               	movlw	239
  8672  07D0  3187  2769         	fcall	i1_EUSART_Write
  8673  07D2  0008               	return
  8674  07D3                     __end_ofi1_Audio_SetPlayMode:	
  8675                           
  8676                           	psect	text54
  8677  0769                     __ptext54:	
  8678 ;; *************** function i1_EUSART_Write *****************
  8679 ;; Defined at:
  8680 ;;		line 35 in file "driver/src/eusart.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  byte            1    wreg     unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  byte            1    1[COMMON] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      unsigned char 
  8687 ;; Registers used:
  8688 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8694 ;;      Params:         0       0       0       0
  8695 ;;      Locals:         1       0       0       0
  8696 ;;      Temps:          1       0       0       0
  8697 ;;      Totals:         2       0       0       0
  8698 ;;Total ram usage:        2 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_Audio_SelectSound
  8704 ;;		i1_Audio_StopSound
  8705 ;;		i1_Audio_SetPlayMode
  8706 ;;		i1_Audio_SetVolume
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           
  8711                           ;psect for function i1_EUSART_Write
  8712  0769                     i1_EUSART_Write:	
  8713                           
  8714                           ;incstack = 0
  8715                           ; Regs used in i1_EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  8716                           ;i1EUSART_Write@byte stored from wreg
  8717  0769  00F1               	movwf	i1EUSART_Write@byte
  8718  076A                     i1l2125:	
  8719                           ;eusart.c: 37: while ( 0 == txRemain );
  8720                           
  8721  076A  0020               	movlb	0	; select bank0
  8722  076B  0848               	movf	_txRemain,w
  8723  076C  1903               	btfsc	3,2
  8724  076D  2F6A               	goto	i1l2125
  8725                           
  8726                           ;eusart.c: 39: if ( !PIE1bits.TXIE )
  8727  076E  0021               	movlb	1	; select bank1
  8728  076F  1A11               	btfsc	17,4	;volatile
  8729  0770  2F75               	goto	i1l58
  8730                           
  8731                           ;eusart.c: 40: {
  8732                           ;eusart.c: 41: TXREG = byte;
  8733  0771  0871               	movf	i1EUSART_Write@byte,w
  8734  0772  0023               	movlb	3	; select bank3
  8735  0773  009A               	movwf	26	;volatile
  8736                           
  8737                           ;eusart.c: 42: }
  8738  0774  2F89               	goto	i1l2139
  8739  0775                     i1l58:	
  8740                           
  8741                           ;eusart.c: 43: else
  8742                           ;eusart.c: 44: {
  8743                           ;eusart.c: 45: PIE1bits.TXIE = 0;
  8744  0775  1211               	bcf	17,4	;volatile
  8745                           
  8746                           ;eusart.c: 46: txBuf[txHead++] = byte;
  8747  0776  0871               	movf	i1EUSART_Write@byte,w
  8748  0777  00F0               	movwf	??i1_EUSART_Write
  8749  0778  0020               	movlb	0	; select bank0
  8750  0779  0847               	movf	_txHead,w
  8751  077A  3EA0               	addlw	(low (_txBuf| 0))& (0+255)
  8752  077B  0086               	movwf	6
  8753  077C  0187               	clrf	7
  8754  077D  0870               	movf	??i1_EUSART_Write,w
  8755  077E  0081               	movwf	1
  8756  077F  3001               	movlw	1
  8757  0780  00F0               	movwf	??i1_EUSART_Write
  8758  0781  0870               	movf	??i1_EUSART_Write,w
  8759  0782  07C7               	addwf	_txHead,f
  8760                           
  8761                           ;eusart.c: 47: if ( sizeof (txBuf ) <= txHead )
  8762  0783  3020               	movlw	32
  8763  0784  0247               	subwf	_txHead,w
  8764  0785  1803               	btfsc	3,0
  8765                           
  8766                           ;eusart.c: 48: {
  8767                           ;eusart.c: 49: txHead = 0;
  8768  0786  01C7               	clrf	_txHead
  8769                           
  8770                           ;eusart.c: 50: }
  8771                           ;eusart.c: 51: txRemain--;
  8772  0787  3001               	movlw	1
  8773  0788  02C8               	subwf	_txRemain,f
  8774  0789                     i1l2139:	
  8775                           
  8776                           ;eusart.c: 52: }
  8777                           ;eusart.c: 53: PIE1bits.TXIE = 1;
  8778  0789  0021               	movlb	1	; select bank1
  8779  078A  1611               	bsf	17,4	;volatile
  8780                           
  8781                           ;eusart.c: 54: return byte;
  8782  078B  0871               	movf	i1EUSART_Write@byte,w
  8783  078C  0008               	return
  8784  078D                     __end_ofi1_EUSART_Write:	
  8785                           
  8786                           	psect	text55
  8787  0659                     __ptext55:	
  8788 ;; *************** function _Util_IncValue *****************
  8789 ;; Defined at:
  8790 ;;		line 3 in file "user/src/util.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  pSrc            1    wreg     PTR unsigned int 
  8793 ;;		 -> gLedPara.blue_bright(2), gLedPara.white_bright(2), gLedPara.all_bright(2), gLedPara(32), 
  8794 ;;  max             2    0[COMMON] unsigned int 
  8795 ;;  delta           2    2[COMMON] unsigned int 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  pSrc            1    8[COMMON] PTR unsigned int 
  8798 ;;		 -> gLedPara.blue_bright(2), gLedPara.white_bright(2), gLedPara.all_bright(2), gLedPara(32), 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8808 ;;      Params:         4       0       0       0
  8809 ;;      Locals:         1       0       0       0
  8810 ;;      Temps:          4       0       0       0
  8811 ;;      Totals:         9       0       0       0
  8812 ;;Total ram usage:        9 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_Led_OnKeyPressed
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           
  8822                           ;psect for function _Util_IncValue
  8823  0659                     _Util_IncValue:	
  8824                           
  8825                           ;incstack = 0
  8826                           ; Regs used in _Util_IncValue: [wreg+fsr1l+fsr1h+status,2+status,0]
  8827                           ;Util_IncValue@pSrc stored from wreg
  8828  0659  00F8               	movwf	Util_IncValue@pSrc
  8829                           
  8830                           ;util.c: 5: if( *pSrc + delta < max )
  8831  065A  0878               	movf	Util_IncValue@pSrc,w
  8832  065B  0086               	movwf	6
  8833  065C  0187               	clrf	7
  8834  065D  3F40               	moviw [0]fsr1
  8835  065E  00F4               	movwf	??_Util_IncValue
  8836  065F  3F41               	moviw [1]fsr1
  8837  0660  00F5               	movwf	??_Util_IncValue+1
  8838  0661  0872               	movf	Util_IncValue@delta,w
  8839  0662  0774               	addwf	??_Util_IncValue,w
  8840  0663  00F6               	movwf	??_Util_IncValue+2
  8841  0664  0873               	movf	Util_IncValue@delta+1,w
  8842  0665  3D75               	addwfc	??_Util_IncValue+1,w
  8843  0666  00F7               	movwf	??_Util_IncValue+3
  8844  0667  0871               	movf	Util_IncValue@max+1,w
  8845  0668  0277               	subwf	??_Util_IncValue+3,w
  8846  0669  1D03               	skipz
  8847  066A  2E6D               	goto	u140_25
  8848  066B  0870               	movf	Util_IncValue@max,w
  8849  066C  0276               	subwf	??_Util_IncValue+2,w
  8850  066D                     u140_25:	
  8851  066D  1803               	skipnc
  8852  066E  2E79               	goto	i1l2233
  8853                           
  8854                           ;util.c: 6: {
  8855                           ;util.c: 7: (*pSrc) += delta;
  8856  066F  0878               	movf	Util_IncValue@pSrc,w
  8857  0670  0086               	movwf	6
  8858  0671  0187               	clrf	7
  8859  0672  0872               	movf	Util_IncValue@delta,w
  8860  0673  0781               	addwf	1,f
  8861  0674  3141               	addfsr 1,1
  8862  0675  0873               	movf	Util_IncValue@delta+1,w
  8863  0676  3D81               	addwfc	1,f
  8864  0677  317F               	addfsr 1,-1
  8865                           
  8866                           ;util.c: 8: }
  8867  0678  0008               	return
  8868  0679                     i1l2233:	
  8869                           
  8870                           ;util.c: 9: else
  8871                           ;util.c: 10: {
  8872                           ;util.c: 11: *pSrc = max;
  8873  0679  0878               	movf	Util_IncValue@pSrc,w
  8874  067A  0086               	movwf	6
  8875  067B  0187               	clrf	7
  8876  067C  0870               	movf	Util_IncValue@max,w
  8877  067D  3FC0               	movwi [0]fsr1
  8878  067E  0871               	movf	Util_IncValue@max+1,w
  8879  067F  3FC1               	movwi [1]fsr1
  8880  0680  0008               	return
  8881  0681                     __end_of_Util_IncValue:	
  8882                           
  8883                           	psect	text56
  8884  0681                     __ptext56:	
  8885 ;; *************** function _Util_DecValue *****************
  8886 ;; Defined at:
  8887 ;;		line 15 in file "user/src/util.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  pSrc            1    wreg     PTR unsigned int 
  8890 ;;		 -> gLedPara.blue_bright(2), gLedPara.white_bright(2), gLedPara.all_bright(2), gLedPara(32), 
  8891 ;;  min             2    0[COMMON] unsigned int 
  8892 ;;  delta           2    2[COMMON] unsigned int 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  pSrc            1    8[COMMON] PTR unsigned int 
  8895 ;;		 -> gLedPara.blue_bright(2), gLedPara.white_bright(2), gLedPara.all_bright(2), gLedPara(32), 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8905 ;;      Params:         4       0       0       0
  8906 ;;      Locals:         1       0       0       0
  8907 ;;      Temps:          4       0       0       0
  8908 ;;      Totals:         9       0       0       0
  8909 ;;Total ram usage:        9 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; This function calls:
  8912 ;;		Nothing
  8913 ;; This function is called by:
  8914 ;;		_Led_OnKeyPressed
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           
  8919                           ;psect for function _Util_DecValue
  8920  0681                     _Util_DecValue:	
  8921                           
  8922                           ;incstack = 0
  8923                           ; Regs used in _Util_DecValue: [wreg+fsr1l+fsr1h+status,2+status,0]
  8924                           ;Util_DecValue@pSrc stored from wreg
  8925  0681  00F8               	movwf	Util_DecValue@pSrc
  8926                           
  8927                           ;util.c: 17: if( *pSrc > min + delta )
  8928  0682  0878               	movf	Util_DecValue@pSrc,w
  8929  0683  0086               	movwf	6
  8930  0684  0187               	clrf	7
  8931  0685  3F40               	moviw [0]fsr1
  8932  0686  00F4               	movwf	??_Util_DecValue
  8933  0687  3F41               	moviw [1]fsr1
  8934  0688  00F5               	movwf	??_Util_DecValue+1
  8935  0689  0872               	movf	Util_DecValue@delta,w
  8936  068A  0770               	addwf	Util_DecValue@min,w
  8937  068B  00F6               	movwf	??_Util_DecValue+2
  8938  068C  0873               	movf	Util_DecValue@delta+1,w
  8939  068D  3D71               	addwfc	Util_DecValue@min+1,w
  8940  068E  00F7               	movwf	??_Util_DecValue+3
  8941  068F  0875               	movf	??_Util_DecValue+1,w
  8942  0690  0277               	subwf	??_Util_DecValue+3,w
  8943  0691  1D03               	skipz
  8944  0692  2E95               	goto	u141_25
  8945  0693  0874               	movf	??_Util_DecValue,w
  8946  0694  0276               	subwf	??_Util_DecValue+2,w
  8947  0695                     u141_25:	
  8948  0695  1803               	skipnc
  8949  0696  2EA1               	goto	i1l2239
  8950                           
  8951                           ;util.c: 18: {
  8952                           ;util.c: 19: (*pSrc) -= delta;
  8953  0697  0878               	movf	Util_DecValue@pSrc,w
  8954  0698  0086               	movwf	6
  8955  0699  0187               	clrf	7
  8956  069A  0872               	movf	Util_DecValue@delta,w
  8957  069B  0281               	subwf	1,f
  8958  069C  3141               	addfsr 1,1
  8959  069D  0873               	movf	Util_DecValue@delta+1,w
  8960  069E  3B81               	subwfb	1,f
  8961  069F  317F               	addfsr 1,-1
  8962                           
  8963                           ;util.c: 20: }
  8964  06A0  0008               	return
  8965  06A1                     i1l2239:	
  8966                           
  8967                           ;util.c: 21: else
  8968                           ;util.c: 22: {
  8969                           ;util.c: 23: *pSrc = min;
  8970  06A1  0878               	movf	Util_DecValue@pSrc,w
  8971  06A2  0086               	movwf	6
  8972  06A3  0187               	clrf	7
  8973  06A4  0870               	movf	Util_DecValue@min,w
  8974  06A5  3FC0               	movwi [0]fsr1
  8975  06A6  0871               	movf	Util_DecValue@min+1,w
  8976  06A7  3FC1               	movwi [1]fsr1
  8977  06A8  0008               	return
  8978  06A9                     __end_of_Util_DecValue:	
  8979                           
  8980                           	psect	text57
  8981  059C                     __ptext57:	
  8982 ;; *************** function _Key_Read *****************
  8983 ;; Defined at:
  8984 ;;		line 7 in file "user/src/key.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;		None
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  value           2    4[COMMON] unsigned int 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      unsigned char 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0, pclath, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8998 ;;      Params:         0       0       0       0
  8999 ;;      Locals:         2       0       0       0
  9000 ;;      Temps:          0       0       0       0
  9001 ;;      Totals:         2       0       0       0
  9002 ;;Total ram usage:        2 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    1
  9005 ;; This function calls:
  9006 ;;		i1_ADC_Conversion
  9007 ;; This function is called by:
  9008 ;;		_Key_Scan
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           
  9013                           ;psect for function _Key_Read
  9014  059C                     _Key_Read:	
  9015                           
  9016                           ;key.c: 8: uint16_t value = ADC_Conversion(4);
  9017                           
  9018                           ;incstack = 0
  9019                           ; Regs used in _Key_Read: [wreg+status,2+status,0+pclath+cstack]
  9020  059C  3004               	movlw	4
  9021  059D  318E  26ED  3185   	fcall	i1_ADC_Conversion
  9022  05A0  0871               	movf	?i1_ADC_Conversion+1,w
  9023  05A1  00F5               	movwf	Key_Read@value+1
  9024  05A2  0870               	movf	?i1_ADC_Conversion,w
  9025  05A3  00F4               	movwf	Key_Read@value
  9026                           
  9027                           ;key.c: 9: if (value < 48) {
  9028  05A4  3000               	movlw	0
  9029  05A5  0275               	subwf	Key_Read@value+1,w
  9030  05A6  3030               	movlw	48
  9031  05A7  1903               	skipnz
  9032  05A8  0274               	subwf	Key_Read@value,w
  9033  05A9  1803               	skipnc
  9034  05AA  2DAD               	goto	i1l2501
  9035                           
  9036                           ;key.c: 10: return 0x00;
  9037  05AB  3000               	movlw	0
  9038                           
  9039                           ;key.c: 11: } else if (value > 150 && value < 250) {
  9040  05AC  0008               	return
  9041  05AD                     i1l2501:	
  9042  05AD  3000               	movlw	0
  9043  05AE  0275               	subwf	Key_Read@value+1,w
  9044  05AF  3097               	movlw	151
  9045  05B0  1903               	skipnz
  9046  05B1  0274               	subwf	Key_Read@value,w
  9047  05B2  1C03               	skipc
  9048  05B3  2DBD               	goto	i1l2511
  9049  05B4  3000               	movlw	0
  9050  05B5  0275               	subwf	Key_Read@value+1,w
  9051  05B6  30FA               	movlw	250
  9052  05B7  1903               	skipnz
  9053  05B8  0274               	subwf	Key_Read@value,w
  9054  05B9  1803               	skipnc
  9055  05BA  2DBD               	goto	i1l2511
  9056                           
  9057                           ;key.c: 12: return 0x08;
  9058  05BB  3008               	movlw	8
  9059                           
  9060                           ;key.c: 13: } else if (value > 350 && value < 450) {
  9061  05BC  0008               	return
  9062  05BD                     i1l2511:	
  9063  05BD  3001               	movlw	1
  9064  05BE  0275               	subwf	Key_Read@value+1,w
  9065  05BF  305F               	movlw	95
  9066  05C0  1903               	skipnz
  9067  05C1  0274               	subwf	Key_Read@value,w
  9068  05C2  1C03               	skipc
  9069  05C3  2DCD               	goto	i1l2521
  9070  05C4  3001               	movlw	1
  9071  05C5  0275               	subwf	Key_Read@value+1,w
  9072  05C6  30C2               	movlw	194
  9073  05C7  1903               	skipnz
  9074  05C8  0274               	subwf	Key_Read@value,w
  9075  05C9  1803               	skipnc
  9076  05CA  2DCD               	goto	i1l2521
  9077                           
  9078                           ;key.c: 14: return 0x04;
  9079  05CB  3004               	movlw	4
  9080                           
  9081                           ;key.c: 15: } else if (value > 550 && value < 650) {
  9082  05CC  0008               	return
  9083  05CD                     i1l2521:	
  9084  05CD  3002               	movlw	2
  9085  05CE  0275               	subwf	Key_Read@value+1,w
  9086  05CF  3027               	movlw	39
  9087  05D0  1903               	skipnz
  9088  05D1  0274               	subwf	Key_Read@value,w
  9089  05D2  1C03               	skipc
  9090  05D3  2DDD               	goto	i1l2531
  9091  05D4  3002               	movlw	2
  9092  05D5  0275               	subwf	Key_Read@value+1,w
  9093  05D6  308A               	movlw	138
  9094  05D7  1903               	skipnz
  9095  05D8  0274               	subwf	Key_Read@value,w
  9096  05D9  1803               	skipnc
  9097  05DA  2DDD               	goto	i1l2531
  9098                           
  9099                           ;key.c: 16: return 0x02;
  9100  05DB  3002               	movlw	2
  9101                           
  9102                           ;key.c: 17: } else if (value > 750 && value < 850) {
  9103  05DC  0008               	return
  9104  05DD                     i1l2531:	
  9105  05DD  3002               	movlw	2
  9106  05DE  0275               	subwf	Key_Read@value+1,w
  9107  05DF  30EF               	movlw	239
  9108  05E0  1903               	skipnz
  9109  05E1  0274               	subwf	Key_Read@value,w
  9110  05E2  1C03               	skipc
  9111  05E3  2DED               	goto	i1l2541
  9112  05E4  3003               	movlw	3
  9113  05E5  0275               	subwf	Key_Read@value+1,w
  9114  05E6  3052               	movlw	82
  9115  05E7  1903               	skipnz
  9116  05E8  0274               	subwf	Key_Read@value,w
  9117  05E9  1803               	skipnc
  9118  05EA  2DED               	goto	i1l2541
  9119                           
  9120                           ;key.c: 18: return 0x01;
  9121  05EB  3001               	movlw	1
  9122                           
  9123                           ;key.c: 19: } else {
  9124  05EC  0008               	return
  9125  05ED                     i1l2541:	
  9126                           
  9127                           ;key.c: 20: return 0x00;
  9128  05ED  3000               	movlw	0
  9129  05EE  0008               	return
  9130  05EF                     __end_of_Key_Read:	
  9131                           
  9132                           	psect	text58
  9133  0EED                     __ptext58:	
  9134 ;; *************** function i1_ADC_Conversion *****************
  9135 ;; Defined at:
  9136 ;;		line 22 in file "driver/src/adc.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  chn             1    wreg     unsigned char 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  chn             1    3[COMMON] unsigned char 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  2    0[COMMON] unsigned int 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9150 ;;      Params:         2       0       0       0
  9151 ;;      Locals:         1       0       0       0
  9152 ;;      Temps:          1       0       0       0
  9153 ;;      Totals:         4       0       0       0
  9154 ;;Total ram usage:        4 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_Key_Read
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           
  9164                           ;psect for function i1_ADC_Conversion
  9165  0EED                     i1_ADC_Conversion:	
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in i1_ADC_Conversion: [wreg+status,2+status,0]
  9169                           ;i1ADC_Conversion@chn stored from wreg
  9170  0EED  00F3               	movwf	i1ADC_Conversion@chn
  9171                           
  9172                           ;adc.c: 24: ADCON0bits.CHS = chn;
  9173  0EEE  0873               	movf	i1ADC_Conversion@chn,w
  9174  0EEF  00F2               	movwf	??i1_ADC_Conversion
  9175  0EF0  0DF2               	rlf	??i1_ADC_Conversion,f
  9176  0EF1  0DF2               	rlf	??i1_ADC_Conversion,f
  9177  0EF2  0021               	movlb	1	; select bank1
  9178  0EF3  081D               	movf	29,w	;volatile
  9179  0EF4  0672               	xorwf	??i1_ADC_Conversion,w
  9180  0EF5  3983               	andlw	-125
  9181  0EF6  0672               	xorwf	??i1_ADC_Conversion,w
  9182  0EF7  009D               	movwf	29	;volatile
  9183                           
  9184                           ;adc.c: 25: ADCON0bits.ADON = 1;
  9185  0EF8  141D               	bsf	29,0	;volatile
  9186                           
  9187                           ;adc.c: 26: _delay((unsigned long)((4)*(16000000/4000000.0)));
  9188  0EF9  3005               	movlw	5
  9189  0EFA                     u306_27:	
  9190  0EFA  0B89               	decfsz	9,f
  9191  0EFB  2EFA               	goto	u306_27
  9192  0EFC  0000               	nop
  9193                           
  9194                           ;adc.c: 27: ADCON0bits.GO_nDONE = 1;
  9195  0EFD  0021               	movlb	1	; select bank1
  9196  0EFE  149D               	bsf	29,1	;volatile
  9197  0EFF                     i1l22:	
  9198                           ;adc.c: 28: while ( !PIR1bits.ADIF );
  9199                           
  9200  0EFF  0020               	movlb	0	; select bank0
  9201  0F00  1F11               	btfss	17,6	;volatile
  9202  0F01  2EFF               	goto	i1l22
  9203                           
  9204                           ;adc.c: 29: PIR1bits.ADIF = 0;
  9205  0F02  1311               	bcf	17,6	;volatile
  9206                           
  9207                           ;adc.c: 30: return ADRES;
  9208  0F03  0021               	movlb	1	; select bank1
  9209  0F04  081C               	movf	28,w	;volatile
  9210  0F05  00F1               	movwf	?i1_ADC_Conversion+1
  9211  0F06  081B               	movf	27,w	;volatile
  9212  0F07  00F0               	movwf	?i1_ADC_Conversion
  9213  0F08  0008               	return
  9214  0F09                     __end_ofi1_ADC_Conversion:	
  9215                           
  9216                           	psect	text59
  9217  0F25                     __ptext59:	
  9218 ;; *************** function _EUSART_Transmit_ISR *****************
  9219 ;; Defined at:
  9220 ;;		line 66 in file "driver/src/eusart.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;		None
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1    wreg      void 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9234 ;;      Params:         0       0       0       0
  9235 ;;      Locals:         0       0       0       0
  9236 ;;      Temps:          1       0       0       0
  9237 ;;      Totals:         1       0       0       0
  9238 ;;Total ram usage:        1 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_ISR
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           
  9248                           ;psect for function _EUSART_Transmit_ISR
  9249  0F25                     _EUSART_Transmit_ISR:	
  9250                           
  9251                           ;eusart.c: 68: if ( sizeof (txBuf ) > txRemain )
  9252                           
  9253                           ;incstack = 0
  9254                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  9255  0F25  3020               	movlw	32
  9256  0F26  0020               	movlb	0	; select bank0
  9257  0F27  0248               	subwf	_txRemain,w
  9258  0F28  1803               	skipnc
  9259  0F29  2F3F               	goto	i1l68
  9260                           
  9261                           ;eusart.c: 69: {
  9262                           ;eusart.c: 70: TXREG = txBuf[txTail++];
  9263  0F2A  0849               	movf	_txTail,w
  9264  0F2B  3EA0               	addlw	(low (_txBuf| 0))& (0+255)
  9265  0F2C  0086               	movwf	6
  9266  0F2D  0187               	clrf	7
  9267  0F2E  0801               	movf	1,w
  9268  0F2F  0023               	movlb	3	; select bank3
  9269  0F30  009A               	movwf	26	;volatile
  9270  0F31  3001               	movlw	1
  9271  0F32  00F0               	movwf	??_EUSART_Transmit_ISR
  9272  0F33  0870               	movf	??_EUSART_Transmit_ISR,w
  9273  0F34  0020               	movlb	0	; select bank0
  9274  0F35  07C9               	addwf	_txTail,f
  9275                           
  9276                           ;eusart.c: 71: if ( sizeof (txBuf ) <= txTail )
  9277  0F36  3020               	movlw	32
  9278  0F37  0249               	subwf	_txTail,w
  9279  0F38  1803               	btfsc	3,0
  9280                           
  9281                           ;eusart.c: 72: {
  9282                           ;eusart.c: 73: txTail = 0;
  9283  0F39  01C9               	clrf	_txTail
  9284                           
  9285                           ;eusart.c: 74: }
  9286                           ;eusart.c: 75: txRemain++;
  9287  0F3A  3001               	movlw	1
  9288  0F3B  00F0               	movwf	??_EUSART_Transmit_ISR
  9289  0F3C  0870               	movf	??_EUSART_Transmit_ISR,w
  9290  0F3D  07C8               	addwf	_txRemain,f
  9291                           
  9292                           ;eusart.c: 76: }
  9293  0F3E  0008               	return
  9294  0F3F                     i1l68:	
  9295                           
  9296                           ;eusart.c: 77: else
  9297                           ;eusart.c: 78: {
  9298                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  9299  0F3F  0021               	movlb	1	; select bank1
  9300  0F40  1211               	bcf	17,4	;volatile
  9301  0F41  0008               	return
  9302  0F42                     __end_of_EUSART_Transmit_ISR:	
  9303  007E                     btemp	set	126	;btemp
  9304  007E                     int$flags	set	126
  9305  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        12
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      71
    BANK1            80      7      71
    BANK2            80      0       0

Pointer List with Targets:

    Key_SetActionHandler@handler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Led_OnKeyPressed(), 

    key_idle_cb	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    key_press_cb	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Led_OnKeyPressed(), Absolute function(), 

    Util_DecValue@pSrc	PTR unsigned int  size(1) Largest target is 32
		 -> gLedPara.blue_bright(BANK1[2]), gLedPara.white_bright(BANK1[2]), gLedPara.all_bright(BANK1[2]), gLedPara(BANK1[32]), 

    Util_IncValue@pSrc	PTR unsigned int  size(1) Largest target is 32
		 -> gLedPara.blue_bright(BANK1[2]), gLedPara.white_bright(BANK1[2]), gLedPara.all_bright(BANK1[2]), gLedPara(BANK1[32]), 

    loadDuty	PTR FTN(unsigned int ,)void [2] size(2) Largest target is 1
		 -> PWM3_LoadDutyValue(), PWM1_LoadDutyValue(), 

    FLASH_ReadBuffer@buf	PTR unsigned char  size(1) Largest target is 32
		 -> gLedPara(BANK1[32]), 

    FLASH_WriteBlock@buf	PTR unsigned char  size(1) Largest target is 32
		 -> gLedPara(BANK1[32]), 

    TMR2_SetInterruptHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> Led_Run(), 

    tmr2_isr_handler	PTR FTN()void  size(2) Largest target is 1
		 -> Led_Run(), Absolute function(), 

    tmr1_gate_isr_handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    tmr1_isr_handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    tmr0_isr_handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    eusart_rcv_isr_handler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _Led_RunMusic->_Led_DynamicCloud
    _Led_RunMusic->_Led_DynamicStorm
    _Led_Ramp->_PWM1_LoadDutyValue
    _Led_Ramp->_PWM3_LoadDutyValue
    _Led_DynamicStorm->i1___wmul
    _Led_DynamicCloud->i1___wmul
    _Audio_SelectSound->i1_EUSART_Write
    _Key_Scan->_Led_OnKeyPressed
    _Led_OnKeyPressed->_Util_DecValue
    _Led_OnKeyPressed->_Util_IncValue
    _Led_OnKeyPressed->i1_Led_Initialize
    i1_Led_Initialize->i1_Audio_SetPlayMode
    i1_Led_Initialize->i1_Audio_SetVolume
    i1_Audio_StopSound->i1_EUSART_Write
    i1_Audio_SetVolume->i1_EUSART_Write
    i1_Audio_SetPlayMode->i1_EUSART_Write
    _Key_Read->i1_ADC_Conversion

Critical Paths under _main in BANK0

    _main->_Audio_GetValue
    _SYSTEM_Initialize->_EUSART_Initialize_Default
    _Led_SaveParaIfChanged->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _Led_Initialize->_Audio_SetPlayMode
    _Led_Initialize->_Audio_SetVolume
    _Audio_StopSound->_EUSART_Write
    _Audio_SetVolume->_EUSART_Write
    _Audio_SetPlayMode->_EUSART_Write
    _Led_InitPara->_FLASH_ReadBuffer
    _FLASH_ReadBuffer->_FLASH_ReadByte
    _Interrupt_Initialize->_Key_SetActionHandler
    _Interrupt_Initialize->_TMR2_SetInterruptHandler
    _Audio_GetValue->___wmul

Critical Paths under _ISR in BANK0

    _TMR2_ISR->_Led_Run
    _Led_RunMusic->_Led_DynamicCloud
    _Led_RunMusic->_Led_DynamicStorm

Critical Paths under _main in BANK1

    _Led_SaveParaIfChanged->_FLASH_WriteBlock
    _Led_InitPara->_FLASH_ReadBuffer

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3165
                     _Audio_GetValue
               _Interrupt_Initialize
                       _Led_InitPara
                     _Led_Initialize
              _Led_SaveParaIfChanged
                  _SYSTEM_Initialize
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
             _ADC_Initialize_Default
          _EUSART_Initialize_Default
             _OSC_Initialize_Default
                     _PIN_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
            _TMR2_Initialize_Default
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize_Default                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_Initialize_Default                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize_Default                            1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize_Default                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Led_SaveParaIfChanged                                1     1      0     806
                                             15 BANK0      1     1      0
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    10     7      3     806
                                             12 BANK0      3     0      3
                                              0 BANK1      7     7      0
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     142
                                              9 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Led_Initialize                                       4     4      0     702
                                             14 BANK0      2     2      0
                                              0 BANK1      2     2      0
                  _Audio_SetPlayMode
                    _Audio_SetVolume
                    _Audio_StopSound
                    _Led_TurnOffRamp
                  _Led_TurnOnAllRamp
                 _Led_TurnOnBlueRamp
                _Led_TurnOnWhiteRamp
 ---------------------------------------------------------------------------------
 (2) _Led_TurnOnWhiteRamp                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Led_TurnOnBlueRamp                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Led_TurnOnAllRamp                                    2     2      0      99
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Led_TurnOffRamp                                      2     2      0      99
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Audio_StopSound                                      2     2      0     133
                                             11 BANK0      2     2      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Audio_SetVolume                                      3     3      0     167
                                             11 BANK0      3     3      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Audio_SetPlayMode                                    3     3      0     167
                                             11 BANK0      3     3      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      93
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Led_InitPara                                         1     1      0     598
                                              2 BANK1      1     1      0
                   _FLASH_ReadBuffer
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadBuffer                                     7     4      3     598
                                             12 BANK0      5     2      3
                                              0 BANK1      2     2      0
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadByte                                       3     1      2     219
                                              9 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Initialize                                 0     0      0     172
               _Key_SetActionHandler
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2      86
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Key_SetActionHandler                                 2     0      2      86
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Audio_GetValue                                       8     8      0     887
                                             15 BANK0      2     2      0
                                              0 BANK1      6     6      0
                     _ADC_Conversion
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Conversion                                       4     2      2      22
                                              9 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  1     1      0    5294
                                              8 BANK0      1     1      0
                _EUSART_Transmit_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0    5294
                   Absolute function *
                            _Led_Run *
 ---------------------------------------------------------------------------------
 (6) _Led_Run                                              1     1      0    5294
                                              7 BANK0      1     1      0
                           _Key_Scan
                           _Led_Ramp
                       _Led_RunMusic
 ---------------------------------------------------------------------------------
 (7) _Led_RunMusic                                         1     1      0    2362
                                             12 COMMON     1     1      0
                  _Audio_SelectSound
                   _Led_DynamicCloud
                   _Led_DynamicStorm
                           _Led_Ramp
 ---------------------------------------------------------------------------------
 (8) _Led_Ramp                                             7     7      0     482
                                              4 COMMON     7     7      0
                 _PWM1_LoadDutyValue *
                 _PWM3_LoadDutyValue *
 ---------------------------------------------------------------------------------
 (8) _Led_DynamicStorm                                    13    11      2     882
                                              6 COMMON     6     4      2
                                              0 BANK0      7     7      0
                 _PWM1_LoadDutyValue *
                 _PWM3_LoadDutyValue *
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) _Led_DynamicCloud                                    13    11      2     883
                                              6 COMMON     6     4      2
                                              0 BANK0      7     7      0
                 _PWM1_LoadDutyValue *
                 _PWM3_LoadDutyValue *
                           i1___wmul
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     196
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) _PWM3_LoadDutyValue                                   4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _PWM1_LoadDutyValue                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _Audio_SelectSound                                    3     3      0     115
                                              2 COMMON     3     3      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _Key_Scan                                             2     2      0    2450
                                              0 BANK0      2     2      0
                   Absolute function *
                           _Key_Read
                   _Led_OnKeyPressed *
 ---------------------------------------------------------------------------------
 (8) _Led_OnKeyPressed                                     5     4      1    2140
                                              9 COMMON     5     4      1
                      _Util_DecValue
                      _Util_IncValue
                  i1_Audio_SetVolume
                  i1_Audio_StopSound
                   i1_Led_Initialize
                i1_Led_TurnOnAllRamp
               i1_Led_TurnOnBlueRamp
              i1_Led_TurnOnWhiteRamp
 ---------------------------------------------------------------------------------
 (9) i1_Led_Initialize                                     4     4      0     479
                                              5 COMMON     4     4      0
                i1_Audio_SetPlayMode
                  i1_Audio_SetVolume
                  i1_Audio_StopSound
                  i1_Led_TurnOffRamp
                i1_Led_TurnOnAllRamp
               i1_Led_TurnOnBlueRamp
              i1_Led_TurnOnWhiteRamp
 ---------------------------------------------------------------------------------
 (9) i1_Led_TurnOnWhiteRamp                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_Led_TurnOnBlueRamp                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_Led_TurnOnAllRamp                                  2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) i1_Led_TurnOffRamp                                   2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) i1_Audio_StopSound                                   2     2      0      91
                                              2 COMMON     2     2      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (10) i1_Audio_SetVolume                                   3     3      0     114
                                              2 COMMON     3     3      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (10) i1_Audio_SetPlayMode                                 3     3      0     114
                                              2 COMMON     3     3      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (9) i1_EUSART_Write                                       2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _Util_IncValue                                        9     5      4     628
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (9) _Util_DecValue                                        9     5      4     628
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) _Key_Read                                             2     2      0     221
                                              4 COMMON     2     2      0
                   i1_ADC_Conversion
 ---------------------------------------------------------------------------------
 (9) i1_ADC_Conversion                                     4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Audio_GetValue
     _ADC_Conversion
     ___wmul
   _Interrupt_Initialize
     _Key_SetActionHandler
     _TMR2_SetInterruptHandler
   _Led_InitPara
     _FLASH_ReadBuffer
       _FLASH_ReadByte
   _Led_Initialize
     _Audio_SetPlayMode
       _EUSART_Write
     _Audio_SetVolume
       _EUSART_Write
     _Audio_StopSound
       _EUSART_Write
     _Led_TurnOffRamp
     _Led_TurnOnAllRamp
     _Led_TurnOnBlueRamp
     _Led_TurnOnWhiteRamp
   _Led_SaveParaIfChanged
     _FLASH_WriteBlock
       _FLASH_EraseBlock
   _SYSTEM_Initialize
     _ADC_Initialize_Default
     _EUSART_Initialize_Default
     _OSC_Initialize_Default
     _PIN_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize_Default
   _TMR2_StartTimer

 _ISR (ROOT)
   _EUSART_Transmit_ISR
   _TMR2_ISR
     Absolute function(Fake) *
     _Led_Run *
       _Key_Scan
         Absolute function(Fake) *
         _Key_Read *
           i1_ADC_Conversion
         _Led_OnKeyPressed *
           _Util_DecValue
           _Util_IncValue
           i1_Audio_SetVolume
             i1_EUSART_Write
           i1_Audio_StopSound
             i1_EUSART_Write
           i1_Led_Initialize
             i1_Audio_SetPlayMode
               i1_EUSART_Write
             i1_Audio_SetVolume
               i1_EUSART_Write
             i1_Audio_StopSound
               i1_EUSART_Write
             i1_Led_TurnOffRamp
             i1_Led_TurnOnAllRamp
             i1_Led_TurnOnBlueRamp
             i1_Led_TurnOnWhiteRamp
           i1_Led_TurnOnAllRamp
           i1_Led_TurnOnBlueRamp
           i1_Led_TurnOnWhiteRamp
       _Led_Ramp
         _PWM1_LoadDutyValue *
         _PWM3_LoadDutyValue *
       _Led_RunMusic
         _Audio_SelectSound
           i1_EUSART_Write
         _Led_DynamicCloud
           _PWM1_LoadDutyValue *
           _PWM3_LoadDutyValue *
           i1___wmul *
         _Led_DynamicStorm
           _PWM1_LoadDutyValue *
           _PWM3_LoadDutyValue *
           i1___wmul *
         _Led_Ramp
           _PWM1_LoadDutyValue *
           _PWM3_LoadDutyValue *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     11      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      7      47       8       88.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      9C      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Wed Nov 22 09:53:22 2017

                  ??i1_EUSART_Write 0070          __size_of_Audio_SetPlayMode 0027  
  __end_of_TMR2_SetInterruptHandler 0D28                                   pc 0002  
               i1ADC_Conversion@chn 0073          __size_of_Audio_SelectSound 002A  
                       __CFG_CP$OFF 0000                                  l22 07E8  
                                l58 072A                                  _RD 0CA8  
                                _WR 0CA9                       _Util_IncValue 0659  
               ___wmul@multiplicand 0055                    i1___wmul@product 0074  
            _ADC_Initialize_Default 0D52                         __CFG_LVP$ON 0000  
                               l315 033A                                 l316 032E  
                               l262 0454                                 l372 0525  
                               l373 0531                                 l279 0D2B  
                               l389 03EF                                 l665 0F12  
              _Key_SetActionHandler 0D1C                                 l579 0708  
                               _GIE 005F                                 _PR2 001B  
                               _ISR 0004                     _Led_TurnOffRamp 0E14  
   __end_of_TMR2_Initialize_Default 0D64                     _PWM4_Initialize 0D40  
                      __CFG_BORV$LO 0000                                 wreg 0009  
             ?_Interrupt_Initialize 0070                                ?_ISR 0070  
         _EUSART_Initialize_Default 0E3D                                l3219 0E99  
                              l3403 051C                                l3171 073E  
                              l3157 071F                                l3421 03B4  
                              l3253 043E                                l3245 041C  
                              l3271 0746                                l3433 03D4  
                              l3363 0322                                l3435 03D8  
                              l3443 03E1                                l3419 03A0  
                              l3437 03DB                                l3367 0336  
                              l3391 04FB                                l3383 04E5  
                              l3439 03DE                                l2905 0F0C  
                              l3395 0506                                l3387 04F0  
                              l3399 0511                                l3497 0716  
                              l3499 0719                                _CFGS 0CAE  
                      __CFG_WDTE$ON 0000                                _GAIN 07F5  
           __end_of_PWM1_Initialize 0D34                                _FREE 0CAC  
                              _LATA 010C                                _LATB 010D  
                              u3007 03C9                                _LATC 010E  
                              u3017 07E3                                u2275 0F13  
                              u2620 0F7E                                u2700 045B  
                              u2285 0F18                                u2640 0E98  
                              u2665 0403                                i1l22 0EFF  
                              u2785 0328                                u2795 0334  
                              u2977 0388                                i1l58 0775  
                              u2987 0395                                i1l68 0F3F  
                              u2997 03BC                                _LWLO 0CAD  
                              _TMR0 0015                                _TMR1 0016  
                              _TMR2 001A              ?i1_Led_TurnOnWhiteRamp 0070  
                              _WREN 0CAA                                _WPUA 020C  
                              _WPUB 020D                        __CFG_WRT$OFF 0000  
          __end_ofi1_ADC_Conversion 0F09                                _main 06F7  
                 ?_Led_DynamicCloud 0076                                fsr0h 0005  
                              fsr1h 0007                                indf0 0000  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                 ?_FLASH_WriteBlock 0056                      ?_Util_DecValue 0070  
                 ?_Led_DynamicStorm 0076                                start 0020  
                     __CFG_IESO$OFF 0000                  ??_Led_DynamicCloud 0078  
                  Util_DecValue@min 0070                  ??_FLASH_WriteBlock 00E0  
                     __CFG_MCLRE$ON 0000                     __end_of_Led_Run 0E3D  
                ??_Led_DynamicStorm 0078                               ??_ISR 0052  
                     __CFG_LPBOR$ON 0000                 Led_DynamicCloud@val 004A  
               Led_DynamicCloud@ptp 0076                      ?_Util_IncValue 0070  
           __end_of_PWM2_Initialize 0D3A                       ?_EUSART_Write 0070  
             ?_Key_SetActionHandler 0053                               ?_main 0070  
                             _ADRES 009B                               _T1CON 0018  
                             _T2CON 001C                   _Led_TurnOnAllRamp 0E53  
                             i1l422 0061                               i1l440 012D  
                             i1l418 0042                               i1l436 00EF  
                             i1l429 00A8                               i1l462 0236  
                             i1l447 0169                               i1l389 059B  
                             i1l591 001B                               i1l665 0EBF  
                             i1l588 0013                               _PMADR 0191  
                             _PMDAT 0193                               _RCREG 0199  
                             _RCSTA 019D                               _SPBRG 019B  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                               _TXREG 019A  
                             _TXSTA 019E             __size_of_PIN_Initialize 0018  
                ?_Led_TurnOnAllRamp 0070                       __CFG_PWRTE$ON 0000  
                    __CFG_FCMEN$OFF 0000                    __end_of_TMR2_ISR 0D7C  
                             _txBuf 00A0                __end_of_Led_InitPara 0535  
            ??i1_Led_TurnOnBlueRamp 0070             __end_of_PWM3_Initialize 0D40  
                    __CFG_BOREN$OFF 0000                               pclath 000A  
               ??_Led_TurnOnAllRamp 0053                    __end_ofi1___wmul 0ED2  
               FLASH_WriteBlock@buf 0058                               status 0003  
               i1___wmul@multiplier 0070                               wtemp0 007E  
             Audio_SetPlayMode@type 0056                     _TMR2_StartTimer 0D19  
                 Util_DecValue@pSrc 0078                        __end_of_GAIN 07FA  
           __size_of_Audio_GetValue 0074                    __end_of_Led_Ramp 030E  
                   __initialization 0022                __end_of_Led_RunMusic 062F  
                      __end_of_main 071D                    __end_of_Key_Read 05EF  
                  __end_of_Key_Scan 04CA            ??_OSC_Initialize_Default 0053  
           __end_of_Led_TurnOffRamp 0E28                      ??_EUSART_Write 0053  
           __end_of_PWM4_Initialize 0D46           __end_of_Led_TurnOnAllRamp 0E6A  
              Led_DynamicCloud@duty 004C            _TMR2_SetInterruptHandler 0D22  
                            ??_main 005B             __size_of_FLASH_ReadByte 001A  
               Led_DynamicStorm@val 004E                 Led_DynamicStorm@ptp 0076  
            ??_Interrupt_Initialize 0055                              _ADCON0 009D  
                            _ADCON1 009E                              _ADCON2 009F  
                            i1S3521 0800                              _ANSELA 018C  
                            _ANSELB 018D                              _ANSELC 018E  
               i1_Audio_SetPlayMode 07B0                    ?_PWM1_Initialize 0070  
                            i1l2125 076A                              i1l2233 0679  
                            i1l2401 013F                              i1l2139 0789  
                            i1l2403 014F                              i1l2501 05AD  
                            i1l2421 02C3                              i1l2511 05BD  
                            i1l2239 06A1                              i1l2263 0552  
                            i1l2521 05CD                              i1l2281 0587  
                            i1l2265 0562                              i1l2361 00C1  
                            i1l2329 005C                              i1l2409 0155  
                            i1l2441 0234                              i1l2425 02EC  
                            i1l2531 05DD                              i1l2283 058A  
                            i1l2347 0091                              i1l2339 007A  
                            i1l2291 0EB9                              i1l2451 025D  
                            i1l2427 02F8                              i1l2541 05ED  
                            i1l2277 0580                              i1l2279 0584  
                            i1l2287 058D                              i1l2391 0128  
                            i1l2383 010B                              i1l2455 027F  
                            i1l2471 019E                              i1l2623 060F  
                            i1l2631 0622                              i1l2369 00D8  
                            i1l2481 01C9                              i1l2625 0612  
                            i1l2387 011A                              i1l2627 061A  
                            i1l2397 013A                              i1l2661 0494  
                            i1l2485 01EB                              i1l2469 019C  
                            i1l2681 04C0                              i1l2673 04B0  
                            i1l2649 0476                              i1l2659 0491  
                            i1l2685 04C4                              i1l2881 0E34  
                            u140_25 066D                              i1l2885 0E3A  
                            u141_25 0695                              u302_27 053A  
                            u303_27 0547                              u304_27 0569  
                            u305_27 0575                              u162_20 0126  
                            u138_25 0DC4                              u146_25 0EC0  
                            u170_25 02DF                              u306_27 0EFA  
                            u139_25 0DB5                              u147_25 0EC5  
                            u172_25 022D                              u180_25 01DF  
                            u165_20 0138                              u174_25 0251  
                            u175_25 0273                              u177_25 0195  
                            u169_25 02B7                              _PMDATL 0193  
                            u179_25 01BD                              _PMCON2 0196  
         __size_of_FLASH_EraseBlock 0020                     ??_Util_DecValue 0074  
                            _OSCCON 0099                              _PWM1DC 0611  
                            _PWM2DC 0614                              _PWM3DC 0617  
                            _PWM4DC 061A                           ??_Led_Run 0051  
                            _VOLUME 07FA                  _Led_TurnOnBlueRamp 0D7C  
                 ?i1_Led_Initialize 0070             __size_of_Led_Initialize 006E  
                ??i1_Led_Initialize 0075    __size_of_TMR2_Initialize_Default 000A  
                   ??_Util_IncValue 0074                 ?_Led_TurnOnBlueRamp 0070  
       __size_of_PWM3_LoadDutyValue 000F                              ___wmul 0F09  
                    __CFG_STVREN$ON 0000                 Audio_GetValue@value 0059  
              ?i1_Audio_SetPlayMode 0070                 _EUSART_Transmit_ISR 0F25  
                  ?_PWM2_Initialize 0070              ??_Key_SetActionHandler 0055  
         __size_of_FLASH_ReadBuffer 0026                              _txHead 0047  
                            _txTail 0049        __size_of_Led_TurnOnWhiteRamp 000E  
      __size_ofi1_Led_TurnOnAllRamp 0014                       Key_Read@value 0074  
              FLASH_WriteBlock@addr 0056                ??_Led_TurnOnBlueRamp 0053  
           __end_of_TMR2_StartTimer 0D1C                ?_EUSART_Transmit_ISR 0070  
                Util_DecValue@delta 0072                    ?_PWM3_Initialize 0070  
                 _SYSTEM_Initialize 0ED2             __end_of__initialization 003D  
                ?_SYSTEM_Initialize 0070      __size_of_Led_SaveParaIfChanged 000F  
     __end_of_Led_SaveParaIfChanged 0DDD                    Led_TurnOffRamp@i 0054  
       PWM1_LoadDutyValue@dutyValue 0070                  _Led_Initialize$595 00E0  
                    __pcstackCOMMON 0070                        __pidataBANK0 0D88  
               ??_SYSTEM_Initialize 0054           __size_of_Led_OnKeyPressed 0129  
             ??i1_Audio_SetPlayMode 0072                           ?_TMR2_ISR 0070  
             Led_DynamicCloud@F4456 005B             ?_ADC_Initialize_Default 0070  
                  ?_Led_TurnOffRamp 0070     __size_of_OSC_Initialize_Default 0006  
                        _adc_result 0031                  _PWM1_LoadDutyValue 0DBF  
                  ?_PWM4_Initialize 0070          __size_of_Led_TurnOnAllRamp 0017  
                         ?i1___wmul 0070                      _PIN_Initialize 0E6A  
                    _OPTION_REGbits 0095               __size_of_Led_InitPara 006B  
               ?_PWM1_LoadDutyValue 0070                   i1_Audio_SetVolume 078D  
           ??i1_Led_TurnOnWhiteRamp 0070                           ?_Led_Ramp 0070  
         __end_of_SYSTEM_Initialize 0EED               ??_EUSART_Transmit_ISR 0070  
                ?i1_Audio_SetVolume 0070                          __pbssBANK0 0020  
                        __pbssBANK1 00A0                           ?_Key_Read 0070  
                         ?_Key_Scan 0070            __size_of_Audio_SetVolume 0027  
              __end_of_EUSART_Write 0743          FLASH_WriteBlock@start_addr 00E3  
              Led_DynamicStorm@duty 004A               __size_of_Led_RunMusic 0040  
                 ?i1_ADC_Conversion 0070             __size_of_ADC_Conversion 0022  
               ??i1_Audio_SetVolume 0072                      _Audio_GetValue 030E  
              ??_PWM1_LoadDutyValue 0072                  ??i1_ADC_Conversion 0072  
                        __pmaintext 06F7                   i1_Audio_StopSound 0E9C  
    __end_of_ADC_Initialize_Default 0D5A                             ?___wmul 0053  
                        ??_TMR2_ISR 007E     TMR2_SetInterruptHandler@handler 0053  
                ?i1_Audio_StopSound 0070                          __pintentry 0004  
                      _Led_InitPara 04CA                             _BAUDCON 019F  
          __size_of_Audio_StopSound 001E           __size_of_Led_DynamicCloud 0094  
            __end_of_PIN_Initialize 0E82           __size_of_FLASH_WriteBlock 006D  
                        ??i1___wmul 0074                      _FLASH_ReadByte 0E82  
         __size_of_Led_DynamicStorm 0098                 ??i1_Audio_StopSound 0072  
         __end_ofi1_Audio_SetVolume 07B0                             _PWM1CON 0613  
                           _PWM2CON 0616                             _PWM3CON 0619  
                           _PWM4CON 061C                        _Led_RunMusic 05EF  
                        ??_Led_Ramp 0074                    ?_TMR2_StartTimer 0070  
            _OSC_Initialize_Default 0D28                          ??_Key_Read 0074  
                        ??_Key_Scan 004A                    _FLASH_EraseBlock 0F60  
                  Util_IncValue@max 0070              __end_of_Audio_GetValue 0382  
                           _Led_Run 0E28           __end_ofi1_Audio_StopSound 0EB7  
                    _Led_Initialize 0382             _TMR2_Initialize_Default 0D5A  
        ??_TMR2_SetInterruptHandler 0055                     __size_of___wmul 001C  
            __end_of_FLASH_ReadByte 0E9C                    _FLASH_ReadBuffer 0743  
                           __ptext1 0D19                             __ptext2 0ED2  
                           __ptext3 0D5A                             __ptext4 0D40  
                           __ptext5 0D3A                             __ptext6 0D34  
                           __ptext7 0D2E                             __ptext8 0E6A  
                           __ptext9 0D28                     ?_PIN_Initialize 0070  
                      __size_of_ISR 001C                           _T1CONbits 0018  
                         _T2CONbits 001C             __size_ofi1_EUSART_Write 0024  
             _tmr1_gate_isr_handler 003D          __size_of_SYSTEM_Initialize 001B  
                           clrloop0 0D47                  i1Led_TurnOffRamp@i 0071  
              end_of_initialization 003D                         _gLedRunPara 0020  
            __end_of_Led_Initialize 03F0                             init_ram 0D4C  
           Audio_SetVolume@checksum 0057                     ?_Audio_GetValue 0070  
     __size_ofi1_Led_TurnOnBlueRamp 000C                             initloop 0D4D  
               _Led_TurnOnWhiteRamp 0DA2                 i1_Led_TurnOnAllRamp 0E00  
           Audio_StopSound@checksum 0056           Audio_SetPlayMode@checksum 0057  
                 ??_Audio_SetVolume 0055                      Key_Scan@keyNum 004B  
             FLASH_WriteBlock@state 00E5                    _Led_OnKeyPressed 0041  
                      __pstringtext 07F5           i1Audio_SetVolume@checksum 0074  
             i1___wmul@multiplicand 0072                           Led_Ramp@i 007A  
                   ?_FLASH_ReadByte 0053           i1Audio_StopSound@checksum 0073  
              ?_Led_TurnOnWhiteRamp 0070                ?i1_Led_TurnOnAllRamp 0070  
         __size_ofi1_Led_Initialize 0067          __size_ofi1_Audio_SetVolume 0023  
                  __CFG_FOSC$INTOSC 0000                   ??_Audio_StopSound 0055  
             __size_of_EUSART_Write 0026       __size_of_Interrupt_Initialize 0010  
                   ?_Led_Initialize 0070                   Led_DynamicCloud@i 0050  
                    _ADC_Conversion 07D3           ??_TMR2_Initialize_Default 0053  
             __end_of_Util_DecValue 06A9          __size_ofi1_Audio_StopSound 001B  
                    __end_of_VOLUME 07FF          __end_of_PWM3_LoadDutyValue 0DBF  
                 FLASH_WriteBlock@i 00E6                  Util_IncValue@delta 0072  
          __size_of_PWM1_Initialize 0006                   Led_DynamicStorm@i 0050  
             __end_of_Util_IncValue 0681                      __end_of___wmul 0F25  
                  _Led_DynamicCloud 0202                        _EUSART_Write 071D  
             ??_Led_TurnOnWhiteRamp 0053                   __size_of_TMR2_ISR 000C  
                 Audio_GetValue@cnt 0029               ??i1_Led_TurnOnAllRamp 0070  
                 Audio_GetValue@max 002B                   Audio_GetValue@min 002D  
                  _FLASH_WriteBlock 03F0                _Led_OnKeyPressed$609 007C  
                  _Led_DynamicStorm 016A       __size_of_Key_SetActionHandler 0006  
       i1Audio_SetPlayMode@checksum 0074         Key_SetActionHandler@handler 0053  
               start_initialization 0022                   __size_ofi1___wmul 001B  
                       __end_of_ISR 0020            __size_of_PWM2_Initialize 0006  
       __size_of_Led_TurnOnBlueRamp 000C               FLASH_EraseBlock@state 0055  
    __size_ofi1_Led_TurnOnWhiteRamp 000E       __end_ofi1_Led_TurnOnWhiteRamp 0DA2  
            __end_of_ADC_Conversion 07F5                   __size_of_Led_Ramp 0078  
                 __size_of_Key_Read 0053                   __size_of_Key_Scan 006D  
       __end_ofi1_Audio_SetPlayMode 07D3            __size_of_PWM3_Initialize 0006  
             _Led_SaveParaIfChanged 0DCE                            ??___wmul 0057  
                       __pdataBANK0 005B               Led_DynamicStorm@F4467 005F  
          __end_of_FLASH_EraseBlock 0F80                   i1_Led_TurnOffRamp 0DED  
         __size_ofi1_ADC_Conversion 001C                      i1_EUSART_Write 0769  
                ?i1_Led_TurnOffRamp 0070         __end_of_EUSART_Transmit_ISR 0F42  
          __size_of_Led_TurnOffRamp 0014             ?_OSC_Initialize_Default 0070  
                         ___latbits 0001                       __pcstackBANK0 004A  
                     __pcstackBANK1 00E0            __size_of_PWM4_Initialize 0006  
            Audio_SelectSound@index 0073                 ??i1_Led_TurnOffRamp 0070  
                 ADC_Conversion@chn 0056                     ?_ADC_Conversion 0053  
          __end_of_FLASH_ReadBuffer 0769                            ?_Led_Run 0070  
                      _key_press_cb 0039         __size_of_PWM1_LoadDutyValue 000F  
         Audio_SelectSound@checksum 0074                    ??_PIN_Initialize 0053  
__size_of_EUSART_Initialize_Default 0016              _eusart_rcv_isr_handler 0035  
         __end_ofi1_Led_TurnOffRamp 0E00          ?_EUSART_Initialize_Default 0070  
            __end_ofi1_EUSART_Write 078D                   ??_PWM1_Initialize 0053  
                         __pswtext1 0800                    i1_Led_Initialize 0535  
    __end_of_OSC_Initialize_Default 0D2E                   Key_Scan@idleCount 002F  
                  ??_Audio_GetValue 00E0            __end_of_Led_OnKeyPressed 016A  
                   _Audio_SetVolume 06A9                i1Audio_SetVolume@vol 0073  
                 ??_PWM2_Initialize 0053                         _audio_value 0033  
                    ___wmul@product 0057                           clear_ram0 0D46  
                          _PIE1bits 0091            __size_of_TMR2_StartTimer 0003  
            ?_Led_SaveParaIfChanged 0070                i1Led_TurnOnAllRamp@i 0071  
                          _PIR1bits 0011                    ??_FLASH_ReadByte 0055  
                          _TMR2_ISR 0D70                     _Audio_StopSound 0F42  
                  EUSART_Write@byte 0054   __end_of_EUSART_Initialize_Default 0E53  
      __end_ofi1_Led_TurnOnBlueRamp 0D70                     ?i1_EUSART_Write 0070  
                 ??_PWM3_Initialize 0053                          _ADCON0bits 009D  
                 ___wmul@multiplier 0053                            i1___wmul 0EB7  
 __size_of_TMR2_SetInterruptHandler 0006           ?_TMR2_SetInterruptHandler 0053  
                 Util_IncValue@pSrc 0078                    ??_Led_Initialize 0058  
                          _Led_Ramp 0296                            _Key_Read 059C  
                 ??_Led_TurnOffRamp 0053                            _Key_Scan 045D  
              FLASH_EraseBlock@addr 0053            __end_of_Led_DynamicCloud 0296  
                 ??_PWM4_Initialize 0053            ??_ADC_Initialize_Default 0053  
          __end_of_FLASH_WriteBlock 045D            __end_of_Led_DynamicStorm 0202  
                  __size_of_Led_Run 0015        __end_of_Interrupt_Initialize 0DED  
                          _gLedPara 00C0          __size_ofi1_Led_TurnOffRamp 0013  
                 _Audio_SetPlayMode 06D0                         _key_idle_cb 0037  
                  i1_ADC_Conversion 0EED                   _Audio_SelectSound 062F  
                ?_Audio_SetPlayMode 0070                  _PWM3_LoadDutyValue 0DB0  
           __end_of_Audio_SetVolume 06D0                  ?_Audio_SelectSound 0070  
                  _tmr0_isr_handler 003B                FLASH_ReadBuffer@addr 0056  
               ??_Audio_SetPlayMode 0055                            __ptext10 0E3D  
                          __ptext11 0D52                            __ptext20 0F42  
                          __ptext12 0DCE                            __ptext21 06A9  
                          __ptext13 03F0                            __ptext30 030E  
                          __ptext22 06D0                            __ptext14 0F60  
                          __ptext31 0F09                            __ptext23 071D  
                          __ptext15 0382                            __ptext40 0EB7  
                          __ptext32 07D3                            __ptext24 04CA  
                          __ptext16 0DA2                            __ptext41 0DBF  
                          __ptext25 0743                            __ptext17 0D7C  
                          __ptext50 0DED                            __ptext42 0DB0  
                          __ptext34 0D70                            __ptext26 0E82  
                          __ptext18 0E53                            __ptext51 0E9C  
                          __ptext43 062F                            __ptext35 0E28  
                          __ptext27 0DDD                            __ptext19 0E14  
                          __ptext52 078D                            __ptext44 045D  
                          __ptext36 05EF                            __ptext28 0D22  
                          __ptext53 07B0                            __ptext45 0041  
                          __ptext37 0296                            __ptext29 0D1C  
                          __ptext54 0769                            __ptext46 0535  
                          __ptext38 016A                            __ptext55 0659  
                          __ptext47 0D94                            __ptext39 0202  
                          __ptext56 0681                            __ptext48 0D64  
                          __ptext57 059C                            __ptext49 0E00  
                          __ptext58 0EED                 ?_PWM3_LoadDutyValue 0070  
                          __ptext59 0F25                FLASH_ReadBuffer@size 0058  
               ??_Audio_SelectSound 0072                 Led_OnKeyPressed@key 0079  
                          _keyValue 0046                            _loadDuty 0063  
      __end_of_Key_SetActionHandler 0D22                       __size_of_main 0026  
           __end_of_Audio_StopSound 0F60         __end_of_Led_TurnOnWhiteRamp 0DB0  
              ??_PWM3_LoadDutyValue 0072         __end_ofi1_Led_TurnOnAllRamp 0E14  
         __end_of_Audio_SetPlayMode 06F7                            _txRemain 0048  
                          int$flags 007E                       ?_Led_InitPara 0070  
         __end_of_Audio_SelectSound 0659                   ??_TMR2_StartTimer 0053  
                  Key_Scan@rptCount 0044                   ?_FLASH_EraseBlock 0053  
                       _OSCSTATbits 009A                  ??_FLASH_EraseBlock 0055  
                        _INTCONbits 000B              __size_of_Util_DecValue 0028  
        __end_of_Led_TurnOnBlueRamp 0D88                    ??_ADC_Conversion 0055  
                  _tmr1_isr_handler 003F                       ?_Led_RunMusic 0070  
          ?_TMR2_Initialize_Default 0070                            intlevel1 0000  
            __size_of_Util_IncValue 0028                 FLASH_ReadBuffer@buf 00E0  
                 ?_FLASH_ReadBuffer 0056               i1_Led_TurnOnWhiteRamp 0D94  
              i1_Led_TurnOnBlueRamp 0D64            __end_ofi1_Led_Initialize 059C  
   __size_of_ADC_Initialize_Default 0008                   __CFG_CLKOUTEN$OFF 0000  
                i1EUSART_Write@byte 0071                  ??_FLASH_ReadBuffer 0059  
                   _PWM1_Initialize 0D2E                     Key_Scan@lastKey 0043  
                    ??_Led_InitPara 00E2        __size_ofi1_Audio_SetPlayMode 0023  
       PWM3_LoadDutyValue@dutyValue 0070         ??_EUSART_Initialize_Default 0053  
               FLASH_ReadByte@state 0055                          _OPTION_REG 0095  
                  ?_Audio_SetVolume 0070                     _PWM2_Initialize 0D34  
                    ??_Led_RunMusic 007C                          Led_Run@cnt 0045  
                  _tmr2_isr_handler 0041                _Interrupt_Initialize 0DDD  
                FLASH_ReadByte@addr 0053                   ?_Led_OnKeyPressed 0079  
      __size_of_EUSART_Transmit_ISR 001D             i1Audio_SetPlayMode@type 0073  
                 FLASH_ReadBuffer@i 00E1             ??_Led_SaveParaIfChanged 0059  
             ?i1_Led_TurnOnBlueRamp 0070                  Audio_SetVolume@vol 0056  
                ??_Led_OnKeyPressed 007A          __end_of_PWM1_LoadDutyValue 0DCE  
                     _Util_DecValue 0681                    ?_Audio_StopSound 0070  
                   _PWM3_Initialize 0D3A                i1_Led_Initialize$595 0077  
                Led_TurnOnAllRamp@i 0054  
